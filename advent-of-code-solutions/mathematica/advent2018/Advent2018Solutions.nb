(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    334340,       7716]
NotebookOptionsPosition[    326627,       7456]
NotebookOutlinePosition[    326986,       7472]
CellTagsIndexPosition[    326943,       7469]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Day 1 \[OpenCurlyDoubleQuote]Chronal \
Calibration\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.7534032521309423`*^9, 3.753403255476604*^9}, {
   3.753412282673855*^9, 3.753412283819085*^9}, {3.753414199699442*^9, 
   3.753414210719038*^9}, {3.753419606347543*^9, 3.7534196076938343`*^9}, {
   3.75402777632693*^9, 3.754027777404284*^9}, 3.754668531217095*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"frequencyChanges", "=", "\[IndentingNewLine]", 
   RowBox[{"ToExpression", "[", "\[IndentingNewLine]", 
    RowBox[{"ReadList", "[", "\[IndentingNewLine]", 
     RowBox[{"OpenRead", "[", "\[IndentingNewLine]", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], " ", ",", 
        "\"\<day1.txt\>\""}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", 
   RowBox[{"Total", "[", "frequencyChanges", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstRepeated", "=", 
   RowBox[{"Catch", "@", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"frequency", "=", "0"}], ",", 
        RowBox[{"seen", "=", 
         RowBox[{"<|", "|>"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{"True", ",", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"frequency", "+=", "f"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"seen", ",", "frequency"}], "]"}], ",", 
             RowBox[{"Throw", "[", "frequency", "]"}], ",", 
             RowBox[{
              RowBox[{"seen", "[", "frequency", "]"}], "=", "1"}]}], "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"f", ",", "frequencyChanges"}], "}"}]}], "]"}]}], "]"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", "firstRepeated"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frequencyChangesRepeated", "=", 
   RowBox[{"PadRight", "[", 
    RowBox[{"frequencyChanges", ",", 
     RowBox[{"10", "*", 
      RowBox[{"Length", "[", "frequencyChanges", "]"}]}], ",", 
     "frequencyChanges"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frequencies", "=", 
   RowBox[{"Accumulate", "[", "frequencyChangesRepeated", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "frequencies", "]"}]}], "Input",
 CellChangeTimes->{{3.753403320544031*^9, 3.753403342000657*^9}, {
   3.7534033789065523`*^9, 3.753403380935729*^9}, {3.753403414807105*^9, 
   3.753403476354609*^9}, {3.753403877012349*^9, 3.7534038945733957`*^9}, {
   3.753419060901392*^9, 3.753419064325267*^9}, {3.754027152680184*^9, 
   3.754027161633675*^9}, {3.754028526556821*^9, 3.754028551016801*^9}, {
   3.754028589082073*^9, 3.754028592222995*^9}, {3.754876194990107*^9, 
   3.7548762079829187`*^9}, {3.754876255246951*^9, 3.7548763152756243`*^9}, {
   3.754876366645627*^9, 3.7548764524782543`*^9}, 3.758671726471766*^9, {
   3.758671873004919*^9, 3.758671873839014*^9}, {3.758671904837883*^9, 
   3.7586719307002773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "543"}],
  SequenceForm["Part 1 Answer: ", 543],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7540271619682207`*^9, {3.754028532038735*^9, 3.7540285514231033`*^9}, 
   3.7540285927531*^9, 3.754876209699226*^9, {3.7548762897244053`*^9, 
   3.754876315819119*^9}, {3.754876376469694*^9, 3.754876388978343*^9}, 
   3.7548764537530537`*^9, 3.758671727781431*^9, 3.758671874853496*^9, 
   3.758671931526939*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", "\[InvisibleSpace]", "621"}],
  SequenceForm["Part 2 Answer: ", 621],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7540271619682207`*^9, {3.754028532038735*^9, 3.7540285514231033`*^9}, 
   3.7540285927531*^9, 3.754876209699226*^9, {3.7548762897244053`*^9, 
   3.754876315819119*^9}, {3.754876376469694*^9, 3.754876388978343*^9}, 
   3.7548764537530537`*^9, 3.758671727781431*^9, 3.758671874853496*^9, 
   3.758671932199181*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxc3X+c1O2g+P9LkpWVkZWVZCRZSUaSdcttJFlJRpKVZCRZSUY699nT6dxn
TqeTlZWRZN2SkWQlGUlWkpFkJRlJVpJxS/Z0kpFkJfl8v67Xax6P++6ffTy7
rvf1+/2e94/rfb2fsuzdC942LIQwOCmE//9v/Fd7cfzblOY/+Ntcjn8b8CT+
Jvg7Pf3A7VJux98p/B3H3xfwN8nfqfydwN/at+Lfifg5D8w3/xLcgtN4Mn9f
/KB82x6YT37+A8tZXvCgfDL8nUb4Qvzc+Df9Gky906/FzyP+6/AM/urn89f8
WtnecNolb3538fcN/H0hfw2fyd9F/H0R+eu7cTu2XZbwl3ZLLyVfXM0Sbju/
mXCcfxP/P4v0iZ/HedILL+XvW/h/bfqz49+s2+O05XsZ/0/98zi8kb9z+P/F
/MXh9fx9Of9Pe+RxmfiOi7Tb47Lpv4L/x3mctj3nYtojj/O0V3gltv44bfg8
bPq4bPirsP2jbR/HseE4S37h1aRv/rj4VsId528jHi4uJ75eQb44SfzAfpAl
vvtF2e1xlfzKhps/+0Ha7XF2GdvjMuV3P826Pftd3u1xlfLlcdLy43QH27Mf
ld/B/+Mq4e6HVbfHebdnv02+ne1x1vwNJ77HheRKtmdcJs1fv5Pt9Sq2x1W3
Z5xXiZ/GedLL4yLhZcPdnnGcd3ucNn/D38X2uLia7dkvyzjtcSrHdjhNeNnw
d/OX/S6N6/shdr8umj8uU776ccDy4yzt5X6bNX9Neh4Hk+aPq26Ps7af8d3e
46D1x1XCPU6m7T/j2/7st1nGh8fhYP/houPH+IxHj8tpx5/HDexxqOz49ThO
eP04THgSV03PcPL3OJ2m/HlNeYvGt764jP1dKWJ/F8q0VxJXbU+PW4wnj2vF
9/D/OLWG//e4917SdXvCqzjH9mEZJjyp2T6NU2vJH+cJz+MkLuIC6ZVxlvAq
TpBe4DhWIDyJK2yfxhnCPe6VCM97XDV/XDN/XKW+HoczhAeOmyXCkx63scfl
MvY4X7H9cRL7u5HB/g7U6L+q8c2f42TW9scp29/fJeuPa7Y/ztCeRZzEZf0v
5I+L2HFfwvXfiXvI1/0Cu9+l/5X8cQL7O1kkvvtdlXB/R5Kd5M9+lsL+jpSI
735dxllcNH+cZfsizuAyrmD368y/kT/7dW4d+eMK4f5Opgj3OJUi3N/BNPY4
lcBlXML+rgbz57hRs/4eR7DHlQLxs7hKuL9zaeuPs+ZveuaPk9Snfhz+d/4f
Z7HHuex6/uLkf5A/TuMiThC/jFOE+7tdJdzfrar5+ztm/rhi++Mi9nc7R3x/
5zPmr80fJ+8lf47DWcI9z8gQ7u9WBfu7Wv1P8sfpPPnjTuxxvxf7u5r6L/Ln
uN+P/V3NbiBdXCXc3+0U4Z6XZLDnCRXi+7uSxf4uF82f35kB88ct2POWQcrv
eUQG53Gf9cfN5o+7rL/nIbSf50Epwj0PKRLueVEeZ3GZ/vA8KYGLmv4s4wrj
o2p+jj+OywEncBInNduncMnx6XGd8ZjBNccrThA/h9OOX5wivIDLjmecwSXz
d3zjAq4Y7ni3frSPv0Npx7/nAcRP+Dvp/oArpJ/yd876a8L93Ut7vMA50vO8
I+/xw/RxAWfob89zAuPD3+lAuL/LNezvctbxhgdwzd9lHPjd7cEJnHA84gbs
eVYbTuMc9rwi6f6CO7DnWe3uP7iAPW9qdX/CWerneU+B/it7HoQ9b6rZ/zhl
/7s94Z4n1ujPBC74e6gd/zhH/3peUiY9z9Py9j9OUX7PK0seP82f8nkemLD/
Pa8jvGR57H/cQntVTN/+Nz2OR/XzJvvf81DCPS8t2v+4gXDPg9s8PuI+7HlY
u8dr3LIh/s3hIcLzuIvwAs7hIm7FJVzBZdyLKzjx3/Fv1fRwzfriwHlfP9sn
cDv2vLGMU7iF7dO4h/AM7sBZnMc5zzNxHrfhAu6lfTxPTRPueeqgvy+4hCu4
1d87z3vd/03P3z/OUyvu/7jg7yHusv9xM+VJ4wGccXucxYM4h1O0X970cAG3
Y8+jS2xfwn24fp5O/Apus/9xh/2PGzbGv4Hz6F7CPY/P4yRuJX4K1+x/nCQ8
g8uEZ70uoLw53GD9TY/wAh6y/ngQe12QIj+vC7pwxeuG/4l/ve4oEV7zOoLw
wHlzA07gTux1Shl7nRI2kY/n3YR73dGPvS4p4RzuwXk8gAu4nfS9DujCJTxE
/DJuI9zrnD7r7/bY64y89ee6IGf9cYr0krjX+nsdYv29rsBeV/Vgr0MGcc7r
pPdRDpzB9esc7HVLDnsd1YLLuIC9buvFVdzaFf/WLB8O/M4l3s9fXMBeJ3Vi
rwPT2PO4BpzBVdLP4hbCvc5M4Txuxv7u5tne65w2XMIVXMaD2OukDOl5Xtq8
Of71vHSIcK/7atYft1t/r8usP+6x/m5P/p6ntpGf15EV7HXaEM573vsB/nqe
jj3PzHTHv553DxDueXIn9jw/QXyvK3ux5zkt2PP+Gtt73dqHvQ5IY68bctjz
3BSuX3dir5uT5Od50yDhnie1W39ctP6mb/1xCZfxkPXHHdjr7AyuuT32vL/V
+ntebv1xj/XHLdYf91p/06N8XlcXrb/hHyQfnMKel3bhIh7CXtcMYM8727HX
ESXsdUwGe17csiX+9booib2O7CN+/T4B4Z5Ht2Kvo2rE977BIM7iduLnvK9g
/b2vQPt4Xt+BPe/tsv8tj/XHOcK9T1F2/Hte7fi3vI5/zqOr2PPuPpz0Oh17
Hj+E016nY6/bmh3/uA3nzM/9H/djz+sHsfcBmq2/9wHc/72OIH7F6wKPf+aP
vU7s8PjndRj2Oi94PNSk34w7sNd5vcT3OiTr8RI3c3z0uq7i76fpYa8rk55P
4B7OX7xubPb8wvJhrzOrnC95XWo/eV/KceR1kP1cv0/juLF9PO57X8vjlOfV
2Ptc7rdehznuvU/kOPA63H7rt37+v+3J9l7He97qeb3Xwd6nCm8qx3LV048e
ii5MvB7NdV/+qdjrPM11Y1VzXyupk2xvetw3Kz0Nc58vOQlzXZLRXIekno65
riwZniF/zXVlwvjc10sY3hFd07noou6Mrrh9HhvOdU7V8nMdlNU9lM/6ch+x
YDjXbVnT47ospblOzhi/HJ02nPugCcO5j5mzvblPWZuAuS9aNJzrwqzlq5Gf
4Vx3J+r9vyHWXzdEF+r9H50yP677sk+x/6PzSfs/uvRk+z+6qr2ONz7XtQnN
dXBGc183Y35cl1cN5z5xUnvdbX7cR6jpzuii8bkuT2nuQyTNj+vYnOFc5+dM
j+u64nj7Hz/J/o8ua65bM8bnvkJBcx8ipbnPUdJcZ2ctTxVbHq6zK5rryuxY
+5/8n2D/x+Nksdn+j84azn2UvOY6vWL8JNsbzn2RlPlxnV/RrdHJcfY/8Z9o
/5Oe4Znogu3HfYGy4dnohOY6v2x5uO9Ttryd1O/x9j8eY/+T/+Psf+rfZP+T
n+FFyqe5j5A1fim6pPuia5r7BEndT/6Ptf9JTw+wveZ3rqS5T5DU3Keojrb/
Kb/5hfi7mtLcF6nqBL+71q8ZG859j5rpt0QXNPcpEpaH+yjVx9j/pGf8tuii
4ZnovG6PTho/G501vIP0dC46bfxO0tf56IzmPkrO7QvRpYT9T/ij7f/osuG9
lMdw7rvkdR/tNcr+p30M7ydcV2gv0x+gfrpKext/kPLqGu2lh6iv23PeVLB/
uA9Uqfc/4ZrzrmK9/6PLjo+W6JROEW78VtI3nPtUKffHtuic+2smuqrbOc9z
/+Y+VkF3RCfq+390WnNfq2B63AfKmT/3iaq6QHk9PnDfKlff/0nPcO4T5d2e
+14l8+O+VMrycF8tazj3zVK6Ep00PvfJEoZXqZ8ejK55vK0R3+Mn983yHi+5
j1fx96UhOm14Ijrn+GjG9f4nvuEt0VXtfbT6/h9ddn9LR6cM5z5e2vQz0XnD
uS+YqO//0bX6/o8d37nokvtbJ+nV9//ojOc33Gesej5UiC56vsh9vVKL/U95
dC/xdYny6D7aQ5dpj/r5H66f/xHf8AH6y3DuOxYM5z5j2vAa+esh6m/8EO8T
5g1v4L6h9U1El3VzdE4nowua+5I1nYpOPMP+J/3J9j82vC26qLkvWtPt0Sm3
5z5pyfCO6IzmvmnB+J3UR+dJ/5n2P+2hua+a1j3UX3MfNznF/o+umn6J+ug+
ymP5ypRH99Nexq+Qvx4gfeNXyd/wQWz5aqRn+YbY3vAQr8tLbt8QXTE8gQ3n
Oj5reDI6Y3gL4ZYvFV0znPvQJbdPR5ctH/d5K8+y/6MTU+3/6LTh2eiU4R3k
Z3guumr6nZTXcO4z5w3vii4aXqA+mvvmKV2MLtT7n/LpEvnpPuJb/zL3RXQ/
6Ruf+9wpwwdoD8199rLmPnjR7bkvnbe8Q9TH9uI+T15zHz+peS6Q0dynT2vu
i6eebf9z30dzn79q/NboguE8R0im7H/iG859/ITh3JdPG859pozmvlbB+Lno
8nPsf8Kn2f+k/1z7n/JonoNkjM99/4rpFSmP5j5YUpfI3/L0EV9zn66i+ymP
+VWis3ogumT61eic2w9SXs1zjbLtw3OPSr3/4328suOjIbqgE9E5xxPPUUqG
J6OruoX4OhVdc/tW7hvqdHS2vv8TXt//cX3/j64YP0t5NPclS8bPRSetfyfb
a+6bFnUX5XX7QnTe9uyJTtX7HxveS310CZt+H+3r9mXyq/c/Nj7PjXKWZ4Dy
au4jFzT3jfNuX6P9TJ/nTuV6/8f7yIl6/0cX68f/6Gz9+B+d08nojPF5LpKq
H/8J93yH5yxJzXOldP33P7pqOM9t0prnRKX6/b/oiuE898lbPp5TJa0fz8lK
9f7nPrr7V1d0WfNcLjnd/qd+Hh94TpUzPs+BiobznKns9jxXKxnOc7Ki4f2U
3/AK22ue++XNj+eEacN5rpYynOd6GdPnOVn5efZ/fK6QnmH/R9eeb/9Hp1rt
/+iS5rlezvg8V0wYznO7gua5WPkF9j/567bovOa5Z8Xt26OrmudGBeP73Ejz
XKhm/E7qY3ie/A3nOVNR89wop3uon9vzXK+kec5a0zynLGqeK1VtL59TmX4/
6Rteic4aPkD5Dee5VVoPkp/mOVfS7XlulTGc52iJu+z/6KrlTUTnDG+OTutk
dPmF9n90bab9T3qG89wzYTjPAYuGt2HDeW5ZM5znnFXzz0YXjN8RnX+R/U96
ujM6c7f9T/1ebP+TvuEF6mt4D9un7f/olO7FL7H/o7OG81w1a3pl6qf7yV9X
oktu73Nf068SrnnumtM8ly1oniMnNM91q6bfEJ0x/0R01vZoji4aznPjlOa5
ckKnostuz3Pjmk4Tbvy26IrlyUQnLS/PkfM6G53WHT6Xtv8pr/l1kl69/4nv
+OiKzukC9dM9tIfjrUh83Uv5dSm65PZ91F+XKb/l6Wf7ev9TX8MHCNdV2tv6
DlI/t6/Rv+Y3xPY6fOifLuuG6IJORKd1c3RCJ6N9rhhacNL5gtjnmq044/xR
zHO10IY7nU+Kea4X2nHZ+aWY53yhA/vcM4d5zhc6cWID/495Dha63J74BctD
eA/muUsoWh+eN/faHoSXMM8RQp/tg8uY5xihH5ecz2j74AHc6vxGzHOIMIi7
nO+IvW8/ZH2c/1qgXHg45rlDaMA+B2jEnd6HxmWfC2Du+4Zm7H3rcZj75CGJ
uW8cJmLug4cWzH3jMAUPOR/T8hE+HXNfP7SaPp6JeY4Q0pjnDmG25aX+bZYH
z8MZ53tin2MsxDnnK2CfSyzBPHcJWcxzhLAccx8/dFhe6rcKc98/5DDPQcJa
zH3/0Gl/4vWY5xohb//jjdaP/LpsH9xt/s7XtH+4T7kNc1849Fg/vMP2cn6n
/Yd321+41/qQ3z7bB5cw963DQetHeJ/tj4/YHs4fxdzXDsftP9zveMKnzM/5
lqaPzzr+8QDmPnC4YH7Oz3T/IfyS7Y8HHS/Ev2p5cM32xDdMDw+5PfeZblse
wsOHSQcPx9xnDQ2Y+4yhEXMfNCQw9yVDE+Y+Zmg2PfIfh7lvFpKY+2ZhIuY+
VWjB3JcLUzD30ULK/PB0y+N8I8x9wjATc580pE0Pz8bc9wxtmPuAYR7OON8T
ex9vIea+Z2jH3McNS3Da+bGY+5JhOea+ZejA3JcNq4xPejnLi9di77N3Yu7T
h/XWh/GVt/3wRtsDd9k/uNv2xQXL4/7veHL/tz/d/+1P5zdj7vuH3cbHvZj7
ymGf9XE+MOa+bziIue8a+mwP7ksesb64bPtxn+S49cH9bo9PmT7bV+xvws8a
jgdMn/sMF2xfwqu2B77k+MCDtj++ioPzWR1/hN9wvOMh9zd82/GLw1bKiYdj
7puFBsx9xdCIue8XEpj7lKEJc58zNJs+Hoerzq/G3HcNE3HR+YSWB0/BDd7X
wtx3DNMx9+1CK+a+XZiJvS+Wtj6052zTx22WD8/D/c73tf54IeY+RWg3PbzE
8jg/GHMfIizH3AcJHbY/XmV6XAfmMNfpYa3lIX6n7Y/XW36ct/3YfqPtgbsw
19mh2/5xvjLmOi9ss38J77F8hO+wf5zfbHvg3bYH7rU+eB/udD604wMftP1w
H+Y6OxzBHc4fxtzXCMcx1/Gh3/bCp2x/6lOxPPis2+MB25fz7guOJ68jrD++
hLkuC4O2F75q+b1OcXyQ3w3Tw0P2H75t+zj/+yPxL9epYTj2uq4Be53TiL1O
SGCve5qw1wXN2PP0cdjz1CT2vHAi9rytBXueNQV7npHC/o5Ox/5OtGJ/N2di
f6fS2N+d2djf4Tbsecc8XD8PwP5OL7T+nvdgz9OWmJ/n7djzxOXY864O7Hnq
Kuvjear1wWstv9dp2OuO9dbH80jsdeBG7HVxF+Y+Q+i2fl7X4iH3f8vvdSvu
cv+3P3HR9sO7MfdtQq/lwfsw96FCCXOfJhy0PXGf4xcfwd5XKGPvQxy3fN63
sH74FPY6uIK9r3AWex0+4Ph0/8fc5wlV7H2PS9bP/d/90/3f/cP93/7BN6yf
18nY677b2OvgsI3y4+HY66wG7HVII/Y6JoG9TmrCXkc2Y68zx2Gv+5LY67aJ
2OvMFux13hTsdWEKe902HXvd2Yq9Lp+Jve+Qxt6XmI29b9KGvQ8yD3vfJmN8
+nMh5r5maDc+XoK9L5bF3tdZjr1P1oG9D7EKe18gZ3z3f/N3/8feV1mPve+Q
x17Hb8Rex3Zhrwu7sdfRBex15TbsdXIP9jpzh+3veSn2Omk39rqv1/LhfY5X
z7NtX3zQ8eR5tuMBH8GeZ5ex5/HHra+/+9jzylPW1+s67Hn8Wcen10nuL/gC
9ry56v5D+CXHu9eptje+6v7hdZb7E76BvS4dwl533cZeN4aPxr9etw7HXrc3
YO87NGKv4xPY+xZN2OvoZux19jjsdWUSe50zEXsd1oK9zpmCvc5IYa9TpmOv
G1qx12UzsddlaetD/NnY65I27HXGPOx5cwZ7HbAQe53Rjj0PXoI9T89iz6uX
Y68TOrDXnauw12057HXfWux5fyf2OmE99jw9jz0P3mh7+Ltt+xHejT0PK1ge
z0Ow51091sfzPOx5SBF7XrUbe17U6/j0vA57XlbCnicdxJ439Fk/fMT28bwK
ex5yHHve1u/4xafsX88TsOedZ21fz0McH/gC9jym6v6FL2HPOwYd//iq7eXv
DvZ384b9g4csn8ct7O922B7/+rs3HPu71oA9jjdij4sJ7HGjyfQ8jmD3w3HY
40ASexyaiD3OtWCPM1Owx5kU9jg1HXucb8X+zszEHmfT2OPobOxxqA27H8zD
7lcZ7H63EHvcasceN5dgjytZ7HF7ueV1XFtevArbrznb23Jsf2C8Tv7u5u/6
7Q9MN2//8Hfjg/528bfC327+Fh7013y3bX9gvXvsb/7u4K/9VLQ/H1RO26n3
Qfnu2/7Aepdsb/4e5K/91Pegch3h71n+lh/UTsf567jqdzzw9xR/7WfbpflB
6TrOBuxv/l5wPPO36v5mPz+o3QYflO9V8/tY/Fuz/fANnMZD1g/ftv9x4G8L
f4fzdyF/G/g7kb+N/C3wN8Hf7o89sBztH3tgOdfzdxx/e/ib5O/aB+WTe1C5
evk75UHppPjruJiOHRet2H6e+aB2sJ0cN7Ox/dSGHRfzHtTOGWy/2G72u+3g
frfkQf2Sxe4Xy233B/WTx8lV5uf+j/0dsR39XbDf3Y/tB4+jeezv4kbseUqX
+XueYrtjx4HnVdtsX8+7rT/hO+wff3ex51G7LZ+/45bf61LsdXLJ9Pz9d5z6
+4+9j3fE9vX33/ISfhx7n7Uf+9z3lOPS63/sc+Oz2OfQA5h5H+GC+4f3/xzv
Xv9bXq//3Y9I76rb+1zU7fEN28vrf/dLr/9xp+sf9JCe9/+x66w0YNeBb4wu
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
PU7jHeRn+E7SN7xIenoX9f8h3k376z3Uz/i9tI/he0lP7+P4avz9pK9L7A/6
APu32x+kfU/hQ4T/APcxvgw/THkMP0L59VHaS5dpH32McNM7TntZnhPUz/B+
2tvtT1JefYr20qepr9tX2N7+OcP+av+eJVyfo/30APV3fJxnPOkLhBv/Iukb
XiW+++P9tK/76yXq7/58mfrrQcqnr9Ce+ir9r68R3/Rr5Gf+18nP8BuU1+PD
TeJb/iHSM/wW/W16t+kP07tDfS1P+Ow/nTd8WHRGD49OG39EdMrwhuisHhmd
8HjaSHyPn6Oiix4vE9E1f19Gk57hTdEFx8cYbH82E9/wsdHB8HHRScPHR1fd
35LU1/AJpOf2Eymv4ZOoj9u3UF89Gbu/TImunPT3n/SMn4rOeX4zjfJ7/jU9
uuz54gzSu+TvP+XRdxFfz6Q8v/X3n/YwPE17eP43C5v/bOIbPof+MrwtumT4
XNrP8Hnkb/h86q8z2PgLyM/6LqQ8ehH9r9vJXy8mP+u3hPax/ktJ/7K//9jw
ZbSfXk56xl/BeNEd9IfxV9KfehXlM/5q6qNzpD/o7z/t8Tt//2lPfQ/1153s
n26/jvFj+HrqY373Uh7Ll6c8egPtZfyN5K83kb7uIn+9GZt/N+lZvi1srwu0
n9tvZXy5/TZs+HaOV4b30N6G30e49dlB+xp/J/npIvW3PLvI73/9/af8V/z9
pz0M72U8GL6X/PQ+6mv8/ZRXl+hv8z9Afxl+kProQ+Sn++hPtz9M+fQR8tNH
iW/9y4x/fYz0jX8cG36C9tD9tJ8+Sfnd/hT1s7ynqY/tUyFcn2H86LOUX5+j
fnqA8v2fv//UR1+g/fVF6q+r5Of6HvcTX1+ivvoy+bv9IOXTV0jf+FdpH9fP
uUa46+fUSN/1Rq5THn2D9I1/k/FpekOUR99ie32b/C3PHeLrsCemp4dFp8xv
eHRej4iu1NcHii64/cjonG6Mrto+o8jP/ksQ7vgYHV3STaTveBpD/oY3RwfT
G0t8w8dFJ/T46KTpJamfnkC48Sdi059E+Y3fQnn0ZGz8KdFp6z+V7XUquqyn
UV49Pbpoe86Iztj+rdjwu6iPnolN727a1+3T5KdnYbefTXtanzmUV7eRnp5L
ec1vHu1nevPpb+NnGG+29wLS93iykPJ7fF9EeXQ74834i2kPj/9LCPd8YCn9
obPR2frvP+Op/vtPuPFX0L+eb3TQn4avpP6WbxX5Wb/VbG/75Ggf9681tI9e
y/auN3QP9fP40El7GH8d7Wf4etJz+3vJ3/A88Q3fQPkN38j2ehPh5tdF+xi+
mfIZ3k37m/4W0nM9pgLbu17TVsaf62FtIz29nfLrHurvelr3MZ4M38H41DvJ
3/W1iuSvd1E/vZv+dfs9jA/De0lf76U/9T7qo/dTH10if9M/QH/og9RPH6J+
bt9He+jD5Od6XkdIz/CjlN/0ypRXHyN92/M4+5/hJyi/4f2UX58kP32K8ev2
pxkPhlfIz/KeoXz6LPXX58hPD9Cfrm92nvq7ftkF0nP9yIvkp6uU1+3vx4Zf
Ij19mfSMP0j/G36F8WP+V0lPX6P+ro9Wo36ur3ad9PUN6qtvsn19fU/6Q9/C
rt95m/4z/A42vfC5WD/Dh0UHPTy6okdEJ+vrgxKuR0YXdGN0SY+KTukE+enR
0TnL1xSdt73GRJcNb47O6LGkr8dFV91+PPU1PEm4nhBds74To9OWb1J0UbdE
Z/Vk2sftp1Be859KevX1S4nv+JhG+9XXM6V+egbt4XhrJb6+i/LrmfSP299N
/evrn1J+PYvtbY/Z1NfwOYTrNtrb+s6lfm4/j/41/ny2tzwZ2l8vYLzohZRP
LyI/3U76a53/j7uc/4+XOP8fu+5oFh93/j9mHdGwHO9z/j9mXc/QgVmHNKzE
Oef/4z7n/+Pg/D885Px/XHP+P2Zdy3AP7nD+n/XB62wP5/9h1zm81/Zx/h/u
df4frjj/z/Zx/h9mncfQhVknMWzGrLMYuvFw5//ZvoQXMOsmhq2YdRHDNtvL
+X+2h/P/cLvz/3DB+X94ufP/8Dzn/+Fu5/85Xnz+b319/m/7+vwf533+j113
cB9udP4fdp3DEh7n/D/MOpDhIGbdyHAIs25i6MOssxgOY9ZFDEcw6yaGo443
0itj1jkMxzDrDIbjmHX5wgnHH+7HrNMYTjr+8SnMOofhNGbdxVDBrJsYzjie
8VnMuoHhHGZdvDCAWXcunMesWxcuWD980fbCVccXvt/+wpfcH8nvMmYdvjDo
7yW+4v6Gr3r8wNcc37jm/kF+1+0/fMPxhG9i1nELQ6aPbzn+8W3MOnXhDmad
t/9vAMe/rFMXhmHW5QvDMevIhRGYddVCA2adtzASs+5ZaMRDrkuGWTctJLDr
mI3GrAMXmjDroIUxmHXaQjNm3bQwFrPOWhiHWVcsjMes6xWSmHW9wgTMOlph
ImbdsDAJs85XaMGs6xUmY9bxClMw65iFqZh13EIKu27cNMy6bGE6Zp2yMMP+
wa32H74Lsy5bmIlZZy7cjVmXLaQx66aFWZh11cJszLpxYQ5mnb3QhllHMMzF
rAMY5mHWEQzzrQ/O2H54ge2LF9o/eJHti9stP16MWRcxLLE/8VLMOoAhi1mX
MCzDrqO3HLPuXViBWRcvdGDWpQsrMevChVW2B17t+MQ5+5v5bGusD16Lm5z/
5/7D9p32N+HrzN/5f/aP8/9sX+f/Ob6d/+f4cP6f7Y83eTxw/p/jz/l/jnfc
7f6Gtzh+ccH+xFsdf3ib+4vz/2x/5/85vp3/5/7k/D+PD87/83iCi44HvAu7
7ttuzDpzYY/7A+51fFCevY5vvA+zrljY7/jEJfcPfACzTlc4aPnwIccP7rP+
+LDHO9exsbyEH7U8hJex6yQdw6zTFI5j1x06Yflwv+MLn8Sua3TK/sWn3d9d
xwe7rtAZ2wOfxa4DdM7+wQOOB+b3nrd/XVfI/Yvwi9h1f6r+nuD7/X3Dl2xf
fNnjn+sSOT7wFY8nrrPj7yG+hl3HqIZdd+k6dp2hG/Y3vml/uo4Rdt2bW9h1
am5j1225g10HJXw+/nXdk2HYdWOGY9dJGYFdh6UBuy7NSOw6Oo3YdXxGYdcB
SmDX0RmNXXemCbsOyxjsOibN2HVZxmLXLRmHXUdkPHYdjSR23YoJ2HUlJmLX
gZiEXQehBfue/2Tse+xTsO/1T8W+R5/Cvhc/DbtOwHTsuggzbF/fG8auI3AX
dt2Gmdh1JO7GrsORxq5jMQu7LsRs7Doac7DrlLRh1wWZi13nZB52XZT52HVe
Mth1ahZg1+1ZiF0HaRF23aJ27LpHi7HrHC3Brvu01PZyHQ7sulLLsOtKLceu
I7UCu05WB3YdqZX2t+uUYNeRWo1d9yiHXSdpDXZdoLXYdX3uwa7T04ld92gd
dp2g9dh1lO51fLmuiOMPb8CuA7URu87RJuw6R13YdYo2Y9fN6cauS7MFu05P
AbuOzVbsOjDbsOukbMeus9KDXcflPuw6Nzuw6+DsxK5LU8SuK7MLuw7Obuw6
NHuw69b0YteV2YtdF2cfdt2g/dh1kUrYdZMOYNd1Oohdp+kQdl2pPuw6YIex
664d8fiEj2LX7Spj1506hl3H6zh2naQT2HWL+rHrMJ3Errt0Crvu02nsukgV
7DpDZ7Dr7JzFrltzDrvOzwB23Zvz2HV8LmDXwblo+7iOgr8/+H7sujSX/D3C
l21v14nweIWv+Pvouhe2N76GXQek5u8bvu7vm+sCYNe9uOnxwHUZHA/4lscX
101wf8V3/H10nYW98a/roAzDrrsyHLuuygjsOjEN2HVeRmLXzWnErgszCtfX
tcGuqzMau65QE3ZdpDHYdYaasesqjcWu8zMOuw7QeOy6N0nsOiwTsOvETMSu
wzIJuw5KC3YdlcnYdU2mYNeNmYpdNyaFXTdlGnbdlOnYdVBmYNf1aMWuU3IX
dh2Umdh1Ou7GriOSxq77MQu7jsls7Lo4c7DryrRh16WZi12XZB52HZP52HVE
Mth1OhbYv7vi34XYdTcW4dGEt2PXuViMXRdiCXZdhqXYdRKyeAJehl23Ybnj
E6/ASdyBXcdhJXZdg1XYdQhWY9dtyLn/4DXYdSXWOn7xPdh1Ljqx62Ksw67T
sN79Ed+LF+A8XoM3eDzAGx3/eBPehbvwFrwZb8Xd2Pf2t+CNuIB9L3+r4xlv
c/zi7biKe7DvNd/n/u97h44HvNPx5Xupjh+23+XxBu/Gvge9B/sedC/2Peq9
2PfQ92Hfg9/v8QqXsO95H8C+J33Q4xU+5PjxPTzse8GHse9VH8G+133U8et7
h9j3yo85Hn3vGPve6gnse6f99h8+iX2P8RTmvb9wGvveYwX7HucZXH9PEfse
3jnse4kDHs/weex7mRc8vuKLjkffK/R47nt3Hv98z9njI77s8cz3PD3e4yvu
H75X6fEOX/N45nvLHi/xdY/3+Ib7F76JfQ91CPse7i2P//g29j3XO+5/OHwh
/vU912HY9zqHY96LDCMw7/2FBsx7gWEk9r27Rsx7amEU5r23kMC8BxhGY9+z
a8K8NxjGYN5LC82Y99bCWMx7eWEc5r24MB7z3lpIYt6rCxMw792FiZj31MIk
zHuOoQXz3mqYjH1vdQrmPdQwFfOeZkhh3msN0/AV3+vFvLcaZuCbvneNfW/0
Lsx7qWEm9r3guzHvjYY09r3dWdj3wmdj3+Oeg31PvQ37nvtc7Hvr87DvGc/H
vuedwb63vwC7jsJC7DoSi7DrQrRj131YbPvuin+X2P+EL8WuK5DFrvOwDLsO
xXLLT3or8GrcYXp4JR6GV2HXGVuNA+E5y0v4Guw6cGux69Leg103txO7ru06
7Dq5621Pr/+x6yznsesob7B+Xv9j1/ndhF33tgu7Tu1m28vrf+y6wVvcv1xX
3fb3/r/HI9533+Z4ZD387dHlo87/iy590/l/0Sm9Izph/J3RGcOLbG/4rujq
t5z/R/yy8/+i87o3Ovtt5/+xveH7yN/w/dFpXcLGPxCdNPxgdMXwQ7THMef/
YeMfJj/jH4kuWJ+jlM/6lmlPw48R3+2PUz99gvobvz86Z/hJ6mP4qeii7X2a
+ukK9dNnyN/ynSU/w8+RvuED1N/8zlMf41+g/Eec/0f633D+H/1/2Pl/tM/X
nf9Hexp+mfGlBymPvkJ59VVsftdIT9cYX8a/Tvrmf4P2Mvwm7aWHqJ++RXqm
f5v2N/wONv2wL6bX5/w//DXn/0XX9IjovPEbost6ZHRWN0ZX9ajoguVJYMsz
OjoY3kT4Qef/kf9XnP9HeQ84/4/4ho+LLunxpK+TbK8nUH7zm0j8rzr/Lzpz
yPl/xDd8MukZPoX2sf2m0p6Gp6LTehrhlmc6tn4zqN+Xnf+HS87/I/8vOf+P
+u93/h/5GZ6mfHoW6Rl/Nv2n50Qnjd9Gexg+l/y/6Pw/0tPz2d74GdI3fAHp
6YXRCb2I8rt9O+2vFxPf8i2JTuml2PhZymP6y2iPfXg5+Rm+gvQN7yA9vZL6
fwGvov31aupn/BztY/ga0tNro3PGv4f0dSf7g14XXXT79bTvXnwv4Z/HecaX
4Rsoj+EbKb/eRHvpLtpHbybc9LppL8uzhfoZXqC93X4r5dXbaC+9nfq6fQ/b
2z/3sb/a3zsIt7930n66SP2Nv4vxpHcTbvw9pO/+1kt898e9tK/76z7q7/68
n/rrEuXTB2hPfZD+14eIb/p95Gf+h8nP8COU1/CjxLd+ZdKzPsfob+Mfpz9M
7wT1tTz9jBfDTxKuT9F/xj9N/QyvUD99hvHj8fQs8T1+nqN8Hi8HqJ+/H+dJ
z/AL1NfxcRHbn1XiG34/7Wf4JfrL8MuMB/e3Qepr+BXSc/urlNfwa9TH7WvU
V1/H7i83aP9ef/9Jz/hD7A+e39yi/J4P3Wa8e354h/Q8fwxfjOXRw6Irenh0
8jv+/kenDG+Irnn+NxKbfyPxDR8VHXQiuqxHR+fcvon8DR8TXdLN2Phjyc/6
jqM8enx0USfJX08gP+s3kfax/pNI/7i//9jwybSfnkJ6xp8andWp6Krxp0Xn
9XTKZ/wZ1Ee3kv4Jf/9pj+/6+0976rupv05HZ9x+VnTC8NnUx/zmUB7L10Z5
9Fzay/jzyF/PJ32dIX+9AJv/QtKzfIvYXrfTfm6/mPFl+BJsekujCzpLe7v9
MsKtz3La1/gryE93UH/zW0l+/f7+U369mvb4nr//jAfD15CfXkt9jX8P5dWd
9Lf5r6O/DF9PffS95Kfz9Kfbb6B8eiP56U3Et/5djH+9mfSN340N30J76ALt
p7dSfrffRv0s73bqY/v0EK7vY/zoHZRf76R+ukj5vu/vP/XRu2l/vYf6617y
c32PvcTX+6iv3k/+bl+ifPoA6Rv/IO3j+jmHCHf9nD7Sd72Rw5RHHyF94x9l
fOoy5amv/8P2+jj5W54TxNf9pFdf/4fymP4p+kufZv8xfoXjkemdobz6LPnb
PufITw8Q7vg4T/voC6TveLpI/oZX6S/Hw/3EN/wS+6O+zPgwvUHqp68Qbvyr
2PSvUX7Da5TH7a9j49+gP6zvTba3fYbYXwy/RXn1bfYP499hvNv+YX+04cOi
C3o4Nr0R0WW3b4hO6pHY7Ruji9ZnVHRFJ0hPj44umV9TdMr0xkTXjN8cnbY9
x5K+x5NxlN/j+3jKo5PReeNPoD08/k8k3POBSdEZ3RKdq//+Ryfqv/+EG39q
dNXzjVR0qP/+U3/LN538rN8Mtrd9Wmkf96+7aB89k+1db+hu6ufxIU17GH8W
7Wf4bNJz+znkb3gb8Q2fS/kNn8f2ej7h5pehfQxfQPkMX0j7m/4i0nM9pna2
d72mxYw/18NaQnp6KeXXWervelrLGE+GL2d86hXk7/paHeSvV1I/vYr+1asZ
H/X1/0hfr6E/9Vrqo++hPrqT/C3fOvpDr6d++l7q5/Z52kNvID/X89pIeoZv
ovym10V59WbStz272f8M30L5DS9Qfr2V/Orr/zF+3X4748HwHvKzvPdRPr2D
+uud5KeL9Kfrm+2i/q5ftpv0XD9yD/npXsrr9nux4ftIT+8nPeOX6H/DDzB+
zP8g6elD1N/10fqon+urHSZ9fYT66qNs73prZfpDH8Ou33mc/jP8BDa9fupn
+Eny16cYX/o048X0K4TrM9RHn6V99DnaXw+Qnz5P/SzfBcpre12kPQ2vUl99
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
w2Mw68yH0Zh13sNjMeuuhybMOvLhcZh14MMYzDry4fGYdehDM2Zd+PAEzDrp
YSxmXfPwRMw68GEcZt318CTMOvVhPGZd/PBkzLr5IYlZZz88BbPue5iAXRf/
qZh128NEzDrm4WmYddbDJMy65uHpmHW3QwtmnfDwDMy64GEyZh3w8EzMOuVh
Cnad72c5nvFUxy/rXj4bj3edTcw6yeE52HWDpzke8HMdX65D6/jBz8Os6xxm
YNZVDs/Hs13XE7Muc3gBZl3rcBdmXe3wQsy60mEmZt3o8CLsust3Y9f9fbHj
x3VYsesMvwSzTnOYhVknOrzU8YtnY9apDi9zPOI52HVwX45dx7bN/sOvwK6L
Ohe7jugrseuozsOuC/sq7Lqn87Hrer4au85pxuMZ8V+DXed1AXad29c6Hl23
FrtO7us8/uFFHh/J7/Uez1y3GLsu7hvcP/Bij3ds/0aPZ66j5/GS+G/CrqO7
1P0Lvxm7rm0Wu67vWzz+42XYdXPf6v7nusrub/ht7m+UbwV2ndW3Y9cR7XB/
wO/weIVXOl7xOz1eui6h4xW/y+MtXu3+gN+NXecyh10H8z0eP/Eaj/f4vdh1
MNe6/+B/wa7jeY/Hc/yvHj9cRxO7Du6/YdfBXefvG/537Lqv67Hr5P4Hdl3a
e7Hr4P6n+6vrNnq8wv+FXed2A3ad4f/GrkO7EbsO8P9g15nehF0X+n3+XrgO
OXbd7Pf7e4E3Y9ct/oC/D67bjV0H/IP+XuMtmHXpw4fwAtdJ9vcQf9j2xVvt
f/wR7Drl2/x9xB/FrGsftlt+fo8+5vEQ95ge/rjHW3yfv1f4E/5e4B2WF3/S
4yfnSzs9nnj97/HG63+Pv17/e3zz+t/29Prf33+v//F2r/+tn9f/Hl+8/vf4
6vW/x0Ov/20vr/89vnr97/GJ+7/7bG/8Rfcn11vz94D19L8UXdnh/Kvo8ifw
l6PT+kB00vhfic4afpDtDf9qdO2Tztci/k78teiC7ovOfQp/ne0NP0z+hn8j
OqOPYON/Mzpl+NHoquHfik4Unf+Fjf9t8jP+seii9fkO5bO+x2lPw79LfLc/
Qf3096i/8fuj84Z/n/oYfjK6ZHv/gPrpU9RP/5D8Ld9p8jP8R6RveIX6m9+P
qY/xz1D++/BPSP/jzk+j/3vwT2mfjzlfjfY0/GeMLz1AefTPKa8+j83vF6Sn
LzC+jP9L0jf/i7SX4b+ivXSV+ulfk57p30/7G/4bbPqXSG87/i3+qPPlPD7g
31EfPUh76/+lPPoK7an/j/a3PFex5fk9/Wn4NcK34j+Q/4edf0d5C/iPxDf8
Ov2r/0T6+gbb6z9TfvO7SfyP4L/Qvtucv0d8w/9Keobfon1sz7/Rnvo248f4
f/f3xPl+2PL9g/p9yPl/B6K34IdEVz/ofMDocjd+aHTG8OHRFf0w0jP+iOia
fnh0yvgN0VnDH0H+H3A+IenpR7K98RtJ3/BHkZ4eFZ3Uj6b8bp+IzunHEN/y
jY5O68di4zdRHtN/HO2x2fmK5Gf440nf8GbS00+g/u93PiPtr59I/Yw/jvYx
/Emkp8dH543/ZNLXyeiCfkp0ye0n0L5d+KmEvw9PjA7GfxrlMXwS5ddPp710
C+2jn0G4+U2mvUz/mdTP8Cm0t9s/i/LqqbSXfjb1dfsU29s/z4lO2N/TCLe/
n0v76enU3/3neYwnt59BuH4+6Ru/lfjujy+gfT0e3UX93X9fSP31TMqnX0R7
6rvpf/1i4pt+mvzM/yXkZ/gsymv4S4lvfWaTnvV5Gf1t/Dn0h+m9nPpanjbG
i+GvIFzPpf+M/0rqZ/g86qdfxfjxeDqf+B4vX035PF5mqJ+/H68hPcMXUF/H
x2ux/b+Q+Ia/jvYzfBH9ZfjrGQ+6nfrqN5Ce2y+mvIa/kfq4vy6hvvpN2P1l
Ke2/Cb+Z9IyfZX/w/OYtlN/zoWWMd88P30p6nj8upzz6bcTXKyjPp/HbaQ/D
O2gP038H9nxwJfH1O+kvvYrxp99F+1n+1eRv+Lupv85h47+H/CzPGspjed9L
/xu+lvz1v5Cf8e+hfaz/v5L+LtyJDf832k+vIz3j/zvjRa+nP4z/H/Snvpfy
Gf8/qc9ncJ70d+P/oj0M30B76v+m/noj+6fb/w/jx/BN1Mf830d5LF8X5TH8
/bSX3kz++gOkr7vJX38Qm/8W0rN8H2J7XaD93P7DjC/Dt2LT+wjHK72N9nb7
jxJu/bbTvsb/GPnpHur/Wfxx8tuD76P8+hO0h/F3MB4M/yT56Z3U1/ifory6
SH9b30/TX4bvoj76M+Snd9Ofbv9Zyqf3kJ/+HPGtfy/jX3+e9I2/Fxv+BdpD
76P9jP9Fyq/3Uz/L+yXqY/uUCNdfZvzoA5Rff4X66YOU73P4q9RHH6L99deo
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
J+Z6zndvc/3yybm+851dznfbT8n+lO9s8595/p8/zPP/3Jjn/3M/y/P/PDHP
/2f/zPP/ub/l+f+sV57/5+vy/H/uP3n+n2/O8/98QZ7/z36f5/9zvPP8f+5/
ef6f38rz//x6nv/Pfp7n/3kBX8z/5vl/npXn//lXHsXNfGnOL74s5x9fzpP5
Cp7DV/I3PJpb+SquzHenuRdfw524nrfga/l/36nP/svX5/7ON2Q/5xtzf8p3
m7k338T9893s7Md8S/bjfCc99x++jQfmO9uc797fwTvxWO7Gd3LbfNeb2/Bd
PN963s2L+B6ey/fyBL6PL+P7sz/xA/wKj+Of+EGeyg9xF+N7OPf3fEecO/Kj
3JnHczt+jDfId8xzv+fHc//jJ3K/4ydz/+UJfCY/lfs5T+Sz+emsT757n/sP
P8ujeVLuR/xc1jvftc9+xS/k/siTs978Iuc75U25v/FLub/xFM53uV/OfpDv
tud84Fezv/DUXK/8Wu6P+a5v7u/yN7Jf8LTsL/xm9gd+K/sXv539jqfnfOJ3
sp9zM9/N7/JInsFD+T0exTN5CL+f/Z5nZf/mD3L/4A+z3/JHnO/Yf5z9jT/h
fKf901yf8s84312fzfmu/efZT7kl17/yX2R/4C8532n/KvtZvsub/Za/zv6a
79xmP+JvOd85n5v9jr/L/Zrn8Wzj/T73a/4h9xv+Mft5vrPM+c76z5zvnLdy
viP+S45vvgOd/YB/43zHen6ub/499+98V5nz3eg/ON9x/pPzXeq/sl/ywpyf
/Hfu9/luNec70//k+st3sbM/8H/ZP/Ld6qeKf/Md58U4371enPOd7SU43+Fe
kvPd7qU435Fuw/nO9tKc70C35XwXeRnOd5vbcb6TvCznO77tOd8dXo7zneEO
nO8KL8/57nEF57vBK3C+C7wi5zu4K3G+K9uR893Vldl3SEudON8xXYXzHdXO
nO+4rsr5TuxqnO+0rs75TmsXznde1+B8J7cr5zu9a3K+U1vJ+Q7tWpzvuHZj
3xEtrc0T8t1W9t3S0rqc776ux/nu7Prsu6ylDTjfvd0w52O+W8u+q1naiH0X
s9Qjx893wDZm31ksbcK+S1jalH2XsVTFvjNZ2ox9R7HUk30nsLQ5+25iaQv2
3cbSlpzvRvZi380sbZXzkXuz726WtmbfmSz1Yd9tLG3DvhtZ6su+s1naNtcH
b8e+61jann3nsFTNvjNZ2oF9l7PUL9cX78i+k1naiX0ntLQz+05naRf2Hc7S
rrn+uH+uN94t1xsPYN9tLO3OvktYGpjrgffIfsWDcr7ynuy7fKWanK+8F/sO
YGnvXA+8D/tuXmlf9l290n7ZP3kw+25faX/2Xb3SAbl++ED2XcDSQew7eqWD
s3/wIey7mqVD2Xc1S4ex72SWDmffkSzVsu9ulo5g37ksHcm+q1k6KtcrH539
io9h380sHcu+W1o6jn3XsnQ8+65o6QT23drSEPad2dKJuV/IT2Lf4S2dnPtF
vmPNvoNaOiX3B65j3xUuncq+81w6jfOd69M5360elvshn5H15TNz/Pks9t3j
0tm5P/I5nO9kD8/4+dzsh+6H56U9Pj/7LV+Q+xVfmPsFlzNevij7J4/IfuLn
q4uz3/DI7L98SfY3HpX1zO//uf/n93+emd//M7/8/p/9RXtXZn/l0dkP+aqs
V37/z/6a3/+zP2m/Puud//8/11Pe/5f2vF/8+sItw39p+n/fULj5HL6xcE08
pnBVyt9UuC75zeonvyXHh29VPr6tcEN8e+Hy+XyH+vFY/cd3Fq6NGzjt3VW4
OvndhVuT31O48gK+l1P+Pv2l/P2FG8/lB4wvHmc94weVT/2HzC9+2PxT/pHC
9ckfNZ/k4ws3Zb0fM7+40fzix/Wf4/GE/pI/qf3kE8w//T1lPik/0fjP5qe1
fxY/4/ifyc/meuRJ1jN+zvkVP2888QvGG0/m9Pei9uIm51fKv6T9M3iK9Ur+
svWKXzG/+FXtpf2p1j/5a5z2X9feMH6DT+dphSuSv2k+8VvWO37beOLp1jP9
vWP9M55mTv6u45l8hryO39P/KTzTeIfy+8onn+X4xh9oP/5Q/fgj409/Hyt/
Kn9ifU/jT5VP/pn2ks+2PlnPz61n3OL8Sfkv5On/S874vjK/k3kOn8Rf6/9E
/sb8h/C3+ks+1/ji77SX8vMcv+TfOx/jH6xHyv+o/xP4J+3FP6uf8q3aj3/R
Xsr/6nqJfzP+lJ9v/ePflc/4Frie4j845f80nrT/l/U4nhfqL/nf2k++SHvx
P+Z/HP9r/eP/zC/lSxOL9Um+WOGaePHC9Sm/ROHWeMnCDfFShZtSv03hUry0
/BhuW7gi+TLGk7xd4eZ42cLVcfvCtfFy8mO5Q+GqtL+8+SWvKNyS+isYb/IV
C9clX8l8k3dUP8dn5cKVOd6d5Dneq1i/uLP55/pZtXA59VeTx6trP+W7KJ/r
cQ3rm/2oq/nn+l3T/ONK44vXsp5xN8c/Xlv5tL+O/tL/uvpLvp7xJl9f+cxn
A+1lPhs63inf3fFI/xuZb9zD+ZL+NpbHmzh+Kb+p+SWvMr94M+dP9tOeyme/
3Nz4sl9uYX65f2ypveS9zDfnx1ac499b+eRbW7/kfRyv5Ns4H+K+5htvq73U
3854k29vPrleq8033oFzvfSz/jn/d9Reyu/kesjPNzsbf34e2sX5np8Pd9Xe
hdzfePLz5G7KxwOMJ+V3tx7JB1qPtL8H5+fBQcrHezpecY3zL97L+mX8e+s/
+T7mH+/LKb+f/jKewcaT8e7v+Cc/QP/xgfpL+YOsT+Z/sPbLfAgnP9T6xYdp
L+UPd77EtY5HfITjmfpHGl/yo8znIj5a+yP4GOuR/FjrGR9n/vHxrs/UP8H5
k3yI+aT/E40n4zvJeJKfbL3iofqPT9F+XKf/+FRO/6dpL+M7Xf14mPVL+TOc
X8nP5ORn2a/is613+j9HnvkNt74pf67+0v555n8xn6+/kXyB8ccXWo+ULzsf
kl+kv3iE+ab8xcYbj3S8M55LHK/ko8wnvlR/8WWOZ+pfbnzxFfqLr1Q+6zHa
+R9fpf2Uv5qTX2M94nrrl/LXGn98nfllvNebT9bnBnl8o/MnHmP88U3mF99s
fJfwLeYT32r949vMP75df3m/xx3Kx2PNN75T/6nfYHzxXdpP+butT96Xc488
vlf7ed/IfcYT36/9lH/A+RmPM568n+dB9eOH9B8/rHzG94j2kj9qPGl/vOMV
P+b6iRvtR2nvceONn9B//KT+sl4T5DmeT1mfnC8TtZ/z6Wn9p/wzjlf8rPKp
P8n1GD/n/Eh7z5tf/II85Sdz2n/R+JM3GU/8Emd+UxyP+GX1sx6vuF6Sv2q8
8VTXR8q/5nzP8Xqdk79hPvE0TntvWt/Uf0t/8duc+tOtZ+b/jvHGzdqL3zXe
9DfD+qW99xzv5DOdb1m/97Wf/WWW8Wd//8B44g+dbyn/kfXI/v+xPD8PfOJ4
xJ+6HlL+M+dTPFue8p87vnGL45nyX5h/xvel/jK/r9TPesyxPrmevrY+uf6/
UT/vG/rW/JLPtR6p/531Sz5Pe3n/0ff6T3s/KB//aPyp/5P6yX+Wp79W65Py
vxhf8l+tf+r/pr28n2m++vHvzr+8D2uB9uI/jD/vx/rT/PM+rb+cTym/0PkZ
/63/vO9qkf7T3j/mF//r+Mb/OT/+9/6/p4v248UK18SLF66OlyhcjpcsXJ/x
LVW4NW5TuCleunBt6rctXMp8ltFf3E57Kb9s4aq019544+W0n/XsULgx+fLG
n7zC+OMV9Pe/9/8Vrkv9lQo3JO+ov4x3ZeOLO5l/vIr+4s6FK/K+xlXNP+8v
W017yVfXX9zFePN+tDU4eVftxWtqL+UrHf/kaxVuTv/dtBevbf55P9o65pf3
q62r/Xg9843XVz/v89zA8Yg35LyPrbvjl3wjTns9zC/5xvqPN3F+pb1NnS9x
lTzvC93MfJL3tD7x5tY/3kJ/8Zbml/H1Mt6s11bWM3lv84231n7cx/kRb2O+
cV955rtt4cqMZzvnb7y94xtXOz7xDtYn7fUz3ox/R+3FOymf82Nn6xfvYn7x
rtYj51t/5ePdjD/lBzg+6W93848HGn+8h/oZ/yDzTb6nPOtXY71Tfi/zS763
45v6+6gf72v94/2cLxn/YOOL99dffID5Dcvz/3xBnv/n4/P8P1+R5//59jz/
n/XK8//ZX/P8P9+f5//5ujz/z6fl+X8ek+f/eVKe/+eJef6fn8jz/zwzz//z
T3n+n9v5e/MJPD/P//Nq8hP53zz/zx3kJ3M3Hspd+BRekuu4K5/Knfk07sun
c0cexuvwGdydz+Q+fBbvy2fzsXwOj+DhfBKfy7X5+z+X8/f/nC/5+z+PzN//
c77l7/88PH//58H5+z9X88U8kEdyf76Ee/Ao3oAv5QF8Ge/Cl/PefAXX8JXc
i0fzYXwV1/HVPJqv4aFcz4P42pz/fB0P4ev5IL6Bj+Ybc33yGL6Mb+LxfDO/
wrfwZL6VZ/NtPJVvz/XId3ATj831yHdyIzfwM3wX38p3Z//ge/ghvpef5/t4
Bt/Ps/gB/pPHcYXnWx7kxfkh/lL5h3kRP8Lf8KM8jcfzAn6MO2m/kdvw47we
P5HzjZ/M/sITuCc/xe15Im/CT2c/4mdyvfCzuV54Uq43fi7nOz+f/YBfyPXN
k/kAfjHnKzdlv+CXst/wlFwf/DJX8SvZ//jV7Hc8NdcLv5brn1/P/sdvcD+e
lv2U38x+wW9lP+W3s3/wdO7N72T/5mZe6Px4N/cH+Yzcb+Tv8cc8k+fy+zyH
Z3ELf8A/8Ie5P/JH/Ct/nPshf5L7k/F9ym35M96CZ2f/5s95O27J/spf8JH8
Ze4f/BWP4znZf/jrzIe/yf7G3/LdPJen8He53nlejg9/n/XlH/hD/jH7I/+U
9eefsx9wa/YP/oWn86/Zf/m37C88P8eTf8/+xwuy3/If2d/5z+yn/Bffywv5
Ef479w9exDfzPzyW/+Xr+L/s91x6pvi3iRfjj3lx/pSX4F95Sf6Xl+I/uQ13
9rzl0rwBt+XuvAwP5Hbcm5flQ7g9D+bluD934Dpens/mCh7OK/AQXpFP4pX4
eO7IZV6ZL+BOfDWvwmO5M0/hVXk8r8aTeHW+lbvw7bwGj+Gu/BCvyTdwJV/H
a/Fl3I3v57W5ntfh83hdbuD1eByvz8/wBjyTN+QW7s6lR4t/N8r5xD24C2/M
C/L8P68m35QruIpb8/x/zvc8/8/T8/w/v57n//nLPP+f6yHP/3NX/W2V85l7
cyVvzdtxHx7E2+R85r48krfN8eTtcr7x9rneuZq/4R24/fji3378g3zHHA/5
TtyWd+a5yu/Cb/GuWV/uz/N4N57MA3I98O45P3kg38175HrhQbkeeM9cz1yT
65f3yvXNe/PRvE/2J96Xe/F+3IkH8095/p8X5vl/np/n/7N/5vl//jDP/2e9
8vw/N+f5f56R5/95Vp7/5+fz/H/2+zz/n+Od5/95dp7/53bmdzS34WOyn/Ox
vAUfx335eO7IJ3AVD+EOfGLOL+M5Keef/GReJB/K3eSn8Dpcx5vwqXwYn8bD
+HTel4fxaXwGj+Yzs//yWXwvn539nM/J/YmH85l8Lo/i87If8/nZj/mC3H/4
Qr6Cy3wzX8QjeATX8sW8C4/knfgS7smjuA9fyuvxZfyr43U5T+Ursj/xlby4
+qO5B1/FS/LVfBBfk/s71/PefC0P5uu4P1/Px/INud/zjbn/8Zjc7/im3H/5
Zp7At+R+zrfyRL4t68O35/7Dd/A0Hpv7Ed+Z9eaG7Ff277tyf+S7s958D2/A
9+b+xvfl/sb3cw0/kP2Ax+V84Aezv/BDuV754dwf+ZHc3/nR7Bc8PvsLP5b9
wfwbs3/JH89+J38i55P8yezn8gncwk/xFJ7Ij/DT/Ao/w+P42ez3PCn7Nz+X
+wc/n/3W+F7gzjw5+xu/yNXclOuTX+IBPIUr+eXsp/xKrn9+NfsDT+VB/Fr2
M349+y2/kf2Vp2U/4je5jt/Kfsdv537N07kLv5P7NTfnfsPvZj/nGTyU3+My
z+Qx/H6OL8/KfsAf8Fv8Ya5v/ij3b/6Y5/AnPJ8/5U/5s+yXPDvnJ3+e+z23
8Dz+ItffY8W/X2Z/4K+yfyg/J9eP/OvsR/Jvcv7ytzyT53Izf8cl7c3L9Sj/
ntvLf8j+zz9mP+Cfcv7zz3wIt2Z/5194IP+a/Yt/y/7D8/kA/j3nMy/I+ct/
5H7Pf+b+wH/l+ueFOR/475xfvCjnD/+T/Yb/5cn8Hzdx6dni30m8GN/Ai/Mo
XoLH8ZI8npfi17kNL+Sl+Vduy628DE/jdvw8L8sfc3tu5OV4icbi3w7ckZfn
VbmCe/AK3ItX5J14Jd6SO/KGvDL35U68J6/C23Nn7s2r8ma8Gnfj1XkD7sKV
vAb35K68Ha/JW3Elr8tr8Sbcjat5ba7hdXhrXpfX5/V4HV6fq3gDXos35O7c
nTfmjXhN7sGb8sa8A2/Cg3hTPoKruJY34xO5J5/Dm/MZvAUfw1tyHffio3kr
vpB78wW8NZ/KfXg4b8MXcV8+m7fls3g7voS35yO5mnfhHXhX7se78458EO/E
/Xln3pt34YG8Kx/A/Xkw78Z78QDuw7vzgTyQ+/EevAYP4rV5T+7ENbwS78Wr
8N68Le/D6/G+3I734zn2o8E8lffn6XwAz+QDeQIfxPP5YF5af4fwbPmh/BYf
lvOHD8/+wbXcgY/Ifut+eyTfykflfsFHZ7x8DJ/Ex/Ih+f2fB+T3/5wP+f0/
+0t+/8965v//5/byk3jF/P6f+fHQnB/5/T/nf37/56H5/T/rld//s//l93/e
13iGZb3z///z6Lz/L+3l/f+FWw/w/MfZhVv253MK18bDC1en/LmFy8nPUz/5
+YUrDuILlI8vLNwYlwvXH8wXqR+P0H98ceG6eCSnvUsK1yQfZf7xpYWrDuHL
OPnl+kt7VxRuOpCvNL54tPWMr1I+9a82v/ga80/5+sINya81n+TXFW7Oel9v
fvENOX/5Rv3HY/SX8jdpP/nN5p/+bjGflL/V+Afzbdrfj293/PflO6xPPNZ6
xnc6v+IG44nvMt74bk5/92gvvtf5lfL3aX8fvt96JX/AeqX+OPNL/qD2kj9k
/ZM/zGn/Ee3Fj+b+w+MLV8aPmU/caL3jx40nfsJ6pv0nrX/GM4GTP+V4Jp8o
H8RP638PfsZ442eVjyc5vvFz2o+fVz/tv2D88WTl9+QXrW8NNymf/KXcf3mK
9Ylftp7xK86ftPeqPP1P5Yz3NfPbnV/nAfxG7g88zfz785v6243fMr74be2l
/HTHL/k7zse42Xqk/Lv6j2dob1d+T/3kM7Ufv6+9lJ/leok/MP6U/9D6xx8p
n/F97HqKP+GU/9R40v5n1mMXnq2/5J9rP3mL9uIvzD/+0vrvzF+ZX/I51if5
19qLv7G/pvy32s945roekn/n+k79edY3/l6+I//g/Er+o/Ek/8n445+tV9xq
feJf5Dvxr9Yr7f9mfsnnW+/U/914ky+wXsn/MN/kf6qf9fjL9ZrjvVCe4/23
9Uu+yPxzvfzjfEr+rzz+T/spX5pUlM/1uFjh5oG8eOHqXL9LFK6NlyzcGi9V
uC5uU7ghXlr5tN9Wf+l/Gf0lb1e4Kvmyymc+7bWX+SxXuCXlOxSuSP/Lm29c
Ubgp/a0gj1csXE75lcwveUfzi1cuXJP9tJPy2S9XMb7sl53NL/ePVbWXfDXz
zfmxOud86KJ88jWsX/KujlfyNQtXxpXmG6+lvdTvZrzJ1zafXK/rmG+8Lud6
Wc/65/xfX3spv0Hhxvx8s6Hx5+eh7oVL+XlxI+0dyj2MJ/nGyiffxHjiTa1H
yldZj/z8uRnn58GeysebO17xFs6/eEvrl/H30n/yrcw/7s0pv7X+Mp4+xpPx
buP4J++r/3hb/aX8dtYn899e+4dxNSffwfol76e9eEfnS7yT4xHv7HimvV2M
L/mu5nM499d+Le9mPZIPsJ7x7uYfD3R9pv4ezp/kg8wn3tN4Mr4a48n49rJe
8d76j/fRfryv/uP9OP0N1l7Gt7/68QHWL+UPdH4lP4iTH2y/ig+x3un/UHnm
d5j1TfnD9Zf2a83/CD5Cf0fykcYfH2U9Uv5o50PyY/QXH2u+KX+c8cbHO94Z
zwmOV+oPMZ+UP1F/8UmOZ+qfbHzxUP3Fpyif9ahz/senaj/lT+Pkp1uPeJj1
S/kzjD/jO9P84rPMJ/M7Wx6f4/yJhxt/fK75xecZ31F8vvnEF1j/+ELzj8v6
O5ovUj4eYb7xxfpP/ZHGF1+i/ZQfZX3yvpxL5fFl2s/7Ri43nvgK7af8lc7P
eLTx5P0kV6kfX63/+BrlM7567SW/1njS/nWOV3y96ye+wX6U9m403niM/uOb
9Jf1ulme43mL9cn5cqv2c37dpv+Uv93xiu9QPvXHuh7jO50faa/B/OK75Cl/
N6f9e4w/+b3GE9/Hmd/9jkf8gPpZj3Gul/hB4035h1wfyR92vud4PcLJHzWf
eDynvcesb+o36i9+nFP/CeuZ+T9pvGlvgvaSP2W8ySdav7T3tOOd/BnnW9bv
We3neEwy/uzvzxlP/LzzLfvRC9Yj+/9keX4eeNHxiJtcDyn/kvMpniJP+Zcd
3/gVxzPlXzX/jG+q/jK/19TPerxufXI9vWF9cv1PUz/vG3rT/JK/ZT1S/23r
l/LTtZf3H72j/+TNyid/1/jT/gz1U/49efqbaX1S/n3jSz7L+qf+B9rL+5k+
VD/+yPmX92F9rL34E+PP+7E+Nf+8T+sz51PKz3Z+xp/rP++7atF/2vvC/OIv
Hd/4K+fH/97/p/34a8cz/sZ84m/NJ56r/4zvO8cj+TzzS/69+SX/wXpkPj/q
L/5Je/HPxp/2Wo03/kX7Wc9fXX/JfzP+5PONP/5dfym/wPkb/+F8SPk/9Zfx
/WV88ULzj//WX7zI8cz7Gv8x/7y/7F/tJf9Pf3HpuWK88WKc+osXrkm+ROHq
vE9tycKtyZcq3JL6bbSX96EtXbgxblu4Oe9XW0b7cbvCDfGy6uf9nu0L18fL
cd7H1qFwU/LlOe1VmF/yFfQfr1i4Iu2tVLg27ijP+0JXNp/knaxPvErhuriz
/uJVzS/jW814s16rW8+Mr4v5pvwa2o+7Fq6M1zTfuFKe9tYqXJXxdCtcjtd2
fON1HJ94XeuT9tYz3vS3vvYynw2Uz/myofWLu5tfvJH1yPnWQ/l4Y+NP+U0c
n/S3qfnHVcYfb6Z+xt/TfJNvLs98trDeKb+l+SXv5fim/lbqx72tf7y18yXj
72N88Tb6i/ta3yfy/D8/n+f/+f48/8+v5/l//jjP//MM7sfT8/w/z+GduJl3
5sY8/88z8/w//5nn/3l+nv/n1jz/zyv6e/Lu3IMHcn/eg3vyID6A9+S+XMMD
eS+u5b35IN6H+/G+fAjvx4N5MA/n/XlvPoCP5AP5eD6Iz+aD+To+hO/lQ7mJ
D+OH+HAey7U8mY/I+ZK///OU/P0/51v+/s/P5O//fEP+/s8X8HF8BR/Po/gE
HsJD+Fg+kS/jk3gkn8z1PJSv5lOyf3Id386n8ng+jafx6fwID+PRfEbOfz6T
x/FZfDOfzXfzObk+eThP5XP5Bz6PF/f8xvm8SH4Bd5FfyEtyOdej8hfxvzwi
1yNfzD/xSF7Al/CHPCr7B1/Kc/kyXsiXc4XxXcEd+UruxaN5EF/F1Xw1V/I1
3IfreR2+ltvydbwFX8/78g28E9/IR/OYnG98U/YXvpnr+BYewLfySXxb9iO+
PdcL35HrhcfmeuM7c75zQ/YDvivXN9/NY/ienK98b/YLvi/7Dd+f64Mf4KE8
LvsfP5j9jh/K9cIP5/rnR7L/8aNc5vHZT/mx7BfcmP2UH8/+wU/wmfxk9m+e
wL35qdwfeGLuN/w0d+ZneD1+lrvxJO7Kz3F3fj73R36Bq3hy7of8Yu5P3MS7
8Et8Gk/J/s0v83n8SvZXfpUbeGruH/waf8OvZ//hN3gZz7dN48X4TW5R/i0u
yd/O/sHTs//xO7wCN/Oy/G72U57By/N7vBrPzPrz+9yGZ3EH/iD7L3/IK/NH
2X/44+y35vtJ9nf+NPspf8Zf8myex5/n/sEtPIu/4E/z/D835/n/7Pc8J/eL
PP/P7Y3/G16Ov835z3NzfvN3vDrP4434e96cf8j+zD/yzvwTb8M/8x7cmv2W
f+Ed+Vfen3/jg3k+H8K/5/7AC3g//oP34T/5cP6LD+OF2c/57+yfvCj7Hf+T
/Yr/zfXK/+V+wqXni39P5sV4CC/Ow3gJPoGX5ON5KT6K2/BpvDQfx235UF6G
T+F2fDovy+dye76cl+NruAPfycvzw1zBj/IKfCuvyI/wSvwAd+SbeGW+ijvx
KF6FL+bOXM+r8lhejcfz6vwcd+HHeA2ezF15Kq/JH3Alf8Fr8Vzuxj/x2vwf
r8MrPl78uy6vy+vxyrw+r8kb8Nq8Ia/E3Xkp3oiX4x7ckTfmf/P8Py/I8//8
VZ7/59Y8/8+L8vw/z8vz//x+nv/nz/P8P7+X5//53Tz/z6/m+X+elOf/+aE8
/89j8vw/357n//mWPP/Pt+X5f74yz//zDXn+ny/N8/98WZ7/5yvy/D+fn+f/
eXSe/+cb8/w/X53n//nePP/Pd+f5f56Q5//52Tz/zy/k+X9+MM//89N5/p/v
z/P/fH2e/+d78vw/35Hn/7kxz//z43n+nyfm+X+ezoP5I96f3+AD+EM+kL/m
g3g+H8y/5Pl//oEP5U/4MP6YD+cvuZa/5SP4Mz6Sv+GjeA4fzd/zMdzCx/I7
fBxP4eP5JT6Bn+Eh/DyfyE/wSXwzn8wjeChfx6dwA9fxU3wq38Wn8Vt8Os/k
Yfw6n8HT+Ex+mc/iGXw2z+Zz+Gcezn/zufwdn8d/8fn8I1/AC/lCXtx+WeYK
voiX5BHclS/mzjySu/MlvD6P4kq+lDfny3gTvpy34St4V76St+bR3JOv4nX4
at6Mr+HtuJ578LW8Hl/HG/L1vAbfwN34Ru7AY3gtvok78c28PN/CJb6Vf3f8
buPF5Lfzb/I7eFn5WG7Hd3IXbuAt+C7eiO/mXnwPb8/3cl++j3fi+3lTfoCr
eBzvwA9yP36Id+GH+SB+hAfxo7wbj+dafoz350Y+lB/nvfgJ3pif5D48gbfi
p/gAnsiD+Wk+nJ/hIfwsX8ST+BR+ji/h53k4v5D7N0/ma/lFvoWb+Cp+Kfsl
T+Fr+OXc7/kVvoFfzf2dp/JD/Fr2a349939+g+t5Gl/Bb/Ll/BZfym/znTyd
r+Z3+D5uzv7P7/IjPCP3d36P3+aZ2d/5fX6VZ/Fr/AFP5g/5Tf6Ip/PHuZ/y
J7nf86e5P/Bnuf6fKP6dzW358+wf3JL7g/pfZL/hL/lf/or/4zm8iL/O/Ym/
4S/52+xXPJcX8He8hPHNy37F3+f+wz/wKvxj7l/8E/+j/Z+5vbyV/5D/kv1c
/mvuV/wb9+b5vDv/zvvxAj6K/+B9+U/uz3/xwbyQh/LffBgvyn7G/3AN/5v9
lf/L/ZRLLxT/bs+L8V68OB/KS/BgXpJ34qV4D27Dh/PSfAq35QN4Gd6F2/GO
vCzvye25mpfj3bgDD+TleTuu4EG8Atfyinwyr8Rl7sgX8sp8BXfim3kVvoE7
80hela/h1fhiXp3Hche+g9fgeu7Kt/Ca3MCVfBOvxWO4G9/La/NFvA4fw+vy
sbweD+H1+RzegI/jDflU7s4n8kZ8FvfgM3hjruNN+EDelM/mKj6CN+O+3JP7
8ea8JW/BPXlL7sW9+BDeinfm3rwhb80rcB9enLfhNtyXl+Ft+S/72Xa8qnx7
Xo+ruQPvwEtxP/5Uezvyk7wT38878/m8C5/Eu/J53D/nA+/G+/EAfju///Mr
+f2f38zv//xafv/na/P7P9+X3/95XH7/z/zy+z835fd/bs7v/zwrv/9nvfL7
P7+Y3/+zP+X3/6x3fv/naXn/Hz+T9//zVp7/OKRw65Z8aOG6+LDCNb348ML1
yWvVT35E4crefKTy8VGFm+KjCzdszceoHx+r//i4wuX4eE57JxSuTT6kcEV8
YuHqPnwSJz9Zf2lvaOHmrNcpxhfXWc+UP1X5+DTzi083/9QfVrgx+Rnmk/zM
wi1Z77PMLz7b/LL+5+g/Hq6/lD9X+8nPM//0d372H77A+LfgC7W/OZcd/558
kfWJR1jP+GLnVzzSeOJLjDcexenvUu3Flzm/Uv5y7W/GV1iv5Fdar9QfbX7J
r9Je8qutf/JrOO3Xay++lqv4usJV8fXmE99gvVP/RuNJPsZ6Jr/J+mc8N3Py
WxzP5LfKe/Bt+t+Ibzfe+A7l47GOb3yn9uMG9dP+XcYf3638xnyP9d2E71U+
+X3a25Tvtz5ZjwesZ/Jxzp+096A8/T/EGe/D5rchP8Ib8KP6j8eb/3r8mP7W
50bjS/nHtZfyTzh+Kf+k8zGeYD1S/in9xxO1ty4/rX7yZ7QfP6u9lJ/keomf
M/6Uf976xy8on/FNdj3FL3LKNxlP2n/JesRT9Be/rP11+BXtxa+afzzV+q/N
r5lf8tetT/I3tBdPs7+m/Jvaz3jecj0kf9v1nfrTrW/8jnwtbnZ+JX/XeJLP
MP74PesVz7Q+8fvybjzLeqX9D8wv+YfWO/7IeOOPrVfa/8R8k3+qfo7nZ67X
HO/Z8vhz6xe3mH/O/y+cT8m/lMdfaT/l5yif6/Fr69udvzH/XL/fmn881/hy
vX9nPZPPc/zj75WPf9Bf+v9Rf+n/J+NN/rPymU+r9pL/4njHvzoe6e83843n
O1/S3+/yeIHjl/J/mF/yP80v/sv5k/10ofLZL/82vuyXi8wv949/tJf8X/PN
9fIf53wpTS7KJ1+scE3yxQvXJV+icFW8ZOGGeCntpX6bwq3Jly5czvXatnBt
vAznemlXuDLn/7LaS/n2hZvy881yxp+fhzoUrsjPi8trbxuuMJ7kKyiffEXj
iVeyHinf0Xrk58+VOT8PdlI+XqVwddy5cCn1V7V+Gf9q+k/51c0/7sIpv4b+
0l5X48l41yzckrxS/8nX0l/czfpk/mtrvy+vw8nXtX7J19NevL7zJd7A8Yg3
dDzTXnfj25Y3Mp+4h/a3442tR/JNrGe8qfnHVYXrU38z50/ynuYTb248Ge8W
xhNvab3iXvqPt9J+3Fv/8dac/vpoL+PbRv24r/VL+W2dX8m34+TbF26Oq613
+t9BnvXvZ31Tfkf9pf2dzH973ll/1byL8ce7Wo+U7+98SL6b/uIB5pvyuxtv
PNDxznj2cLxSf5D5pPye+otrHM94L+NLe3vrL95H+Xhf53/WZz/tJx/Myfe3
HvEB1i/lDzT+jOcg84sPNp/M7xB5fKjzJz7M+OPDzS+uNb4d+AjziY+0/vFR
5t+Pj9ZffIzy8bHmGx+n/7R3vPHFJ2g/7wsZYn3yvpwT5Xm/yEnaj082nnio
9lP/FOdnXGc86e9U9ePT9B+frnzmM0x7yc8wnrR/puMVn+X6ic+2H6W9c4w3
Hq7/+Fz9Zb3Ok+d4nm994gu0n/PrQv0nLzte8UXK53wb4XqML3Z+pL2R5hdf
Ik/5UZz2LzX+5JcZT3w5Z35XOB7xlepnPUa7XuKrjDflr3Z9JL/G+Z7jVc/J
rzWf+DpOe9db3xy/G/SX9m7k1B9jPTP/m4w37d2svfgW441vtX5p7zbHO/nt
zres3x3az/EYa/zZ3+80nrjB+Zb96C7rkf3/bnl+HrjH8YjvdT2k/H3Op/h+
eco/4PjG4xzPlH/Q/DO+h/SX+T2sftbjEeuT4/Go9cn1P179vG/oMfNL3mg9
Uv9x65fyT2gv7z96Uv/JJyif/CnjT/sT1U/5p+Xp7xnrk/LPGl/ySdY/9Z/T
Xt7P9Lz68QvOv7wPa7L24heNP+/HajL/vE/rJedTyk9xfqb8y/rP+65e0X/y
V80vnur4xq85P/73/j/tp703HM/k08wnftN84rf0n/G+7Xgkn25+yd8xv+TN
1iP9v6u/eIb24veMP+3NNN74fe1nPWe5/pJ/YPzJPzT++CP9pfzHzt/4E+dD
yn+qv4zvM+OLZ5t//Ln+4hbHM+9r/ML88/6yL7WX/Cv9xXOMN/6aU/8b7SX/
Vnt5n9pcxz/lv3P+xPO0l/ehfW/+8Q/ml/er/aj9+CfzjX9WP+/3bHU84l84
72P71fFL/hunvfnml/x3/ccLnF9p7w/nS/ynPO8L/ct8ki+0Psn/tv7JF+kv
/sf8Mr5/jTfr9Z/1zPhKLxbzTfnFCpfjxQtXxUsUro2XlKe9pQpXZzxtCtfH
SxdujdsWboyXKVyX9toVrkh/y2ov82mvfM6X5Qq3xB3ML16+cHPOxwrl4xWM
P+VXLFyZ/lYy/7ij8ccrq5/xdzLf5KvIM5/O1jvlVzW/5KsVrkn91dWPu1j/
eI3Cpbir8WU+a+ovrlT+zzz/z//k+X/+Nc//8xL+PrsOt8/z/9w2z/9zmzz/
zyvk+X9eOs//8x/6687L5Pl/Xj3P//Oqef6fV+FNeAPelLfkKt6RN+Pe3JN3
5815W96Cd+YteU/uxQN5K67m3rwHb80DuA8fwttwf+6b483b8j75+z8fzNvz
8VzNp/IOfCH342H5+z8Pzd//+YL8/Z9Py9//uZy///PZ+fs/n5u///MJ+fs/
H8a789E8kI/kPXhfHsR78558FNfwEbwXH8d787G8Dx/I+/LJvB+fyYN5JO/P
Z/ABfAwfyGfxQXw6H8wn8iFcx4fyxXwYj+DD+Uau5QY+gu/gI/lRPorv4qP5
Nj6Gx/KxfBMfx2P4eL6VT+AreQiP4hP5ej6Jb+eT+QEeyg/yKTyJ63gqn8ov
8mn8GJ/Oz/MwfpzP4Hv4TH6Wz+I3+Gx+ic/hd3k4f8Tn8jt8Hn/A5/MrfAG/
zxfyW1zmmXwRz+ARPIcv5h95JP/El+R+wqN4Hl/KrXxZ7i98Oc/nK/hrvpJn
8Whu5qv4E76av+dr+Cuu51/4Wv6cr+P3+Hr+gm/guXwjf8tj+GO+iV/nm/k5
voWb+FZ+gW/jh/l2foLv4EYey+P5Tp7ADTyO7+Kn+W5+hu/haXwvT+H7+EO+
n2fzA/wZj+Nv+EH+mR/ikufRHuYV+RFenR/N/Z7HcyU/xstzI6/Jj/Om/ARv
w09yFU/g7vwUr8UTeRN+mrfmZ3gzfpbX5Um8MT/Ha/PzvAW/wOvzZO7EL/Ia
3MQr8UtcwVO4I7/MK/Mr3I5f5eV4Ki/Nr/Fq/Dp35Td4I57GPfhN3orf4m35
be7D03kAv8N7czPvw+/y0TyDD+L3+CSeySfw+3wkz+Iz+QMezh/yufxR7vf8
MQ/jT/g0/pQv4M/4fJ7Nl/DnfBW38J38Bd/IX+b+zl/l/sxzeDR/zZfzN7lf
87d8Gc/lS/k7HsHz+Fr+nkfxD3we/8hX8098Hf/Mt3Jr9j/+Jfsl/8qT+bfs
fzw/91P+Pfd7XsBv8h88lf/kifwXP8IL+T7+m+/mRfwY/5P7Bf/Lb/N/uR9x
qan4d3rhcvyZfDH+Wh4vkC/OpSeLPF66cGkJXk4ed5UvyZvJ453kS/EW8ng7
eRvuJ497ypfmdeRxD3lb3lweryFfhleWx4vL2/Hy8nh1+bK8jDyeb/3a87/W
N/5Vvhy3yuM58g78kTx+Q748PyWPn5NX8DPyeJJ8BX5IHj8pX5Hvl8cPyFfi
B+Xx7fKO/LA8niBfmR+Vxy/LO/FL8vg9+Sr8oTz+VN6ZX5fHs+Sr8qvy+An5
ajxFHj8vX53fkcfN8i78vjz+Ub4G/ymP58q78h/yeEnn35q8kvMvrpBX8rLy
eKH21+K/tB8vpn43bqN+vEj9tXkpebyE+utwO3n8n/rr8k/6j7+Qr8ct8vgD
+fr8iTx+V74BPy2P75JvyI/L4xfl3XmmPG6Sb8Tfy+Pf5D34W3n8nXxj/lIe
/yLfhP+Rxx2s76a8mvWN28qruLM8bi/fjFeVx2vJe/Km8nht+ea8rTzeSr4F
7yaPd5FvydvL473lvXgPeXyQfCs+Vh4fIO/Ne8njHeVbc408PlTeh3eXxzvL
t+H+8rivvC/vII83lm/L1fJ4S/l2vIk8XlO+PXeUx5Xyal5RHneX78AbyuNt
5P14H3k8QL4j7yePD5PvxAfL46PkO/MgebynfBeulcdHyHflY+TxOfL+fLI8
Pl6+G18oj8+UD+Dz5HGdfHceKI8PlA/kwfL4LPkefIY8vkA+iC+Xxw3yPflq
eXyvvIZvkccPyPfiRnn8jHxvfkQePy7fh8fL44fl+/KT8vhl+X78hjx+Wj6Y
X5LHj8n35wfl8Tj5AXy/PJ4sP5AflcevyA/K/i+P35QfnPu7PP5Bfkj2d3k8
R34ofyOPP5MfxvPk8Y/yw3M/lcfLTij+rc39oXA57i4/gteXx5XyI3N/kMcd
5UfxGvK4q/xoXl0et5Ufw4vJ4xXlx/LK8rib/LjsV/J4K/nx3Esery0/gbvI
443kQ7iTPN5BfmLuV/J4f/lJPEQeD5OfzCPk8enyoXycPB4uP4Wvksfny+uy
n8njU+SnZn+Vx8fKT8t+Lo/r5Kdnf5THZ8iHZb+XxyfJz8h+J4+vlp+Z/VIe
HyM/i4+Ux0PlZ/Ph8vh4+Tl8ojw+VD489w95fKH8XB4tj++Un8dj5fGD8vOz
38njJ+UX8D3yeLz8Qr5bHr8gL/Pz8vgx+UXZ7+Xxi/IRPFEePyW/OPu5PG6Q
j+SR8vgS+SW5v8njm+WjeJQ8rpdfylfI4zHyy/gGeXyN/HI+Wx7fJL+Cy/L4
YPmVfIQ83lc+mveSx/vJr+Jz5fHR8qu5vzyukl/Da8njdeX1vIE87iy/lnvL
453l1/HG8ngd+fX8t/tPPMP96QZ+VR7fLr+Rr5THt8nH5HyQx8PkN+V+6/ej
+Cu/P92c+6c8/kZ+CzfK41fkt/Jr8niG/Db+XB7/LL+df5fHf8vv4Nny+Hj5
2Ky3PB7p+Yk7eUHxPv0yV6zs+Y+G3K8Ll7m8kvyuwrXJuSH53bn/yrmqk/we
5bnMzcnvLdy4ipyruHSf/pNzffL7Oe1zXfIHClemPtd0lo/j5Fyb8T1YuCXz
46qs30PWM/1zS+o/bH7JuTn1HynclJzrkz9auNV6l7ku6z/e/HJ8uIVLj+kv
9bk+eaP5Z35ckfxx419Rzi0ryJ9w/LnMVRXyJ60nl7mcfILxJOfm5E9x2ufa
9D/R+ZX6XF5e/rT1Ss6Vqf+M+SXnhuTPWv/kcdqfpD0uxx3kzxWu5jI3J3/e
eqc+NyZ/wXom55asz2ROzjXJX5S3k3PzMvIm4+UytyR/yfFNfa5JPkX95NzI
pZeVX1bODe3lryifnCuXk79qfbJ+XJ18qvNHe2WuTv+vcebHLUvLX+c2cq7k
0hvmv5Sc67k0zfhSn1uWlL/p+KU+16X+W9ZD+TJXpv7b2ltCznXJp2s/9blB
+dI7rpfU5/rUb7b+qc+1Gd+7rqeMP079GcaT9rki/b+nv+Rcu7h8pva4zJXJ
37f+ybkh+Szrs5icy1z6wP6a+lyZ8X3oekjOran/kfVN+9z6X2uRf+z8Ss4t
yT8x/pKc65J/an24zHXKlz6zXmmfy8lnW++0z1XJP7deaZ+bk7eon+PPNTn+
X8hz/Lky+Zfmn/OfG5N/JU99rsn1NUd512OZW9vKvzb/XL9czv7zjfFl/+H6
5N86/qnPFcnn6i/9c236/854k3Nr5jdPe8m5lPrfOx7pnxvT/w/OF+XL3Jj6
Pzp+qc/1yX8yv9TnOvtp6Wfl7ZdlLmX/bDW/3D+4KfvzL+ab6zfO9f+r8sm5
Nvlvjldyrs71N998k3NT6v9uvDk/uT7X/wLzzfUb5/r9w/rn/OdS+v/T9ZCf
b7g2P3/95Xz382KZq1aVLzSe5FyZ/G/j4TKX8/PnIuuRnz/j/Pz4j/L5+ZBr
kv/r/Et9bsr4/9N/6nMpPx+XXiqcnMvJFytcnflxa/LFC1ck57rMb4nC9Zk/
l1eTL8nJuTL5UtrjMjcmb1O4Kjk3Z/2XNr7V5VzNpbba7yLnEpeWKdyU+tya
+u0KN6Q+1yZf1nxSnysy/vbGk/FzffLl9J+ca5N30H/yOP0vr72Mj2szvwrr
l/FxTfIVODm3pP0VrXf655as/0rWN/W5Ku13NP815FzTVb6y8XOZm5QvdXI+
JOe61F/FfNM+N6d+Z8c7OVem/qrmk5wbU381xzM5N2V+q+sv688Vybs4/7M+
3Jh8DU7O9Vn/rtYv7XNlxrem+WV9uCXzq5SvKeeG5GsZf+pzU/Juxpf6XObS
2tY/OVdUytfRH5e5Nvm65pucm9L+esaX9rki7wtZ3/p4X06ZK/J+kQ20z2Vu
SL6h9lOfa/L+ne7Go78yN6T/jfSfnJsyvx7aS871aX9jxyv9c1XyTexHWR9u
Tvub6j8512T9quQ5vlyR47uZ9nN+cVXyno5X6nNrzr/NXY+5Pric83sL80v7
XE79LTntc03yXsaT9uPMbyvHI+cH12R9ertesj5cl/pbuz5yfLgxx7cPpz63
pP1tOP1zRY5fX/2l/Tj1t7WemT9XZnzbaS/tcyn1t7d+GR9Xp3618y3rx5U5
PjsYf/Z3bs39p5/zLfsTN2b/31Genw+4IT8f7OR6yP2fa1N/Z3nqc1Xq7+J4
pj6Xsj/uqr/Mj6uyPv2tT64vrs71v5v63jdU5sbkA6xH6nNl3k+0u/a8/6jM
VckHKp+cS8n3UD/9cyn9D7I+2b+4MefXntY/9bk672eqUZ/LXJf3e+2lPS5z
Vd6Ptbf5e59WmetTfx/np/Jlrs77rvbVf3IuJd/P8U3Otel/sPaVL3M5+f7m
k/rcmPwA/Wd+XJn8QPNLzvXJD7Ie6Z/rMv6DtZeca7M+hxhv2uf6vJ/sUNdf
cm5MfpjxZ/25Mu0f7vxNfW5O/Vr9ZXxcm/EfYf7JuSn5kY6n97eVuS7vLztK
e8m5Pu97O9p4k8epf4z2knNt3qd2rOOvfJlLef/ZcdrjMjcnP978vF+tzLV5
39oJ5pucm/M+yyGOB5fjvI/tRMcveZz2TzK/5Fyb9k92fmmvzOW0P1TufaFl
bk1+ivVJzvXJ6/SX9rk54zvVeLN+XJnxnWa+WR+uT/3TnR/JuS75MHnmzzUZ
3xnO34yPS3k/6pmOT3IuZ3xnGW/654Yc/7OVz/nDrTn/zjG/5NyS83e48jk/
uSb1z3V8sn5cl/7PM/7kXJPxn2++GT/XZP0usN5ZP25IfqHjm/a5Jv2XrX9y
rkh+kfFl/lyf+Y0wvlX8/TXu4u+vF/MK8ribfCRvJI/Xl1/C68rjKvkoXk8e
d5JfyhvI4z7yy7i3PO4lv5x3lcf7yq/gI+Xx/vIreYg8PkQ+mo+Wx0PlV/GJ
8vhw+dV8kjw+QX4NnyuPj5PX8yny+DT5tTxcHl8qv47r5fFY+fV8ff7+z1fl
7/98R/7+z9fm7/98Z/7+zzfl7/98a/7+z5fl7/98vjy+WH4zXySPT5ffwqfK
4xHyW7ksj0fJb+NL5PHZ8tt5tDy+UX4H3yOPb5CP5ZHyeIz8Tr5OHl8hb+Br
5PHd8rv4Lnk8QX43vyiPn5ffw2/J4yb5vTxJHr8gv48nyuOn5Pfzs/L4IfkD
fJ88fkI+jp+Tx1PlD/Lr8vgj+UP8tTyeLX+Yp8vjT+SPcLM8niJ/lD+Ux3Pl
47lFHrfKH+M/5fFP8kZeII+/kj/O8+Xx9/In+Dd5/Iv8SV7C80Fxe88HTeDl
5PEq8qd4GXm8vHxi7i/yeCX507ykPP7d+J7hn40/Xih/ltupHy+u/UlcIY//
Vf85/lX7cUn953lp9eM28hf4L/Xjb7U/mT+Wx5/LX+RP5fE0eRO/K4/fkb/E
b8vj9+RT+DV5PEv+Mn8gj7+Tv8JfyOM/5K/yP/J4kXwqL2X94g7W7zVeUx5v
Jn+d+8jjXeVv8PbyeBP5NN5OHg+Sv8kHyeM95W/xbvK4Wv427yGPD5BP5xp5
vJP8HR4oj/vJm3kfebyL/F3eUh73lc/gnvJ4U/l7vLk83kI+kzeUxz3k7/N6
8nhr+SzeVh4PkH/Au8vjwfIP+RB5fKD8Iz5BHp8q/5hPk8cXyz/hc+TxlfJP
+TJ5fJH8M75RHt8in823yuPr5J/z9fL4WnkL3yGPb5d/wffK40fkX/JkeTxB
/lXu7/L4Ifkcflgej5N/nfu1PH5A/g3fL4/vkn/LjfL4Pvlcvk0ePyr/jh+X
x8/K52X/k8dvy7/nz+Txd/Ifcj+Vxx/Kf+R58vhr+U/8vjx+U/4zvyKPX5K3
8nR5/Kn8F/5BHv8l/5V/lMeL5L/l/vtUkccrFy7Nz/4sj9eT/579QB5vK1+Q
/U8eHyX/I/ubPD5U/icfIY/3kv/FO8rj3eULeW953Ff+d/Y7ebyWfFHuJ/K4
j/wf3kAeryT/l9eQxyvI/+Pl5fES8tIU6+D4xXMdv8V4pjz+WL44fyCPP5Iv
wW/I4xnyJflVeTxVvhS/Lo+fk7fhafL4PfnS/JY8/lLellvk8a/yZfgPefy3
vB1/K49/ly/Lc+Txu/L2/IU8/kS+HP8kj3+Wd+D58ri947s8r+L4x0vLK7iT
PF5bvgL3lMebylfk7vJ4VflK3FkeV8o78rryeHX5yryOPO4m78QbyuOu8lV4
OXlcknfm/6xfvMD6rsoL5XGrfDWeJY+b5KtzszyeLe/Cv8njz+VrcDvjj1c0
/q7cRh63la/Ji8njCnkld5HHG8vX4q3l8frybryVPN5Ivjb3lsfV8nV4kDzu
J1+XD5HHg+Xr8fHy+Bj5+nyYPD5VvgGfJI/PkW/Il8jjs+TduU4eHynfiE+R
x+fJe/AQeXy0fGM+Th4fLN+Ea+XxQPmmfLg83ldexXvI4+3km/Hm8nh7eU/e
TB7vJt+c+8vjg+Rb8Gny+AT5ljxMHp8v78XD5fEI+VZ8sjweKu/NF8rjsnxr
HimPb5b34dHy+FL5NjxWHt8o78u3yeNr5NvyifL4bPl2fIY8HiPfnm+Qx3fI
q3mcPH5RvgM/Ko9flvfjZ+TxVPmO/I48/kC+E78pj5vlO/Pb8niafBeeIY+/
lO/Kc+XxLHl/bpHH0+W78evy+DX5AH5VHn8m353fksdfyQfyb/J4nnwPni+P
l51Y/DuIFytcjpeQ78lLyeNF2q/hZeRxe/X34q7yuLt8b95aHu8m34d3kcfb
y/fl3vJ4c/l+3FcebysfzH3k8fry/blSHm8mP4C3kMc7yA/kg+TxYPlBvJ88
7ic/mLeRxwPkh/CW8rhWfiifKo/PlB/Gl8vj6+WH813y+Dp5LY+Sx7fIj+BH
5PHt8iP5Rnl8tfwovlAeXyI/ms+Xx9fIj+Hb5PEN8mN5hDy+Un4c3yGPH5Uf
z2Pk8Uj5CXyRPL5KPoQvkMeXyk/kK+TxefKTeLQ8His/mR+Wx5PlQ/kFefy6
/BSeJY9nyOt4ijx+W34qvySPP5Wfxp/I4+ny0/kDeTxbPozfl8cz5Wfwl/L4
RfmZfI88vld+Fo+Tx0/Lz+b75PFj8nP4QXn8lHw4PymPx8vP5Zvk8UT5eXyn
PB4uP5/L8vh0+QVcJ4+HyS/kW+XxxfIyHyeP95RfxNXyeCf5CN5VHm8lv5j3
l8dHy0fyQHm8o/wSXk0e/+L+NYrnuD/Gz8kv5Yfk8ST5Zfy0PL5efjkvK48X
l1/By8jjpeRX8jt+v4u/8vvdaP5GHv8iv4r/lccdtH81d9R/vJr8Gv5H/fhS
7dfzjvL4Hv9/+bVpr3gfb5krf2tt+v//fl3hil8Ll7n+F/n1heuSc2PyG9TX
Xpmr58tvVJ7L3JJ8TOGm3+VczaWb9J+cG5LfzGmfy8lvKVyV+ly7QH4rJ+e6
jO+2wq2ZH1dn/W4vXJn+uTX17zC/5NyS+mMLNyfnhuR3Fi5l/bmc9W8wv+Tc
yqW79Kd8mRuS323+mR9XJr/H+Fvl3Pqz/N7CFVzm6p/k9xWu4zLXJ7/feJJz
S/IHOO1zXfofV7gx9bn+R/mDhcvJuSr1HzK/5NyY/OHCpfQfZ3yPaE9/5fgH
+aOFa7jMLcnHF65MfW5K/ljh6uTcmv4bOTnXJn9cPlfOLd/KnzBeLnNr8icL
V6Q+1yafoH5ybuLSU8p/J+fGefKJyifnqu/lTxeuzPpxTfJnCjdor8w16f9Z
zvy49Wv5JJ4j5youPWf+X8m5gUvPG1/qc+uX8hcKV6c+l1N/svVQvsxVqf+i
9r6Qczl5k/ZTnxuVL71UuC71uSH1pxRuSn2uy/heLlyf8cep/4rxpH2uTP+v
6i8517XIp2qPy1yV/LXCFcm5MfnrhVs/l3M9l94o3Jz6XJXxTSvckpxLaf/N
wtVpn0uz5W8VrknOrZ/J3zZ+5ctcTj69cAOXuZz23ylcl/a5Pnlz4cq0z9XJ
3y3cmPa5JfkM9XP8uTbH/z15jj9XJZ9p/jn/uSn5+/LU59pcX7OUdz2WuZT9
5QPzz/XL9ck/NL7sP9yQ/KPCzanPlck/1t83cq7j0ifGm/FxKeP/VHvJuSL1
Pytcnf65Kf3PLtya/rkp9T8v3Jj63JC8xfxSn8v209IXytsvy1yR/fNL88v9
g5uzP39lvjk/4hzfOcrn+ua67A9fF65PzjW5/r4x3+TcnPrfGm/654Zcn3PN
N9dvnOv/u8LVOf+5Iv3PK9ySn2+4Lj9/fV+4ys+LZa7+Q/6D8STnquQ/Gg+X
uT4/f/5UuCY/f8b5+fFn5fPzIdcmby1cmfrcnPH/ov/U54r8fPwrJ+f65L8Z
T+bHpYx/vv6Tczn574UbMn+u/1O+gJNzVfI/tMdlbkr+Z+Hq5NyS9f/L+P6S
cw2XFmp/oZwruPR34ebU51LyRYUbU5/r0v4/5pP6XJnx/2s8GT83JP9P/8m5
Lnnp5aL/5HH6X6xwQ8bHdRn/4oWrMz6uTb4EJ+fWtL9k4Zb0z61Z/6UKl1Of
q9N+m8I1f8u5dpF8aePnMjcrX2pbuCk5l1N/GfNN+9yS+u0KVyTnqtRf1nyS
c1Pqty9cmZybM7/l9Jf158rkHQrXZ324KfnynJwbsv4V1i/tc1XGt4L5ZX24
NfNbUf6PnBuTr2T8qc/NyTsaX+pzPZdWtv7JufJfeSf9cZnrkq9ivsm5Oe13
Nr60z5V5P8+q1ifv1+HKvF9kNe3n/TzcmHx17ac+1+b9O12MJ+8n4cb0v4b+
k3Nz5tdVe8m5Ie2v6Xilf65OXlm4lPrckvbX0n/Wj2uzft3kOb5cmeO7tvZz
fnN18nUcr9TnUvJ1XY+pz/U5v9czv5y/XJ/zd31O+1ybfAPjSftx5reh45Hz
g2uzPt1dL1kfLqf+Rq6PrC835fj24NTn1rS/Mad/rszx20R/aT9O/U2tZ+pz
VcZXpb3kXJH6m1m/jI9rUr+n8y3rx1U5Ppsbf/Z3LmX/2cL5lv2Jm7L/bynP
zwfcmJ8Perkecv/nutTfSp76XJ36vR3P1OeKjG9r/WV+XJ316WN9cn1xTa7/
bdTP+4m4KXlf65H9g6vyfqNttZf3I3F18u2UT84VybdXP/1zRfqvtj7pn5ty
fu1g/VOfa/J+pn7q5/1MXM77vXbUXt4PxtV5/95O5p+cG1J/Z+dn3q/FNXn/
1S76T84VyXd1fJNzXfrvr/28P4vrk+9mPqnPTckH6D/j56rku5tf6nND8oHW
I/1zOePfQ3vJuS7rM8h40z835P1ke7r+knNT8hrjz/vZuCrt7+X8TX1uSf29
9ZfxcV3Gv4/55/1l3Jx8X8cz72/jct5ftp/2knND3u842HiTx6m/v/aSc13e
v3aA45/3T3JF3n92oPbyfkluSX6Q+eX9lFyX96sdbL55/xq35P2ehzgeqR/n
/aKHOn7J47R/mPkl57q0f7jzK+934/q0XyvP+025lPeHHmF9knND6h+pv7TP
LRnfUcab9eOqjO9o8836cEPqH+P8SM7l5MfKM3+uzfiOc/5mfFyR+R3v+CTn
+ozvBONN/9yY4z9E+Zw/XEp+ovkl59acvycpn5xrc/6e7Phk/bic9ocaf3Ku
zfhPMd+Mn2uzfnXWO+vHjclPdXzTPtem/9Osf3KuTH668WV+3JD5DTP/Xk9V
/x8vuf4N
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9960.}, {-74779., 5858.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7540285935446577`*^9, 3.754876210681343*^9, {3.754876290541449*^9, 
   3.754876316677539*^9}, {3.754876377299254*^9, 3.754876389808488*^9}, 
   3.754876454552772*^9, 3.758671770396912*^9, 3.758671877475307*^9, 
   3.758671932508157*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Tv8N2M/g5A==\
\>"]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 2 \[OpenCurlyDoubleQuote]Inventory Management System\
\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.753411260175559*^9, 3.7534112607315607`*^9}, {
   3.753412277002389*^9, 3.753412278353713*^9}, {3.753414225517942*^9, 
   3.7534142270975723`*^9}, {3.7534188351980963`*^9, 
   3.7534188387211657`*^9}, {3.7534195952482567`*^9, 
   3.7534195971530123`*^9}, {3.7540271225211782`*^9, 3.7540271238682413`*^9}, 
   3.754668534556757*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileInput", "=", 
   RowBox[{
   "OpenRead", "[", "\"\</Users/dmitron/Downloads/AdventOfCode/day2.txt\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ids", "=", 
   RowBox[{"ToString", "/@", 
    RowBox[{"ReadList", "[", "fileInput", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContainsXQ", "[", 
    RowBox[{"id_", ",", "X_"}], "]"}], ":=", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"id", "//", "Characters"}], "//", "Tally"}], "//", 
        "Transpose"}], ")"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "X"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twos", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"ids", ",", 
      RowBox[{
       RowBox[{"ContainsXQ", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "]"}], "//", "Length"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threes", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"ids", ",", 
      RowBox[{
       RowBox[{"ContainsXQ", "[", 
        RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "]"}], "//", "Length"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", 
   RowBox[{"twos", "*", "threes"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"id1", ",", "id2"}], "}"}], "=", 
   RowBox[{"Catch", "@", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"HammingDistance", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"Throw", "[", "x", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Tuples", "[", 
           RowBox[{"ids", ",", "2"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lettersInCommon", "=", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"id1", "//", "Characters"}], ",", 
            RowBox[{"id2", "//", "Characters"}]}], "}"}], "//", "Transpose"}],
          ")"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}], "//", 
    "StringJoin"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", " ", "lettersInCommon"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.753411296217545*^9, 3.753411524468155*^9}, {
   3.753411867951787*^9, 3.753411920556342*^9}, {3.7534121905945797`*^9, 
   3.753412194694275*^9}, {3.753414318549238*^9, 3.753414327801609*^9}, {
   3.753414365457943*^9, 3.753414370997603*^9}, 3.753419075975951*^9, {
   3.7540254161365347`*^9, 3.754025582825342*^9}, {3.754027091199169*^9, 
   3.7540271159044323`*^9}, {3.754028623968652*^9, 3.754028757966261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "6175"}],
  SequenceForm["Part 1 Answer: ", 6175],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7540255832396*^9, 3.754027116607712*^9, {3.754028738519301*^9, 
   3.75402875830275*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", 
   "\[InvisibleSpace]", "\<\"asgwjcmzredihqoutcylvzinx\"\>"}],
  SequenceForm["Part 2 Answer: ", "asgwjcmzredihqoutcylvzinx"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7540255832396*^9, 3.754027116607712*^9, {3.754028738519301*^9, 
   3.754028758323326*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Day 3 \[OpenCurlyDoubleQuote]No Matter How You Slice It\
\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.753415828334156*^9, 3.7534158331146107`*^9}, {
   3.753419584541201*^9, 3.753419585962182*^9}, {3.754024236214376*^9, 
   3.754024248474114*^9}, 3.754668537490061*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"claims", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/dmitron/Downloads/AdventOfCode/day3.txt\>\"", ",", 
     "\"\<List\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"processedClaims", "=", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{"RegularExpression", "[", "\"\<\\\\d+\>\"", "]"}]}], "]"}], 
       "&"}], ",", "claims"}], "]"}], "//", "ToExpression"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fabric", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Scan", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"fabric", "[", 
       RowBox[{"[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ";;", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ";;", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}]}]}], " ", "]"}], "]"}], "+=", 
      "1"}], "&"}], ",", "processedClaims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"overlappingArea", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"fabric", "//", "Flatten"}], "//", "Tally"}], "//", 
       "Transpose"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", 
       RowBox[{"3", ";;"}]}], "]"}], "]"}], "//", "Total"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", "overlappingArea"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClaimAloneQ", "[", "claim_", "]"}], ":=", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"fabric", "[", 
      RowBox[{"[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"claim", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ";;", 
         RowBox[{
          RowBox[{"claim", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"claim", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"claim", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ";;", 
         RowBox[{
          RowBox[{"claim", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"claim", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}]}]}], "]"}], "]"}], "//", 
     "Flatten"}], " ", ",", 
    RowBox[{
     RowBox[{"#", "==", "1"}], "&"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"claimID", "=", 
   RowBox[{
    RowBox[{"FirstPosition", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"ClaimAloneQ", ",", "processedClaims"}], "]"}], ",", "True"}], 
     "]"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", "claimID"}], "]"}]}], "Input",
 CellChangeTimes->{{3.753415836857044*^9, 3.7534159050108213`*^9}, {
   3.753417400862623*^9, 3.753417413212914*^9}, {3.753418164806189*^9, 
   3.753418165118517*^9}, 3.753419084220484*^9, {3.754024306239746*^9, 
   3.754024381586609*^9}, {3.754024557167809*^9, 3.754024583863433*^9}, {
   3.754024633569889*^9, 3.754024701380143*^9}, {3.754024840840444*^9, 
   3.754024920278495*^9}, {3.754024999444244*^9, 3.754025000856639*^9}, {
   3.754025065152564*^9, 3.7540250785197773`*^9}, {3.754025181772438*^9, 
   3.7540251906316767`*^9}, {3.7540253037051764`*^9, 3.754025303941552*^9}, {
   3.75402880200613*^9, 3.754028805270207*^9}, {3.75402888904134*^9, 
   3.754028890140441*^9}, {3.754032874593935*^9, 3.75403289496385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "119551"}],
  SequenceForm["Part 1 Answer: ", 119551],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7540250791057*^9, {3.754025186311503*^9, 3.7540251924925957`*^9}, 
   3.754025304514835*^9, 3.754028806120111*^9, {3.754028881345809*^9, 
   3.7540288906629744`*^9}, {3.754032890356085*^9, 3.754032895434019*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", "\[InvisibleSpace]", "1124"}],
  SequenceForm["Part 2 Answer: ", 1124],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7540250791057*^9, {3.754025186311503*^9, 3.7540251924925957`*^9}, 
   3.754025304514835*^9, 3.754028806120111*^9, {3.754028881345809*^9, 
   3.7540288906629744`*^9}, {3.754032890356085*^9, 3.754032895519396*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 4 \[OpenCurlyDoubleQuote]Repose Record\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.7534187948537693`*^9, 3.753418798811668*^9}, {
   3.753419565824856*^9, 3.753419579412567*^9}, {3.753999035780389*^9, 
   3.753999036820641*^9}, {3.754027868615259*^9, 3.754027868830346*^9}, 
   3.754668527730281*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/dmitron/Downloads/AdventOfCode/day4.txt\>\"", ",", 
     "\"\<List\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"log", "=", 
   RowBox[{"Join", "@@", 
    RowBox[{"StringCases", "[", 
     RowBox[{"input", ",", 
      RowBox[{
       RowBox[{"\"\<[\>\"", "~~", 
        RowBox[{"ts", ":", "__"}], "~~", "\"\<] \>\"", "~~", 
        RowBox[{"evt", ":", "__"}]}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DateObject", "[", "ts", "]"}], ",", "evt"}], "}"}]}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sortedLog", "=", 
   RowBox[{"Sort", "[", "log", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sleepRecord", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"currentRecord", ",", "guard", ",", "time", ",", "message"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"time", ",", "message"}], "}"}], "=", "event"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "message", ",", "\[IndentingNewLine]", "\"\<falls asleep\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"currentRecord", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"DateValue", "[", 
                RowBox[{"time", ",", "\"\<Minute\>\""}], "]"}], "+", "1"}], 
              "]"}], "]"}], "+=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sleepRecord", "[", "guard", "]"}], "=", 
            "currentRecord"}]}], ")"}], ",", "\[IndentingNewLine]", 
         "\"\<wakes up\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"currentRecord", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"DateValue", "[", 
                RowBox[{"time", ",", "\"\<Minute\>\""}], "]"}], "+", "1"}], 
              "]"}], "]"}], "-=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sleepRecord", "[", "guard", "]"}], "=", 
            "currentRecord"}]}], ")"}], ",", "\[IndentingNewLine]", "_", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"guard", "=", 
            RowBox[{"ToExpression", "@", 
             RowBox[{"First", "@", 
              RowBox[{"StringCases", "[", 
               RowBox[{"message", ",", "NumberString"}], "]"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"currentRecord", "=", 
            RowBox[{"Lookup", "[", 
             RowBox[{"sleepRecord", ",", "guard", ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "60"}], "]"}]}], "]"}]}]}], ")"}]}], "]"}]}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"event", ",", "sortedLog"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sleepRecord", "[", "guard", "]"}], "=", 
     RowBox[{"Accumulate", "[", 
      RowBox[{"sleepRecord", "[", "guard", "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"guard", ",", 
      RowBox[{"Keys", "[", "sleepRecord", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"guardMostAsleep", "=", 
   RowBox[{"Last", "@", 
    RowBox[{"Keys", "@", 
     RowBox[{"Sort", "[", 
      RowBox[{"Total", "/@", "sleepRecord"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minuteMostAsleep", "=", 
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"Ordering", "[", 
      RowBox[{
       RowBox[{"sleepRecord", "[", "guardMostAsleep", "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"guardModeAsleep", "=", 
   RowBox[{"Last", "@", 
    RowBox[{"Keys", "@", 
     RowBox[{"Sort", "[", 
      RowBox[{"Max", "/@", "sleepRecord"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minuteModeAsleep", "=", 
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"Ordering", "[", 
      RowBox[{
       RowBox[{"sleepRecord", "[", "guardModeAsleep", "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", 
   RowBox[{"guardMostAsleep", "*", "minuteMostAsleep"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", 
   RowBox[{"guardModeAsleep", "*", "minuteModeAsleep"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.754029886206377*^9, 3.754029887938426*^9}, {
  3.754030405563525*^9, 3.754030406517355*^9}, {3.754030462641449*^9, 
  3.754030472381584*^9}, {3.754030624031439*^9, 3.754030629327474*^9}, {
  3.7540306839972143`*^9, 3.754030689122822*^9}, {3.7540307336925898`*^9, 
  3.754030855720737*^9}, {3.754031022485073*^9, 3.754031028886932*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "95199"}],
  SequenceForm["Part 1 Answer: ", 95199],
  Editable->False]], "Print",
 CellChangeTimes->{{3.754030774550338*^9, 3.754030841271702*^9}, 
   3.75403102978682*^9, 3.754031137441863*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", "\[InvisibleSpace]", "7887"}],
  SequenceForm["Part 2 Answer: ", 7887],
  Editable->False]], "Print",
 CellChangeTimes->{{3.754030774550338*^9, 3.754030841271702*^9}, 
   3.75403102978682*^9, 3.754031137460881*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 5 \[OpenCurlyDoubleQuote]Alchemical Reduction\
\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.753901781661826*^9, 3.753901787312693*^9}, 
   3.753902285735654*^9, {3.753902913489954*^9, 3.753902917325159*^9}, {
   3.754027817098282*^9, 3.754027833143877*^9}, 3.754668525336965*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"adventString", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/dmitron/Downloads/AdventOfCode/day5.txt\>\"", ",", 
     "\"\<String\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReactString", "[", "string_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mappings", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"RegularExpression", "[", "#", "]"}], "\[Rule]", 
          "\"\<\>\""}], "&"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{"#", ",", 
               RowBox[{"ToUpperCase", "[", "#", "]"}]}], "]"}], "&"}], ",", 
            RowBox[{"CharacterRange", "[", 
             RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{"#", ",", 
               RowBox[{"ToLowerCase", "[", "#", "]"}]}], "]"}], "&"}], ",", 
            RowBox[{"CharacterRange", "[", 
             RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FixedPoint", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", "mappings"}], "]"}], "&"}], ",", "string"}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", 
   RowBox[{"StringLength", "@", 
    RowBox[{"ReactString", "[", "adventString", "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"StringLength", "@", 
       RowBox[{"ReactString", "@", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"adventString", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "\[Rule]", "\"\<\>\""}], ",", 
            RowBox[{
             RowBox[{"ToUpperCase", "[", "#", "]"}], "\[Rule]", 
             "\"\<\>\""}]}], "}"}]}], "]"}]}]}], "&"}], ",", 
     RowBox[{"CharacterRange", "[", 
      RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", 
   RowBox[{"Min", "[", "t", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7538929652609653`*^9, 3.753892993332328*^9}, {
   3.753894445256394*^9, 3.753894463560474*^9}, {3.753894859120593*^9, 
   3.75389485953274*^9}, {3.753895011821166*^9, 3.7538950139174337`*^9}, {
   3.753895083944188*^9, 3.753895095429482*^9}, 3.753895257186596*^9, {
   3.753895304879002*^9, 3.753895310792021*^9}, {3.7538955215242653`*^9, 
   3.753895531435397*^9}, {3.753896027605557*^9, 3.753896035343234*^9}, 
   3.753896266173751*^9, {3.7538964214024773`*^9, 3.753896429090288*^9}, {
   3.7538969269528*^9, 3.753896927247155*^9}, {3.75389749818202*^9, 
   3.7538975306537647`*^9}, {3.753897843152588*^9, 3.75389784350005*^9}, {
   3.7538979474058323`*^9, 3.7538979486426973`*^9}, {3.7538992348492117`*^9, 
   3.753899387488258*^9}, {3.753899437398444*^9, 3.753899439375897*^9}, {
   3.753899477957934*^9, 3.753899478254376*^9}, {3.753901636468849*^9, 
   3.753901744484025*^9}, {3.753901868151709*^9, 3.7539019400673122`*^9}, {
   3.753901973331798*^9, 3.7539020379330683`*^9}, {3.753902620207045*^9, 
   3.7539026307240267`*^9}, {3.7539029253835087`*^9, 3.753902925637787*^9}, {
   3.753912021119068*^9, 3.753912105511691*^9}, {3.753996507981081*^9, 
   3.753996567822818*^9}, {3.753996631877906*^9, 3.753996632176655*^9}, {
   3.753996713434752*^9, 3.7539967776835413`*^9}, {3.753996809674259*^9, 
   3.75399681471914*^9}, {3.754031305079049*^9, 3.7540313077296886`*^9}, {
   3.754031341111364*^9, 3.754031354566495*^9}, {3.7540315385569963`*^9, 
   3.7540315619574957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "11755"}],
  SequenceForm["Part 1 Answer: ", 11755],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7539967440986443`*^9, 3.753996778702537*^9, 3.753996815575673*^9, 
   3.754031404738674*^9, {3.754031558349584*^9, 3.754031562580078*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", "\[InvisibleSpace]", "4099"}],
  SequenceForm["Part 2 Answer: ", 4099],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7539967440986443`*^9, 3.753996778702537*^9, 3.753996815575673*^9, 
   3.754031404738674*^9, {3.754031558349584*^9, 3.754031569204421*^9}}]
}, Open  ]]
}, Open  ]],

Cell["Group Theory Solution (Failed Attempt)", "Text",
 CellChangeTimes->{{3.7540278475202208`*^9, 3.754027850160603*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileOpen", "=", 
   RowBox[{
   "OpenRead", "[", "\"\</Users/dmitron/Downloads/AdventOfCode/day5.txt\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adventString", "=", 
   RowBox[{"ReadLine", "[", "fileOpen", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adventString", "=", 
   RowBox[{"StringDrop", "[", 
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{"adventString", ",", 
         RowBox[{"\"\<\>\"", "\[Rule]", "\"\<^\>\""}]}], "]"}], ",", "1"}], 
      "]"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"string_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"string", ",", 
     RowBox[{
      RowBox[{"ToString", "[", "i", "]"}], "\[Rule]", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<Log[\>\"", ",", 
        RowBox[{"ToLowerCase", "[", "i", "]"}], ",", "\"\<,1]\>\""}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adventString", "=", 
   RowBox[{"f", "[", 
    RowBox[{"adventString", ",", "\"\<L\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.753911355824151*^9, 3.753911511855672*^9}, {
  3.753912643649974*^9, 3.7539126438858013`*^9}, {3.753912859147169*^9, 
  3.753912864733728*^9}, {3.75391291152845*^9, 3.753912912665676*^9}, {
  3.753912948558484*^9, 3.753912952955242*^9}, {3.75391299231359*^9, 
  3.753913009694415*^9}, {3.753913084066799*^9, 3.7539131006675*^9}, {
  3.753913643721085*^9, 3.7539136696998653`*^9}, {3.7539138212791023`*^9, 
  3.7539138230125427`*^9}, {3.753997300715987*^9, 3.753997302303742*^9}, {
  3.753997389407765*^9, 3.753997389818734*^9}, {3.753997742673685*^9, 
  3.7539977460865517`*^9}, {3.7539978259218197`*^9, 3.753997907552422*^9}, {
  3.753998409438534*^9, 3.7539984236991777`*^9}, {3.7540320214911013`*^9, 
  3.754032091069744*^9}, {3.7540321632142143`*^9, 3.7540321768156757`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 6 \[OpenCurlyDoubleQuote]Chronal \
Coordinates\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.753999052637311*^9, 3.75399905945218*^9}, {
   3.7540278720033913`*^9, 3.754027883859961*^9}, 3.7546685202416143`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coordinates", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/dmitron/Downloads/AdventOfCode/day6.txt\>\"", ",", 
     "\"\<Data\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"minX", ",", "maxX"}], "}"}], "=", 
   RowBox[{"MinMax", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"coordinates", "//", "Transpose"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"minY", ",", "maxY"}], "}"}], "=", 
   RowBox[{"MinMax", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"coordinates", "//", "Transpose"}], ")"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distanceMatrix", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ManhattanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", 
       RowBox[{"coordinates", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "maxX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "maxY"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minDistance", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"distanceMatrix", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "i", ",", "j"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "maxX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "maxY"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AssignOwner", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"distances", "=", 
       RowBox[{"distanceMatrix", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "i", ",", "j"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minDistance2", "=", 
       RowBox[{"Min", "[", "distances", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"distances", ",", "minDistance2"}], "]"}], "\[Equal]", 
         "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"distances", ",", "minDistance2"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regionOwner", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AssignOwner", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "maxX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "maxY"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infiniteOwners", "=", 
   RowBox[{
    RowBox[{"Catenate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", ";;"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", ";;"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], "//", 
    "DeleteDuplicates"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"largestOwner", "=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"Flatten", "[", "regionOwner", "]"}], ",", 
          "infiniteOwners"}], "]"}], "//", "Tally"}], ")"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", "largestOwner"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalDistances", "=", 
   RowBox[{"Total", "[", "distanceMatrix", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"areaLessThan10k", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"totalDistances", "//", "Flatten"}], ",", 
      RowBox[{
       RowBox[{"#", "<", "10000"}], "&"}]}], "]"}], "//", "Length"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", "areaLessThan10k"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.753999253528584*^9, 3.753999358652897*^9}, {
  3.753999390451213*^9, 3.75399939120094*^9}, {3.753999555961891*^9, 
  3.753999678326683*^9}, {3.754002497285563*^9, 3.754002657033287*^9}, {
  3.754002690952958*^9, 3.754002720950519*^9}, {3.7540027696468887`*^9, 
  3.754002910318266*^9}, {3.754003176386072*^9, 3.754003200925248*^9}, {
  3.754003351949636*^9, 3.75400337956787*^9}, {3.754003412077835*^9, 
  3.7540034122992983`*^9}, {3.754003447479188*^9, 3.754003498881949*^9}, {
  3.75403296276071*^9, 3.7540329808173933`*^9}, {3.754033050169819*^9, 
  3.75403305073737*^9}, {3.754033084272788*^9, 3.75403314810319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "28"}],
  SequenceForm["Part 1 Answer: ", 28],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.754002927434576*^9, 3.754003219102968*^9, {3.754003374667348*^9, 
   3.754003395373756*^9}, 3.7540034288482933`*^9, 3.754003494273304*^9, {
   3.7540329763119164`*^9, 3.754033004173971*^9}, 3.754033152983246*^9, 
   3.754033353516553*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", "\[InvisibleSpace]", "40244"}],
  SequenceForm["Part 2 Answer: ", 40244],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.754002927434576*^9, 3.754003219102968*^9, {3.754003374667348*^9, 
   3.754003395373756*^9}, 3.7540034288482933`*^9, 3.754003494273304*^9, {
   3.7540329763119164`*^9, 3.754033004173971*^9}, 3.754033152983246*^9, 
   3.754033353687324*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"distanceMatrix", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<10th Coordinate Distance Function\>\""}], 
     ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"minDistance", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Min Distance To Nearest Point\>\""}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"regionOwner", ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Space Colored By Owner\>\""}], ",", 
     
     RowBox[{"ImagePadding", "\[Rule]", "padding"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}], ",", 
     RowBox[{"{", "p3", "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.754003475167963*^9, 3.754003503196929*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1:eJzt3YXTp2UVx+H7ECJld3d3t9hd2K3YBXYH2N2dYLciIiIiICoiJSLS3Snd
4bnH3z9xnnPtzGd2ZmfjfZ/nfK/Z2dmdvekmm2286RpjjOfGGK/I5pf51fy2
NbO1srWzK2TrZFfM1s3Wy9bPNsg2zK6UXTm7SnbV7GrZ1bNrZNfMrpVdO7tO
dt3setn1sxtkN8xulN04u0l20+xm2c2zW2S3zG6V3Tq7TXbb7HbZ7bM7ZHfM
7pTdObtLdtfsbtnds3tk98zuld07u0923+x+2f2zB2QPzB6UPTjbKHtI9tDs
YdnDs0dkj8welT06e0z22Oxx2eOzJ2RPzJ6UPTl7SrZx9tTsadnTs2dkz8ye
lT07e8585tnzsudnL8hemL0oe3G2SfaS7KXZy7KXZ6/IXpm9Knt19prstdnr
sk2zzbLXZ2/I3pi9KXtz9pbsrdnbsrdn78jemb0re3f2nuy92fuyzbMtsvdn
H8g+mH0o+3D2keyj2ceyj2efyD6ZfSr7dPaZ7LPZ57LPZ1/Ivph9Kfty9pXs
q9nXsq9n38i+mX0r+3b2nWzLbKvsu9n3su9nP8h+mP0o+3H2k+yn2c+yn2e/
yH6Z/Sr7dbZ19ptsm+y32bbZ77Ltst9n22d/yHbI/pjtmP0p2ynbOdsl+3O2
a/aX7K/Z37Ldsr9nu2f/yPbI9sz2yvbO9sn+me2b/SvbL/t3tn/2n+yA7MDs
oOzg7JDs0Oyw7PDsiOzI7Kjs6OyY7NjsuOz47ITsxOyk7OTslOzU7LTV16es
vv2k1fc7YfXjjlv9PMesft6jVr/OEatf97DVx3HI6uM6aPVxHrD6uPdffR77
rT6vfVef5z6rz3uv1XPYY/Vcdl89p91Wz+2vq+e46+q57rJ6zjutnvuOq/ew
w+q9bL96T9ut3tu2q/e4zeq9br16z/N9z/c+3/+8g3kP8y7mfcw7mfcy72be
z7yjeU/zruZ9bTn+f2/z7ub9zTuc9zjvct7nvNN5r/Nu5/3OO573PO963ve8
83nv8+7n/c8dzD3MXcx9zJ3MvczdzP3MHc09zV3NfW0+/r+3ubu5v7nDuce5
y7nPudO517nbud+5Yy5zmcu1XD598LmDz1zmMpdrufzfwecOPnOZy1yu5fIZ
g88dfOYyl7lcy+UzB587+MxlLnO5lstnDT538JnLXOZyLZfPHnzu4DOXuczl
Wi6fM/jcwWcuc5nLtVw+d/C5g89c5jKXa7l83uBzB5+5zGUu13L5/MHnDj5z
mctcruXyBYPPHXzmMpe5XMvlCwefO/jMZS5zuZbLFw0+d/CZy1zmci2XLx58
7uAzl7nM5VouXzL43MFnLnOZy7VcvnTwuYPPXOYyl2u5fNngcwefucxlLtdy
+fLB5w4+c5nLXK7l8vzPivi8fJ+5zGUu13I5YvB5LN9nLnOZy7VcXoPPLXzm
Mpe5XMvlNfncwmcuc5nLtVxei88tfOYyl7lcy+W1+dzCZy5zmcu1XL4Cn1v4
zGUuc7mWy+vwuYXPXOYyl2u5fEU+t/CZy1zmci2X1+VzC5+5zGUu13J5PT63
8JnLXOZyLZfX53MLn7nM5S0Hlyu5vAGfW/h8k8FlLnO5kssb8rmFz1zmMpdr
uXwlPrfwmctc5nItl6/M5xY+c5nLXK7l8lX43MJnLnOZy7VcviqfW/jMZS5z
uZbLV+NzC5+5zGUu13L56nxu4TOXuczlWi5fg88tfOYyl7lcy+Vr8rmFz1zm
MpdruXwtPrfwmctc5nItl6/N5xY+c5nLXK7l8nX43MJnLnOZy7Vcvi6fW/jM
ZS5zuZbL1+NzC5+5zGUu13L5+nxu4TOXuczlWi7fgM8tfOYyl7lcy+Ub8rmF
z1zmMpdruXwjPrfwmctc5nItl2/M5xY+c5nLXK7l8k343MJnLnOZy7Vcvimf
W/jMZS5zuZbLN+NzC5+5zGUu13L55nxu4TOXuczlWi7fgs8tfOYyl7lcy+Vb
8rmFz1zmMpdruXwrPrfwmctc5nItl2/N5xY+c5nLXK7l8m343MJnLnOZy7Vc
vi2fW/jMZS5zuZbLt+NzC5+5zGUuj1Iu357PLXzmMpd3Hlyu5PId+NzC540G
l7nM5Uou35HPLXzmMpe5XMvlO/G5hc9c5jKXa7l8Zz638JnLXOZyLZfvwucW
PnOZy1yu5fJd+dzCZy5zmcu1XL4bn1v4zGUuc7mWy3fncwufucxlLtdy+R58
buEzl7nM5Vou35PPLXzmMpe5XMvle/G5hc9c5jKXa7l8bz638JnLXOZyLZfv
w+cWPnOZy1yu5fJ9+dzCZy5zmcu1XL4fn1v4zGUuc7mWy/fncwufucxlLtdy
+QF8buEzl7nM5VouPzD43MFnLnOZy7VcflDwuYPPXOYyl2u5/ODgcwefucxl
LtdyeaPgcwefucxlLtdy+SHB5w4+c5nLXK7l8kODzx185jKXuVzL5YcFnzv4
zGUuc7mWyw8PPnfwmctc5nItlx8RfO7gM5e5zOVaLj8y+NzBZy5zmcu1XH5U
8LmDz1zmMpdrufzo4HMHn7nMZS7XcvkxwecOPnOZy1yu5fJjg88dfOYyl7lc
y+XHBZ87+MxlLh85uFzJ5ccHnzv4/KLB5a0Gl7lcx+UnBJ87+PziwWUuc7mS
y08MPnfwmctc5nItl58UfO7gM5e5zOVaLj85+NzBZy5zmcu1XH5K8LmDz1zm
Mpdrubxx8LmDz1zmMpdrufzU4HMHn7nMZS7XcvlpwecOPnOZy1yu5fLTg88d
fOYyl7lcy+VnBJ87+MxlLnO5lsvPDD538JnLXOZyLZefFXzu4DOXuczlWi4/
O/jcwWcuc5nLtVx+TvC5g89c5jKXa7n83OBzB5+5zGUu13L5ecHnDj5zmctc
ruXy84PPHXzmMpe5XMvlFwSfO/jMZS5zuZbLLww+d/CZy1zmci2XXxR87uAz
l7nM5Vouvzj43MFnLnOZy7Vc3iT43MFnLnOZy7VcfknwuYPPXOYyl2u5/NLg
cwefucxlLtdy+WXB5w4+c5nLXK7l8suDzx185jKXuVzL5VcEnzv4zGUuc7mW
y68MPnfwmctc5nItl18VfO7gM5e5zOVaLr86+NzBZy5zmcu1XH5N8LmDz1zm
Mpdrufza4HMHnzcfXN5lcJnLdVx+XfC5g89bDC5zmcuVXN40+NzBZy5zmcu1
XN4s+NzBZy5zmcu1XH598LmDz1zmMpdrufyG4HMHn7nMZS7XcvmNwecOPnOZ
y1yu5fKbgs8dfOYyl7lcy+U3B587+MxlLnO5lstvCT538JnLXOZyLZffGnzu
4DOXuczlWi6/LfjcwWcuc5nLtVx+e/C5g89c5jKXa7n8juBzB5+5zGUu13L5
ncHnDj5zmctcruXyu4LPHXzmMpe5XMvldwefO/jMZS5zuZbL7wk+d/CZy1zm
ci2X3xt87uAzl7nM5Vouvy/43MFnLnOZy7Vc3jz43MFnLnOZy7Vc3iL43MFn
LnOZy7Vcfn/wuYPPXOYyl2u5/IHgcwefucxlLtdy+YPB5w4+c5nLXK7l8oeC
zx185jKXuVzL5Q8Hnzv4zGUuc7mWyx8JPnfwmctc5nItlz8afO7gM5e5zOVa
Ln8s+NzBZy5zmcu1XP548LmDz1zmMpdrufyJ4HMHn7nMZS7XcvmTwecOPnOZ
y1yu5fKngs8dfN6Ky1wOLldy+dPB5w4+c5nLXK7l8meCzx185jKXuVzL5c8G
nzv4zGUuc7mWy58LPnfwmctc5nItlz8ffO7gM5e5zOVaLn8h+NzBZy5zmcu1
XP5i8LmDz1zmMpdrufyl4HMHn7nMZS7XcvnLwecOPnOZy1yu5fJXgs8dfOYy
l7lcy+WvBp87+MxlLnO5lstfCz538JnLXOZyLZe/Hnzu4DOXuczlWi5/I/jc
wWcuc5nLtVz+ZvC5g89c5jKXa7n8reBzB5+5zGUu13L528HnDj5zmctcruXy
d4LPHXzmMpe5XMvlLYPPHXzmMpe5XMvlrYLPHXzmMpe5XMvl7wafO/jMZS5z
uZbL3ws+d/CZy1zmci2Xvx987uAzl7nM5Vou/yD43MFnLnOZy7Vc/mHwuYPP
XOYyl2u5/KPgcwefucxlLtdy+cfB5w4+c5nLXK7l8k+Czx185jKXuVzL5Z8G
nzv4zGUuc7mWyz8LPnfwmctc5nItl38efO7gM5e5zOVaLv8i+NzB5124zOXg
ciWXfxl87uAzl7nM5Vou/yr43MFnLnOZy7Vc/nXwuYPPXOYyl2u5vHXwuYPP
XOYyl2u5/JvgcwefucxlLtdyeZvgcwefucxlLtdy+bfB5w4+c5nLXK7l8rbB
5w4+c5nLXK7l8u+Czx185jKXuVzL5e2Czx185jKXuVzL5d8Hnzv4zGUuc7mW
y9sHnzv4zGUuc7mWy38IPnfwmctc5nItl3cIPnfwmctc5nItl/8YfO7gM5e5
zOVaLu8YfO7gM5e5zOVaLv8p+NzBZy5zmcu1XN4p+NzBZy5zmcu1XN45+NzB
Zy5zmcu1XN4l+NzBZy5zmcu1XP5z8LmDz1zmMpdrubxr8LmDz1zmMpdrufyX
4HMHn7nMZS7XcvmvwecOPnOZy1yu5fLfgs8dfOYyl7lcy+Xdgs8dfOYyl7lc
y+W/B587+MxlLnO5lsu7B587+MxlLnO5lsv/CD538JnLXOZyLZf3CD538JnL
XOZyLZf3DD538JnLXOZyLZf3Cj538PkoLnM5uFzJ5b2Dzx185jKXuVzL5X2C
zx185jKXuVzL5X8Gnzv4zGUuc7mWy/sGnzv4zGUuc7mWy/8KPnfwmctc5nIt
l/cLPnfwmctc5nItl/8dfO7gM5e5zOVaLu8ffO7gM5e5zOVaLv8n+NzBZy5z
mcu1XD4g+NzBZy5zmcu1XD4w+NzBZy5zmcu1XD4o+NzBZy5zmcu1XD44+NzB
Zy5zmcu1XD4k+NzBZy5zmcu1XD40+NzBZy5zmcu1XD4s+NzBZy5zmcu1XD48
+NzBZy5zmcu1XD4i+NzBZy5zmcu1XD4y+NzBZy5zmcu1XD4q+NzBZy5zmcu1
XD46+NzBZy5zmcu1XD4m+NzBZy5zmcu1XD42+NzBZy5zmcu1XD4u+NzBZy5z
mcu1XD4++NzBZy5zmcu1XD4h+NzBZy5zmcu1XD4x+NzBZy5zmcu1XD4p+NzB
Zy5zmcu1XD45+NzBZy5zmcu1XD4l+NzBZy5zmcu1XD41+NzBZy5zmcu1XD4t
+NzBZy5zmcu1XD49+NzBZy5zmcu1XP5v8LmDz1zmMpdruXxG8LmDz1zmMpdr
uXxm8LmDz1zmMpdruXxW8LmDz1zmMpdruXx28LmDz1zmMpdruXxO8LmDz1zm
MpdruXxu8LmDz1zmMpdruXxe8LmDz1zmMpdruXx+8LmDz1zmMpdruXxB8LmD
z1zmMpdruXxh8LmDz1zmMpdruXxR8LmDz1zmMpdruXxx8LmDz1zmMpdruXxJ
8LmDz1zmMpdruXxp8LmDz1zmMpdruXxZ8LmDz1zmMpdruXx58LmDz1zmMpdr
uTzW4HMHn/2+mc98ruczl5ft8tyxP2/mM5/r+czlZbs8d+zvafCZz/V85vKy
XZ479veb+cznej5zedkuzx37d4F85nM9n7m8bJfnjjcMPvOZz9V85vKyXZ47
3iD4zGc+V/OZy8t2ee54/eAzn/lczWcuL9vlueP1gs985nM1n7m8bJfnjtcN
PvOZz9V85vKyXZ47vmLwmc98ruYzl5ft8tzxOsFnPvO5ms9cXrbLc8dXCD7z
mc/VfObysl2eO147+MxnPlfzmcvLdnnueK3gM5/5XM1nLi/b5bnjNYPPfOZz
NZ+5vGyX547XCD7zmc/VfObysl2eO47gM5/5XM1nLi/b5bnjEXzmM5+r+czl
Zbs8d3z54DOf+VzNZy4v2+W548sGn/nM52o+c3nZLs8dXzr4zGc+V/OZy8t2
ee74ksFnPvO5ms9cXrbLc8cXDz7zmc/VfObysl2eO75o8JnPfK7mM5eX7fLc
8YWDz3zmczWfubxsl+eOLxh85jOfq/nM5WW7PHd8/uAzn/lczWcuL9vluePz
Bp/5zOdqPnN52S7PHZ87+MxnPlfzmcvLdnnu+JzBZz7zuZrPXF62y3PHZw8+
85nP1Xzm8rJdnjs+a/CZz3yu5jOXl+3y3PGZg8985nM1n7m8bJfnjs8YfOYz
n6v5zOVluzx3/N/BZz7zuZrPXF62y3PHpw8+85nP1Xzm8rJdnjs+bfCZz3yu
5jOXl+3y3PGpg8985nM1n7m8bJfnjk8ZfOYzn6v5zOVluzx3fPLgM5/5XM1n
Li/b5bnjkwaf+cznaj5zedkuzx2fOPjMZz5X85nLy3Z57viEwWc+87maz1xe
tstzx8cPPvOZz9V85vKyXZ47Pm7wmc98ruYzl5ft8tzxsYPPfOZzNZ+5vGyX
546PGXzmM5+r+czlZbs8d3z04DOf+VzNZy4v2+W546MGn/nM52o+c3nZLs8d
Hzn4zGc+V/OZy8t2ee74iMFnPvO5ms9cXrbLc8eHDz7zmc/VfObysl2eOz5s
8JnPfK7mM5eX7fLc8aGDz3zmczWfubxsl+eODxl85jOfq/nM5WW7PHd88OAz
n/lczWcuL9vlueODBp/5zOdqPnN52S7PHR84+MxnPlfzmcvLdnnu+IDBZz7z
uZrPXF62y3PH/xl85jOfq/nM5WW7PHe8/+Azn/lczWcuL9vlueN/Dz7zmc/V
fObysl2eO95v8JnPfK7mM5eX7fLc8b8Gn/nM52o+c3nZLs8d7zv4zGc+V/OZ
y8t2ee74n4PPfOZzNZ+5vGyX5473GXzmM5+r+czlZbs8d7z34DOf+VzNZy4v
2+W5470Gn/nM52o+c3nZLs8d7zn4zGc+V/OZy8t2ee74f8yao0I=
       "], {{0, 0}, {359,
        347}}, {0, 512}],
      Frame->Automatic,
      FrameLabel->{None, None},
      FrameTicks->{{None, None}, {None, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{30, 30}, {30, 30}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
      PlotLabel->FormBox[
       "\"10th Coordinate Distance Function\"", TraditionalForm]], {189., -187.03203342618383},
      ImageScaled[{0.5, 0.5}], {360., 347.9665738161559}], InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1:eJzNnXe7VEUSxtHNOZvDujlHAxJ0zYoKAorkKAiLJBUDoJ995945c6ZDhbdC
X/eP3UfHO+d0/6ZPddVbVX0eO3vtwNm7t23bduyubdveX/xv31v7Dxx8+51D
7x4+cvTY8RMnT50+c/bce+cvvH/x0n8vf3Dl6rXrNz786OObn3z62ee3Pv/s
009ufvzRhzeuX7t65YPL/710cfqr5T8X35n/+4Xz7507e+b0qZMnjh87euTw
u4feefvggf1v7dv75huv73nt1VdefunFF55/7j/PPrN7184dT29/avvTO3bu
2v3Ms4tPFv/33PMvvPjSy6+8+tqe1994c69hqP1A64HQF6hne/vOF19+cec2
NesL7U2FWy3nbKBM3XEaX8l84ztuzivKi08ClGk0xUDoC/ScQcriT7o5ZwNl
6p6r8RXMN77j5ryivPgkQJmBsx4IfYGeM0hZfnQ25mygTP22lY1Yf8fNeUV5
8UmAModnHgh9gZ4zSFkxUYs5GyhTlqqyEQZbxXFeUV58EqDMPuyrgdAX6DmD
lLWt4PC7scHXNsJgqzjOK8qLTwKU+a1rGgh9gZ4zSFndcg+HHsXGRhhsFcd5
di9inF2UP+45g5TVLfdIZGPhx+fmPLsXMc4uyjeRefi23KMBN6kbn8FWcZxn
9yLG2UX5k54zSFndco/5nf5+fAZbxXGe3YsYZxflT3vOIGV1yz1uGT5HefW5
wVZxnGf3IsbZRfmznjNIWd1yT1iGz1FeXd9gqzjOM9YYZxflz3vOzSX8q9ky
fI7y6g4GW8VxnqHGOLso3+o5N5dwh0PHLMPnKK/uYfh1Oc4z0hhnF+XbPefm
Eu7g/qhl+Bzl1V0MtorjPAONcXZRbsfcK41uqeqIZfgc5Tsd5zDlfTHOLsrd
qK+2l3ALr4ctw+coz+MLr+b1aGKcXZT7UbeXcGy500wtw+cof9lxDlPeH+Ns
0IukHaW9hH3LXc3UMvxWh+vHF/M0ypHEOBvUT1GzaS5h3nLnmVqG36rK/fhC
fnM1jhhng5Yv+QvtJaxb7nqmluG3OZJ+fJEosB5FjLMhMyX5C+0ljFtuMVOL
eN5m/PrxBTSNZgxE5GJeEFCeVfIX2kvYttxyppZUUJu/7sfnV+jaERCRi4Ez
eVN7iN5ewrblljO1JDb1HI1bb+7uT/jUBs7kTe0hensJ25ZbztSSpmf1k3l8
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
       "], {{0, 0}, {359, 
       347}}, {0, 126}],
      Frame->Automatic,
      FrameLabel->{None, None},
      FrameTicks->{{None, None}, {None, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{30, 30}, {30, 30}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
      PlotLabel->FormBox[
       "\"Min Distance To Nearest Point\"", TraditionalForm]], {189., -561.0961002785515},
      ImageScaled[{0.5, 0.5}], {360., 347.9665738161559}], InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1:eJzt3M2a3EYVgGHZYBIMgUyGYGgItBOchB4S0K2wZZcNS+5/x4w9My2pTp3/
U6qSz/c8fQNvV0tVUlW//el///7p5TRN/3kxTf+9//zN1PzJovnv5uYfrv01
sJ+Bzf/kNv9WWDIrnMXKyaxwlisns9xZoZzMYmeNso15pXwMZtJZpWxiXit7
Mwc6I8qUs07ZwrxRdmcOc0aVcWelsoF5q+zPHORMKGPOWmU9c6EcwBziTCrX
ndXKauZSOYI5wJmhXHPWK2uZAeUQZndnlnLFuTkzpBzD7OzMVIadWzODykHM
rs5sZdC5MTOsHMXs6CxQhpzbMleU753NQcp+ziJlwLkpc1X5k/lfxirMTs5C
5dK5JXNd2excU3ZyTmZC2cc5mSllF+dkJpU9nJOZVv5h/iKZzcyk8j2z1TmZ
aeUHZqPzR8/MUH7PbHKe/yjuWMwc5Q/MBmeFctHQzCzlR2a1s4eywXl/Zp7y
E7PS2UdZ77w7M1P5mVnl7KWsdhYzn97nxsxVvjIrnP2Utc465YqznJmtvGAW
O3sqK52VyrCzmJmvvGQWOvsq65y1yqCzlFmgvGKWOQ/HfDrhzkJmifKaWeQ8
GvPpRDjLmEXKG2aJc+WFWFPmLZ0oE7NMecvMd57fwqmdmzNvnSXMQuWCmetc
U9Y7t2c+qZmlyiUzz7murHbegfmkZBYrA8wcZ0wZd35RTfOgzsp8UjHLlSFm
2hlXxpzryipnM/NJwaxQBpkpZ0q57owpa5ztzCcxs0YZZsadaeWt89NkD1dW
ODswn4TMKuUKM+bMUV47z69f85jFzh7M1+KUa8x1Z57y0vlemcssdfZlZjgr
lavMNWeu8r3zU68FzEJnZ2bSWatcZ4ad+cpv3/M+xWaWOXszE85qZYQZchYo
a5lFzu7MqLNeGWMunSXKamaJsz8z4mxQRpm/2D59kyjrmQXOAcxVZ4syzixi
9WPmO0cwV5xNyn0ys51DmOFMyp0yc52T2cbMc56S2cjMcZ6S2cxMO08tmW3K
gcxL5/nH94mYKeepJbNRGWc2DudrP2qYX1TenX9oaslsVSaYTc4Fs1AZryWz
WZlitjhvmV2VWzLblUlmg3Mo89SO2UGZZtY7RzJP7Zg9lBnMaudA5qkds4sy
h1nrHMc8jcbMUdY6hzFPozHzlJXOUcxTU2Z08l5JqaxzDmKemjL/WtNGna2s
co5hnpoyq5S36AJmhXMI8+TEzPv1eyjLmOXOEcyTE/P8O1Y7MIudA5gnJ2am
souzUFns7M+8VdYys5UdnMXKUmd35kJ54l1hi/jKZmeFstDZm7lUniRe2tor
y5ydmQHlJswWZ6WyyNmXGVJuwzx/y8pTWeLsygwqd8X8bXkP0CsLnD2ZYeW+
mP+wzcTMdnZkrigfmnk+gwUy15Q/RubC2Y25qtw5s8m5plw4ezHXlXtnNjjX
lbfOTsyIcvfMamdMeePsw4wp98+sdMaV184uzKhyX8x+w5lSXjl7MOPKnTF7
XZ1p5VV2ZkK5N2afyYZQeeGsZKaUmzALlJlz53JVvkqqfHXWMZPKLZhFyqUz
wDz/CU3BfLYw08oNmIXKhXPJTCirmM96ZoZyPLNYeetcMFPKOuazlpmjHM6s
UN44b5lJZSXzWcfMUh6PmVbWMp81zDzl4ZgZymrms5yZqTwaM0dZz3yWMnOV
B2NmKRuYzzJmtnI8czUFM0/ZwnyWMPOVo5nnz6ohzhVmprKJ+SHmWWKBcjAz
oow5w8xcZTMzz1miHMuMKiPOa+anuMp2Zo6zSDmUmVCuO6+U2bqOzLSzTDmS
mVSuOtuUPZgpZ6FyIDNDueZsU3ZhPtenSPPjvwp0wcxSrjjblH2Y0bphZirD
zjbl4zHXf1ZcZdDZpnw45vnPtQTMgLNN+WjMdWURc+lsUz4YM6IsYy6ce2cW
K2uP+DyEKAuZt86dM8uVJ8zKkJB549wP8++B5LPmbpjXzt0wQ8pDM6+ce2EG
lcdmXjp3wgwrD8782fXm2gdzRXl05gX4zx/ambmmfDRmtbMLc1X5cMxaZw/m
uvLxmJXODsyI8gGZdc52Zky5J2aT81VZ52xmRpW7YjY4L5VVzlZmXLkvZrXz
WlnjbGQmlDtjVjpvlRXONmZKuTdm3VKwUJY7m5hJ5e6Y2c431wBlsbOFmVbu
j5npfEMxC50NzAzlDplZzjc0s8xZz8xRVjkHMzOcbzjMImc1M09Z47w78w2P
WeKsZeYqK5z3Zr7hMguclcx8ZbnzzsxbZYSZ76xjliiLnfdlLpQxZrazilmm
LHXelblURpm5zhpmqbLQeU9mQBlnZjormOXKMucdmSFlgpnnLGfWKIuc/yLP
iRlUpphZzmJmnbLEWcEscoYx61HMHGcps1ZZ4KxhFjhLlWlmhrOQWa/Md1Yx
s53Fygxm2lnGbFFmO+uYmc5yZQ4z6SxitilznZXMLGeFMouZcpYwW5WZzlpm
hrNGmcdMOAuY7co8ZzUz7RynTNVUmeWsZyadd1NmO/soc5wNzJTzfspMZy9l
hrOFmXDeUZnl7KdMO5uYcefOmT2VSWcbM9rcNbOvMuUcyCx2bsnsrUw4RzJL
nRsy+yvjzqHMQud2zBHKqHMss8x5S2U46IwvBGOUMedgZpGzozLqHKWMOEcz
S5w9lRHnOOW6czizwNlVeZ4jOaXOvTLblfdhrjh3yuygvBMz7Oxs+h0Qm9nD
dn/nBsyQMtvZW7mnq3MDZaazv/I+zuHMNWWWc4TyLs7RzHVlhnOM8h7OwcyY
MukcpbyDcywzrkw4xym3dw5lppRx52T2Ukadk9lNGXNOZj9lxDmZHZXrzsns
qVx1TmZX5ZpzMvsqV5yT2VkZdk5mb2XQOZndlSHnZPZXBpyTOUC5dE7mCOXv
5l+AJbOrco05xHlsZotylTnCeWhmk3KdOcB5ZGabMsLs6nz7UGtnR2ajMsbs
6Hx7u4ezH7NVGWVGnX8j6PZ2F2c3ZrMyzow4S5SvzG2dvZjtygRz1VmkvGBu
6gwyO5j5M1ecZcpL5lvexbyMB7tuHGbQWai8Zv6VLtZ38W4d5NwpM+AsVXZh
Zn0V72jnTpVLZ7HyfsyAc6/KW2e58o7MpXO3ymtnhfKezIVzv8pLZ43yrsxb
546VF43HvHEeQnlE5rXzEMpDMq+ch1Aek3npPITyoMwL5yGUR2W+Og+hPCzz
s/MQyuMyPzkPoTww86PzEMojM39wHkJ5aOb3zkMoj8384DyE8uDM985DMKuU
O2J+N4/ArFPuifndAMxK5WRuopzMTZSTuYlyMjdR/viYX1ULVO6K+aVDemXC
2aR8OGbCGVNGnW3Kx2NGnXFlxNmofEBmxJlSrjpblY/IXHWmlSvOZuUV8+03
m9oquzFXnDnKoLNdGWd2c2Yp+zGDzjxlwNlBmWB2cuYpOzIDzlzlwtlDmWJ2
cWYqezIXznzlrbO7MsT8zfOG03BlV+aXeuWNs7syyPz1U+qTKVxlX+aXeuW1
s7syzqx05is7M7/UK6+c3ZUJZpWzQNmb+blZzvzKj7lQppgVzhLlrpiv6U5B
IMoks9hZpNwps80ZUKaZhc4y5V6ZXxlOuULKDGaRs1C5X+ZPi5jOoDKHWeAs
VR6JmecMK7OY2c5i5aGYOc4VZR4z01muPBYz7VxTZjKznBXKgzF/SvzlQlWZ
y8xw1iiHMVsnzrAylZ2ZdFYpxzGbnJXKHsyEs045kNngrFV2YUadlcqhzFpn
tbIPM+KsVY5l1jnrlZ2Yq85q5WBmjbNB2Yu54qxXjmaWO1uU3ZhBZ4NyOPOb
Nw2V/ZgBZ4tyA2aZc9BgFjMXziblFsxvoPVaBDOiLGfeONuUmzB/CVRzDplm
qJhXzkbl3ZhrzhFzZiXzwtmqvB9zxTlgAahmfnY2K+/IDDv7P80wMH/9eCMx
K+/JDDoX90ofZSXzI/bYzIDz/Pk2ljOp/FEzf1mM3UKZ5UwrH5d5/uohnLlg
B5hpZ4byYZk/KHswU84c5YMyXy5f+THjzixlkJnr3C3zxZcZc+Ypw8xM516Z
L97MdWemcoWZ59wp88WfuebMVa4xs5z7ZL5EMMPObGXTcO6S+RLD/Llo9wvb
eVTmSxQzkIhZP9nokPnSL/P8/fdHYb5AzGxnobKcuXQekvkCMzOdpcoy5wfl
0hl0/eWmzpgvNWaWs1xZ4vxBuXDmKDs4RylvmBnOGmW+85Py1pmlbHeOUt4y
k846Za7zVXnjzFM2O0cpF8yUcyjzUnntzFS2Okcpl8yEcyTzWnnlzFU2Okcp
A8y4cyDzVnnpzFa2OUcpQ8yocxxzqbxw5iubnKOUQWbMOYwZUr4285UtzlHK
MDP29jWIGVdeOVPKBuco5QozspkghplSXjjTynpnkMijCnN9b0wIM6387MxR
Vjs3Z65u9dqZmaesdQ5jvlSUqzsX92XmKiudY5kh5dpG3F2Z+co651BmWLmy
r3xPZomyyjmZ75llyhrnBsz/KJq7YpYia5zjmUtl0Hk3ZoWy3DmSeYaEH53L
dmJWKYud45hnRBmU34VZqSx1vnNuMGa1stDZm/luKGaDsszZnfluIGaTssjZ
n/luGGajssQ5gPluEGazssA5gvluCGYHZb5zCPNdMjdhvkvmJsz3JXMT5rtk
bsIsdE7mJs7J3MQ5mZs4J3MT52Ru4pzMyZzMyZzMyZzMyZzMyZzMyZzMyZzM
yZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzM
yZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyZzMyXxw5v8DSH23Nw==
       "], {{0, 0}, {359,
        347}}, {0, 50}],
      Frame->Automatic,
      FrameLabel->{None, None},
      FrameTicks->{{None, None}, {None, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{30, 30}, {30, 30}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
      PlotLabel->FormBox["\"Space Colored By Owner\"", TraditionalForm]], {189., -935.1601671309191},
      ImageScaled[{0.5, 0.5}], {360., 347.9665738161559}]}, {}},
  ContentSelectable->True,
  ImageSize->500,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.7540034531389503`*^9, 3.7540034948464937`*^9, 
  3.754004627945715*^9, 3.754033422991022*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"coordinates", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"20", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "19"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"minX", ",", "maxX"}], "}"}], "=", 
   RowBox[{"MinMax", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"coordinates", "//", "Transpose"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"minY", ",", "maxY"}], "}"}], "=", 
   RowBox[{"MinMax", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"coordinates", "//", "Transpose"}], ")"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distanceMatrix", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ManhattanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", 
       RowBox[{"coordinates", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "maxX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "maxY"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minDistance", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"distanceMatrix", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "i", ",", "j"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "maxX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "maxY"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AssignOwner", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"distances", "=", 
       RowBox[{"distanceMatrix", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "i", ",", "j"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minDistance2", "=", 
       RowBox[{"Min", "[", "distances", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"distances", ",", "minDistance2"}], "]"}], "\[Equal]", 
         "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"distances", ",", "minDistance2"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regionOwner", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AssignOwner", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "maxX"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "maxY"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infiniteOwners", "=", 
   RowBox[{
    RowBox[{"Catenate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", ";;"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", ";;"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"regionOwner", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], "//", 
    "DeleteDuplicates"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"largestOwner", "=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"Flatten", "[", "regionOwner", "]"}], ",", 
          "infiniteOwners"}], "]"}], "//", "Tally"}], ")"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", "largestOwner"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalDistances", "=", 
   RowBox[{"Total", "[", "distanceMatrix", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"areaLessThan10k", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"totalDistances", "//", "Flatten"}], ",", 
      RowBox[{
       RowBox[{"#", "<", "10000"}], "&"}]}], "]"}], "//", "Length"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", "areaLessThan10k"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"padding", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"distanceMatrix", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<10th Coordinate Distance Function\>\""}], 
     ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"minDistance", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Min Distance To Nearest Point\>\""}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"regionOwner", ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Space Colored By Owner\>\""}], ",", 
     
     RowBox[{"ImagePadding", "\[Rule]", "padding"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", "p2", "}"}], ",", 
     RowBox[{"{", "p3", "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7540708462531357`*^9, 3.754070911271359*^9}, {
  3.7540709609165783`*^9, 3.7540709692779713`*^9}, {3.754071025259437*^9, 
  3.754071060119391*^9}, {3.754071194503727*^9, 3.7540712176110983`*^9}, {
  3.7540712563061037`*^9, 3.754071256848646*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "19"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7540709121896563`*^9, 3.754070970857595*^9, {3.754071027020194*^9, 
   3.7540710607018547`*^9}, {3.754071210450384*^9, 3.754071218017871*^9}, 
   3.754071257383216*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Part 1 Answer: ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.754071210788947*^9, 3.754071218047935*^9}, 
   3.754071257408703*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", "\[InvisibleSpace]", "400"}],
  SequenceForm["Part 2 Answer: ", 400],
  Editable->False]], "Print",
 CellChangeTimes->{{3.754071210788947*^9, 3.754071218047935*^9}, 
   3.754071257420699*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1:eJxtyLUBgDAAAMHg7sE12ECMkAXYv6Oh/OKaU/p9tCmEkL9K1k3b9cM4zcu6
qf04r7uELCBzyAwyhUwgY8gIMoQMIH1ID9KFdCBtSAvShDQgBeQHDScfgQ==

       "], {{0, 0}, {20, 20}}, {0, 38}],
      Frame->Automatic,
      FrameLabel->{None, None},
      FrameTicks->{{None, None}, {None, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{30, 30}, {30, 30}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
      PlotLabel->FormBox[
       "\"10th Coordinate Distance Function\"", TraditionalForm]], {189., -193.5},
      ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1:eJxt0LcRgDAQRFEhnLwbGqAlSlAD9J+RMD/a4JI3N2f2nu8zrTHm+qu3WnKK
wTsfYsqltj4GCHXR16ATrNABFmgHM7SBCVrBCFkwQAvoIQM61afmqb3qPvWH
+lflovJTOX8f+BEj
       "], {{0, 0}, {20, 20}}, {0, 18}],
      Frame->Automatic,
      FrameLabel->{None, None},
      FrameTicks->{{None, None}, {None, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{30, 30}, {30, 30}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
      PlotLabel->FormBox[
       "\"Min Distance To Nearest Point\"", TraditionalForm]], {189., -580.5},
      ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGAQgWJmGGCBAyaEGAMMsAx2MfyAEQ4GuxgAoqkFYw==
       "], {{0, 
       0}, {20, 20}}, {0, 5}],
      Frame->Automatic,
      FrameLabel->{None, None},
      FrameTicks->{{None, None}, {None, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{30, 30}, {30, 30}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
      PlotLabel->FormBox["\"Space Colored By Owner\"", TraditionalForm]], {189., -967.5},
      ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{0., 1.}, {224.910256, 223.910256}},
  ImageSize->500,
  PlotRange->{{-6., 384.}, {-972.5, -188.5}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{
  3.7540709121896563`*^9, 3.754070970857595*^9, {3.754071027020194*^9, 
   3.7540710607018547`*^9}, {3.754071210450384*^9, 3.754071218017871*^9}, 
   3.754071257691532*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"Nearest", "[", 
    RowBox[{"coordinates", ",", 
     RowBox[{"Join", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "minX", ",", "maxX"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "minY", ",", "maxY"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"DistanceFunction", "\[Rule]", "ManhattanDistance"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", 
  RowBox[{"First", "@", 
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"Tally", "@", 
      RowBox[{"Select", "[", 
       RowBox[{"res", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], "&"}]}], 
       "]"}]}], ",", "Last"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distanceMatrix", "=", 
   RowBox[{"DistanceMatrix", "[", 
    RowBox[{"coordinates", ",", 
     RowBox[{"Join", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "minX", ",", "maxX"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "minY", ",", "maxY"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"DistanceFunction", "\[Rule]", "ManhattanDistance"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"distanceMatrix", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}], ",", 
   RowBox[{"d_", " ", "/;", " ", 
    RowBox[{"d", "<", "10000"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.754033448786727*^9, 3.754033497167466*^9}, {
  3.75403356610172*^9, 3.754033566313238*^9}, {3.754033673864362*^9, 
  3.754033691762516*^9}, {3.754034274427474*^9, 3.7540342800136547`*^9}, {
  3.754034522867797*^9, 3.754034523270577*^9}}],

Cell[BoxData["90"], "Output",
 CellChangeTimes->{{3.754033528288869*^9, 3.754033567161735*^9}, {
   3.754033677089794*^9, 3.754033692506341*^9}, {3.754034276866185*^9, 
   3.754034280579865*^9}, 3.75403452427521*^9, 3.754070913754305*^9, 
   3.7540709720149813`*^9, {3.7540710278194427`*^9, 3.754071061886389*^9}}],

Cell[BoxData["400"], "Output",
 CellChangeTimes->{{3.754033528288869*^9, 3.754033567161735*^9}, {
   3.754033677089794*^9, 3.754033692506341*^9}, {3.754034276866185*^9, 
   3.754034280579865*^9}, 3.75403452427521*^9, 3.754070913754305*^9, 
   3.7540709720149813`*^9, {3.7540710278194427`*^9, 3.754071061916201*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "@", 
  RowBox[{"Select", "[", 
   RowBox[{"res", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.754070926954015*^9, 3.754070939169903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", "81"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "19"}], "}"}], "}"}], ",", "90"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"19", ",", "1"}], "}"}], "}"}], ",", "90"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"19", ",", "19"}], "}"}], "}"}], ",", "81"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"20", ",", "20"}], "}"}], "}"}], ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7540709738181543`*^9, {3.75407102863194*^9, 3.7540710632043943`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 7 \[OpenCurlyDoubleQuote]The Sum of Its Parts\
\[CloseCurlyDoubleQuote] aka THE WORST", "Subsection",
 CellChangeTimes->{{3.754003395429295*^9, 3.754003403092224*^9}, {
   3.754003521645624*^9, 3.754003524987146*^9}, 3.7540278932842293`*^9, {
   3.754116207852439*^9, 3.754116210286978*^9}, 3.754668518010092*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"instructions", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/dmitron/Downloads/AdventOfCode/day7.txt\>\"", ",", 
     "\"\<List\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relations", "=", 
   RowBox[{"Join", "@@", 
    RowBox[{"StringCases", "[", 
     RowBox[{"instructions", ",", 
      RowBox[{
       RowBox[{"\"\<Step \>\"", "~~", 
        RowBox[{"r1", ":", "_"}], "~~", "\"\< \>\"", "~~", " ", "__", " ", "~~",
         " ", "\"\<step \>\"", " ", "~~", " ", 
        RowBox[{"r2", ":", "_"}]}], "  ", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"r1", ",", "r2"}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dependencies", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"dependency", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"relations", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "x"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dependencies", "[", "x", "]"}], "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dependency", "]"}], "\[Equal]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"First", "@", 
          RowBox[{"Transpose", "@", "dependency"}]}]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"CharacterRange", "[", 
        RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}]}], "}"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetAvailableTasks", "[", "doneTasks_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dependencies2", "=", "dependencies"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dependencies2", "=", 
       RowBox[{"KeyDropFrom", "[", 
        RowBox[{"dependencies2", ",", "doneTasks"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"dependencies2", "[", "x", "]"}], "=", "\[IndentingNewLine]", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"dependencies2", "[", "x", "]"}], ",", 
           RowBox[{
            RowBox[{"Not", "@", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"doneTasks", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Keys", "[", "dependencies2", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sort", "@", 
       RowBox[{"Keys", "@", 
        RowBox[{"Select", "[", 
         RowBox[{"dependencies2", ",", 
          RowBox[{
           RowBox[{"#", "\[Equal]", 
            RowBox[{"{", "}"}]}], "&"}]}], "]"}]}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CompleteTask", "[", "doneTasks_", "]"}], ":=", 
    RowBox[{"Catenate", "[", 
     RowBox[{"{", 
      RowBox[{"doneTasks", ",", 
       RowBox[{"{", 
        RowBox[{"First", "@", 
         RowBox[{"GetAvailableTasks", "[", "doneTasks", "]"}]}], "}"}]}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nest", "[", 
   RowBox[{"CompleteTask", ",", 
    RowBox[{"{", "}"}], ",", "26"}], "]"}], "//", "StringJoin"}]}], "Input",
 CellChangeTimes->{{3.7540037052411213`*^9, 3.754003749036584*^9}, {
   3.7540041499355097`*^9, 3.754004150094565*^9}, {3.754008069172454*^9, 
   3.754008094545683*^9}, {3.754008624807547*^9, 3.7540086250727673`*^9}, {
   3.754008753673154*^9, 3.754008754019188*^9}, {3.75400881064613*^9, 
   3.754008810858123*^9}, {3.75403462672283*^9, 3.7540346495214453`*^9}, {
   3.754035043975335*^9, 3.754035044750454*^9}, {3.754035143680047*^9, 
   3.7540351455099382`*^9}, 3.7540353866378813`*^9, {3.754035448505877*^9, 
   3.754035449178792*^9}, {3.754035513362472*^9, 3.754035520159692*^9}, 
   3.754035552188322*^9, {3.754035821603804*^9, 3.754035963237339*^9}, {
   3.754036221434842*^9, 3.7540362227311773`*^9}, {3.754036509916547*^9, 
   3.754036518092684*^9}, {3.754036548959391*^9, 3.7540365492753363`*^9}, {
   3.7540367043335543`*^9, 3.7540367045288353`*^9}, 3.754036812160398*^9, {
   3.754036856142817*^9, 3.7540368564399147`*^9}, {3.7540369145873213`*^9, 
   3.7540369151258183`*^9}, {3.754037242641798*^9, 3.754037246500317*^9}, {
   3.754037291239195*^9, 3.7540373046714497`*^9}, {3.754037402039859*^9, 
   3.754037432844404*^9}, {3.754038062026466*^9, 3.754038064226083*^9}, {
   3.7540382554326468`*^9, 3.754038318086226*^9}, {3.754038368225683*^9, 
   3.754038371644408*^9}, 3.75403841783609*^9, {3.754038455075118*^9, 
   3.754038485659215*^9}, {3.754115560155408*^9, 3.754115560428186*^9}, {
   3.754115715688319*^9, 3.7541157410034943`*^9}, {3.75411594061478*^9, 
   3.754115941136297*^9}}],

Cell[BoxData["\<\"BHRTWCYSELPUVZAOIJKGMFQDXN\"\>"], "Output",
 CellChangeTimes->{{3.754038457429801*^9, 3.754038486006702*^9}, 
   3.754097116072949*^9, 3.7540978822679167`*^9, 3.754114628784149*^9, 
   3.7541155616035843`*^9, 3.7541159416667557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"workerNumber", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scheduleState", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<workerData\>\"", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "workerNumber"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<doneTasks\>\"", "->", 
      RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetAvailableTasks", "[", 
    RowBox[{"doneTasks_", ",", "currentTasks_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Complement", "[", 
      RowBox[{
       RowBox[{"GetAvailableTasks", "[", "doneTasks", "]"}], ",", 
       "currentTasks"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetScheduleAvailableTasks", "[", "scheduleState_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentTasks", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"availableTasks", "=", 
      RowBox[{"GetAvailableTasks", "[", 
       RowBox[{
        RowBox[{"scheduleState", "[", "\"\<doneTasks\>\"", "]"}], ",", 
        "currentTasks"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "availableTasks"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UpdateScheduleAvailableTasks", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"availableTasks", "=", 
      RowBox[{"GetScheduleAvailableTasks", "[", "scheduleState", "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"workerData", "=", 
      RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"workerData", "[", 
           RowBox[{"[", 
            RowBox[{"#", ",", "3"}], "]"}], "]"}], "=", "availableTasks"}], 
         ")"}], "&"}], ",", 
       RowBox[{"Range", "[", "workerNumber", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], "=", 
      "workerData"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UpdateScheduleAvailableTasks", "[", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoWorkLoop", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"workerData", "=", 
      RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"doneTasks", "=", 
      RowBox[{"scheduleState", "[", "\"\<doneTasks\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"workerOrder", "=", 
      RowBox[{"Ordering", "[", 
       RowBox[{"workerData", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"currentWorker", "=", 
         RowBox[{"workerOrder", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], 
            "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}], 
            "\[NotEqual]", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"doneTasks", ",", 
              RowBox[{"workerData", "[", 
               RowBox[{"[", 
                RowBox[{"currentWorker", ",", "2", ",", "1"}], "]"}], "]"}]}],
              "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"workerData", "[", 
              RowBox[{"[", 
               RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"First", "@", 
               RowBox[{"workerData", "[", 
                RowBox[{"[", 
                 RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}]}], "}"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"workerData", "[", 
              RowBox[{"[", 
               RowBox[{"currentWorker", ",", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"60", "+", 
              RowBox[{"LetterNumber", "[", 
               RowBox[{"workerData", "[", 
                RowBox[{"[", 
                 RowBox[{"currentWorker", ",", "2", ",", "1"}], "]"}], "]"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"scheduleState", "[", "\"\<doneTasks\>\"", "]"}], "=", 
             "doneTasks"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], "=", 
             "workerData"}], ";", "\[IndentingNewLine]", 
            RowBox[{"UpdateScheduleAvailableTasks", "[", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "]"}], ";"}], "\[IndentingNewLine]", 
           ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], 
            "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"doneTasks", ",", 
              RowBox[{"workerData", "[", 
               RowBox[{"[", 
                RowBox[{"currentWorker", ",", "2", ",", "1"}], "]"}], "]"}]}],
              "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"scheduleState", "[", "\"\<doneTasks\>\"", "]"}], "=", 
             "doneTasks"}], ";", "\[IndentingNewLine]", 
            RowBox[{"UpdateScheduleAvailableTasks", "[", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"workerData", "[", 
                RowBox[{"[", 
                 RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}], "==", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"workerData", "[", 
                  RowBox[{"[", 
                   RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], 
                 "=", "workerData"}], ";", "\[IndentingNewLine]", 
                RowBox[{"UpdateScheduleAvailableTasks", "[", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Return", "[", "]"}]}], ")"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"workerData", "[", 
                  RowBox[{"[", 
                   RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"First", "@", 
                   RowBox[{"workerData", "[", 
                    RowBox[{"[", 
                    RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}]}], 
                  "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"workerData", "[", 
                  RowBox[{"[", 
                   RowBox[{"currentWorker", ",", "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"60", "+", 
                  RowBox[{"LetterNumber", "[", 
                   RowBox[{"workerData", "[", 
                    RowBox[{"[", 
                    RowBox[{"currentWorker", ",", "2", ",", "1"}], "]"}], 
                    "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"scheduleState", "[", "\"\<doneTasks\>\"", "]"}], 
                 "=", "doneTasks"}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], 
                 "=", "workerData"}], ";", "\[IndentingNewLine]", 
                RowBox[{"UpdateScheduleAvailableTasks", "[", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Return", "[", "]"}], ";"}], ")"}]}], "]"}], ";"}], 
           ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}], 
            "\[NotEqual]", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"workerData", "[", 
              RowBox[{"[", 
               RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"First", "@", 
               RowBox[{"workerData", "[", 
                RowBox[{"[", 
                 RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}]}], "}"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"workerData", "[", 
              RowBox[{"[", 
               RowBox[{"currentWorker", ",", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"60", "+", 
              RowBox[{"LetterNumber", "[", 
               RowBox[{"workerData", "[", 
                RowBox[{"[", 
                 RowBox[{"currentWorker", ",", "2", ",", "1"}], "]"}], "]"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], "=", 
             "workerData"}], ";", "\[IndentingNewLine]", 
            RowBox[{"UpdateScheduleAvailableTasks", "[", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "]"}], ";"}], "\[IndentingNewLine]", 
           ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "2"}], "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{
            RowBox[{"workerData", "[", 
             RowBox[{"[", 
              RowBox[{"currentWorker", ",", "3"}], "]"}], "]"}], "==", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"workerData", "[", 
              RowBox[{"[", 
               RowBox[{"currentWorker", ",", "1"}], "]"}], "]"}], "=", 
             RowBox[{"First", "@", 
              RowBox[{"First", "@", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"workerData", "[", 
                  RowBox[{"[", "workerOrder", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
                   RowBox[{"{", "}"}]}], "&"}]}], "]"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"scheduleState", "[", "\"\<workerData\>\"", "]"}], "=", 
             "workerData"}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Scan", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DoWorkLoop", "[", "]"}], "&"}], ",", 
   RowBox[{"Range", "[", "37", "]"}]}], 
  "]"}], "\[IndentingNewLine]", "scheduleState"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfeBk48WUH68dbxW3XwLRRsde3QfRIROSHoDoJdyF
bKlA+oDXHHYQHfeqPQlEK8g8SgbRr5hSFoDoHSFZC0F0eUvfcrA63oVgWt8h
53kakH42rwRMz0ucp50OpB0fHwTTWyb2GIHoWarbwbTJPI0JIDpymvFEEM2l
wjMVRM9eowSmA2p+LwfRSlN3bwLRn5kVd4Fo/hXMu0H0l5+XDoLoIwcUDoPo
A0F9J0H0pqszwbTN2ZXPQLTcMp5PILpT1Y4xA0ivnHqbDUQzXEmzA9FSb0o9
QbRAdEgiiK56ejsNRCeVueSCaIn4tjwQDQACWbbQ
  "]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"workerData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"959", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"959", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"959", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"959", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"959", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"doneTasks\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"B\"\>", ",", "\<\"H\"\>", ",", "\<\"R\"\>", 
      ",", "\<\"T\"\>", ",", "\<\"W\"\>", ",", "\<\"Y\"\>", ",", "\<\"Z\"\>", 
      ",", "\<\"C\"\>", ",", "\<\"S\"\>", ",", "\<\"A\"\>", ",", "\<\"E\"\>", 
      ",", "\<\"L\"\>", ",", "\<\"P\"\>", ",", "\<\"U\"\>", ",", "\<\"V\"\>", 
      ",", "\<\"O\"\>", ",", "\<\"I\"\>", ",", "\<\"M\"\>", ",", "\<\"J\"\>", 
      ",", "\<\"K\"\>", ",", "\<\"F\"\>", ",", "\<\"G\"\>", ",", "\<\"Q\"\>", 
      ",", "\<\"D\"\>", ",", "\<\"X\"\>", ",", "\<\"N\"\>"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.754112830920187*^9, 3.75411337462999*^9, 3.754113430706869*^9, 
   3.754113514182886*^9, 3.7541135798750763`*^9, 3.7541137264127817`*^9, 
   3.754113762855465*^9, 3.7541138392149982`*^9, 3.75411389637473*^9, 
   3.754114020949711*^9, {3.754114154287259*^9, 3.7541141860170794`*^9}, 
   3.7541142174874487`*^9, {3.75411440131168*^9, 3.754114454363007*^9}, {
   3.754114513886841*^9, 3.754114520730137*^9}, {3.754114570997267*^9, 
   3.754114585724519*^9}, {3.7541146326308327`*^9, 3.754114637295641*^9}, {
   3.754114887156705*^9, 3.754114960790071*^9}, {3.754115083224474*^9, 
   3.7541151272908487`*^9}, {3.754115569453458*^9, 3.75411560288153*^9}, 
   3.754115662900651*^9, {3.754115953164967*^9, 3.7541159565540743`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 8 \[OpenCurlyDoubleQuote]Memory Maneuver\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.7541072260914707`*^9, 3.754107237675117*^9}, {
   3.754154996752199*^9, 3.754154999011964*^9}, 3.754668514187746*^9}],

Cell["\<\
This was my initial approach which was a simple stack-based approach.\
\>", "Text",
 CellChangeTimes->{{3.754321847136688*^9, 3.754321893497666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
     RowBox[{
     "OpenRead", "[", 
      "\"\</Users/dmitron/Downloads/AdventOfCode/day8.txt\>\"", "]"}], ",", 
     "Number"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chars", "=", 
   RowBox[{"CharacterRange", "[", 
    RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testinput", "=", "\"\<2 3 0 3 10 11 12 1 1 0 1 99 2 1 1 2\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testinput", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"testinput", ",", "\"\< \>\""}], "]"}], "//", "ToExpression"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do2", "[", "input_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stack", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"readIndex", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"metaData", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Catch", "@", 
      RowBox[{"While", "[", 
       RowBox[{"True", ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"stack", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"readIndex", "\[GreaterEqual]", 
               RowBox[{"Length", "[", "input", "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Throw", "[", "\"\<done\>\"", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nextTuple", "=", 
                 RowBox[{"input", "[", 
                  RowBox[{"[", 
                   RowBox[{"readIndex", ";;", 
                    RowBox[{"readIndex", "+", "1"}]}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"stack", ",", "nextTuple"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"readIndex", "+=", "2"}], ";"}], 
               "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], ")"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"stack", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ">", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"stack", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "-=", "1"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"nextTuple", "=", 
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{"readIndex", ";;", 
                   RowBox[{"readIndex", "+", "1"}]}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"stack", ",", "nextTuple"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"readIndex", "+=", "2"}], ";"}], "\[IndentingNewLine]",
               ")"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"metaData", ",", 
                RowBox[{"input", "[", 
                 RowBox[{"[", 
                  RowBox[{"readIndex", ";;", 
                   RowBox[{"readIndex", "+", 
                    RowBox[{"stack", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "-", 
                    "1"}]}], "]"}], "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"readIndex", "+=", 
               RowBox[{"stack", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"stack", "=", 
               RowBox[{"stack", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ")"}]}], "\[IndentingNewLine]", 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"metaData", "//", "Flatten"}], "//", "Total"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Do2", "[", "input", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do2", "[", "testinput", "]"}]}], "Input",
 CellChangeTimes->{{3.754116553074912*^9, 3.754116627187416*^9}, {
   3.754116676978322*^9, 3.7541166827536383`*^9}, {3.75411677317144*^9, 
   3.7541167768896112`*^9}, {3.75415725206973*^9, 3.754157287898466*^9}, {
   3.7543239292467537`*^9, 3.75432393087768*^9}, 3.75432410457664*^9}],

Cell[BoxData["49602"], "Output",
 CellChangeTimes->{3.7541572883663893`*^9, 3.754230874028397*^9, 
  3.754322603466749*^9, 3.7543239351927357`*^9}],

Cell[BoxData["138"], "Output",
 CellChangeTimes->{3.7541572883663893`*^9, 3.754230874028397*^9, 
  3.754322603466749*^9, 3.754323935229413*^9}]
}, Open  ]],

Cell["\<\
Then I got a hint that recursive structures are excellent for trees. So I \
started trying to write a recursive parser. It is really confusing to think \
about. \
\>", "Text",
 CellChangeTimes->{{3.754320946211698*^9, 3.7543209723362007`*^9}, {
  3.754321906431343*^9, 3.754321913162352*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ScanInput", "[", 
   RowBox[{"input_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"read", ",", "input0"}], "}"}], "=", 
      RowBox[{"TakeDrop", "[", 
       RowBox[{"input", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"read", ",", "input0"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754230713032268*^9, 3.7542307657910223`*^9}, {
  3.754230834659889*^9, 3.754230837658329*^9}, {3.754320267972084*^9, 
  3.7543202681979637`*^9}, {3.754320813952401*^9, 3.754320816107603*^9}, {
  3.754321153016169*^9, 3.7543211567459583`*^9}, {3.7543212197202168`*^9, 
  3.7543212349633417`*^9}, {3.754321433824785*^9, 3.7543214369902143`*^9}, {
  3.7543223017564373`*^9, 3.754322373047393*^9}, {3.7543224383813562`*^9, 
  3.754322439830591*^9}}],

Cell["\<\
Here is a really clever structure that bundles the input into the function. \
That way, you can simply keep calling the same function and read further in a \
list. This is a neat kind of stream structure.\
\>", "Text",
 CellChangeTimes->{{3.7543220902404118`*^9, 3.75432213551818*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StreamReader", "[", "input0_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"input", "=", "input0"}], ",", "read"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"read", ",", "input"}], "}"}], "=", 
         RowBox[{"TakeDrop", "[", 
          RowBox[{"input", ",", "n"}], "]"}]}], ";", "read"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7543220059422894`*^9, 3.75432200707368*^9}, {
  3.754322143065539*^9, 3.7543221461966677`*^9}, {3.754322791418223*^9, 
  3.75432279504354*^9}, {3.754323195160514*^9, 3.7543232003168592`*^9}}],

Cell["\<\
So here is the recursive function. It turned out to be simpler to make this \
thing argumentless - then you can do the NestList function without worrying \
about the returns matching up (if you want it not to be argumentless, I think \
you have to return {children, data, input}, but if you feed that into \
NestList, it will throw away all the other data; you have two options: create \
an array that keeps all the data including input at each stage or make it a \
function with side-effects).\
\>", "Text",
 CellChangeTimes->{{3.754323208555538*^9, 3.7543233106102667`*^9}, {
  3.754323755019989*^9, 3.754323809172616*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do3", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "read", ",", "data", ",", "children", ",", "nchildren", ",", "ndata"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"read", ",", "input"}], "}"}], "=", 
      RowBox[{"ScanInput", "[", 
       RowBox[{"input", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nchildren", "=", 
      RowBox[{"read", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ndata", "=", 
      RowBox[{"read", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"children", "=", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Do3", "[", "]"}], "&"}], ",", "Nothing", ",", "nchildren"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "input"}], "}"}], "=", 
      RowBox[{"ScanInput", "[", 
       RowBox[{"input", ",", "ndata"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nchildren", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Total", "[", 
        RowBox[{"children", "[", 
         RowBox[{"[", 
          RowBox[{"Select", "[", 
           RowBox[{"data", ",", 
            RowBox[{
             RowBox[{"#", "\[LessEqual]", " ", "nchildren"}], "&"}]}], "]"}], 
          "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Total", "[", "data", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.754322522108774*^9, 3.754322524189537*^9}, {
  3.75432267825895*^9, 3.754322679102871*^9}, {3.754322856106751*^9, 
  3.7543228588291883`*^9}, {3.754322943180201*^9, 3.754323017762294*^9}, {
  3.754323148270113*^9, 3.754323171296318*^9}, {3.754323457366387*^9, 
  3.754323584351503*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do4", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "read", ",", "data", ",", "children", ",", "nchildren", ",", "ndata"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"read", ",", "input"}], "}"}], "=", 
      RowBox[{"ScanInput", "[", 
       RowBox[{"input", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nchildren", "=", 
      RowBox[{"read", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ndata", "=", 
      RowBox[{"read", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"children", "=", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Do4", "[", "]"}], "&"}], ",", "Nothing", ",", "nchildren"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "input"}], "}"}], "=", 
      RowBox[{"ScanInput", "[", 
       RowBox[{"input", ",", "ndata"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Total", "[", "data", "]"}], "+", 
      RowBox[{"Total", "[", "children", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.754324127448638*^9, 3.754324141486144*^9}, {
  3.7543242144170723`*^9, 3.754324217301882*^9}, {3.7543242488204536`*^9, 
  3.7543242489672728`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "a_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Range", "[", "a", "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"2", " ", "a"}], "]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "#", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g", "[", "4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "#", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "2", ",", "5"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7543233342576933`*^9, 3.75432333986668*^9}, {
  3.7543234016086197`*^9, 3.754323442224091*^9}, {3.754323828000719*^9, 
  3.754323829437611*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
     RowBox[{
     "OpenRead", "[", 
      "\"\</Users/dmitron/Downloads/AdventOfCode/day8.txt\>\"", "]"}], ",", 
     "Number"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 1 Answer: \>\"", ",", " ", 
   RowBox[{"Do4", "[", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
     RowBox[{
     "OpenRead", "[", 
      "\"\</Users/dmitron/Downloads/AdventOfCode/day8.txt\>\"", "]"}], ",", 
     "Number"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Part 2 Answer: \>\"", ",", " ", 
   RowBox[{"Do3", "[", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7543238479677353`*^9, 3.75432388793561*^9}, {
  3.754323940820858*^9, 3.7543239427532063`*^9}, {3.754324162788372*^9, 
  3.754324182737957*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 1 Answer: \"\>", "\[InvisibleSpace]", "49602"}],
  SequenceForm["Part 1 Answer: ", 49602],
  Editable->False]], "Print",
 CellChangeTimes->{3.754324184717173*^9, 3.754324220479508*^9, 
  3.754324251597804*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Part 2 Answer: \"\>", "\[InvisibleSpace]", "25656"}],
  SequenceForm["Part 2 Answer: ", 25656],
  Editable->False]], "Print",
 CellChangeTimes->{3.754324184717173*^9, 3.754324220479508*^9, 
  3.754324252023947*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 9 \[OpenCurlyDoubleQuote]Marble Mania\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.7543242797773046`*^9, 3.7543242919912663`*^9}, {
   3.754668522343462*^9, 3.754668522626466*^9}, 3.754668583217413*^9}],

Cell["\<\
I did part 1, which was pretty natural, but part 2 requires me to speed up \
the code. I\[CloseCurlyQuote]m pretty sure that the slowest part of the code \
is the Deletion/Insertion into the board. The board size grows linearly with \
the number of rounds played and each board change loop requires an O(n) \
operation, so I\[CloseCurlyQuote]m pretty sure I\[CloseCurlyQuote]m at O(n^2) \
(let\[CloseCurlyQuote]s see if you have n many board changes and each of \
those is O(n) operation, then yes). Hence, yea, when I move to n=10^7, this \
gets seriously out of hand. Anyway, there\[CloseCurlyQuote]s a way to \
implement a linked list in Mathematica, which I started below, but I got \
incredible bored, so I stopped. \
http://www.mathprogramming-intro.org/book/node525.html. I have to implement \
insert and delete on those structures and man, just nah.\
\>", "Text",
 CellChangeTimes->{{3.754412249092065*^9, 3.7544122726708393`*^9}, {
  3.75441230665629*^9, 3.754412339780059*^9}, {3.7544123701879463`*^9, 
  3.754412370418023*^9}, {3.754412426276556*^9, 3.754412569767467*^9}, {
  3.758663829886401*^9, 3.758663855531011*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"board", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"round", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"currentMarbleIndex", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPlayers", "=", "413"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"score", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "numPlayers"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"currentPlayer", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastScore", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gameState", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<board\>\"", "\[Rule]", "board"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<round\>\"", "\[Rule]", "round"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<currentMarbleIndex\>\"", "\[Rule]", "currentMarbleIndex"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<numPlayers\>\"", "\[Rule]", "numPlayers"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<score\>\"", "\[Rule]", "score"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<currentPlayer\>\"", "\[Rule]", "currentPlayer"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<lastScore\>\"", "\[Rule]", "lastScore"}]}], "|>"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Non23UpdateRule", "[", "gameState_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nextGameState", ",", "board", ",", "round", ",", "currentMarbleIndex", 
       ",", "numPlayers", ",", "score", ",", "currentPlayer"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"board", "=", 
       RowBox[{"gameState", "[", "\"\<board\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"round", "=", 
       RowBox[{"gameState", "[", "\"\<round\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currentMarbleIndex", "=", 
       RowBox[{"gameState", "[", "\"\<currentMarbleIndex\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numPlayers", "=", 
       RowBox[{"gameState", "[", "\"\<numPlayers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"score", "=", 
       RowBox[{"gameState", "[", "\"\<score\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currentPlayer", "=", 
       RowBox[{"gameState", "[", "\"\<currentPlayer\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"currentMarbleIndex", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"currentMarbleIndex", "+", "2"}], ",", 
         RowBox[{"Length", "[", "board", "]"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"board", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"board", ",", "round", ",", "currentMarbleIndex"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"round", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"currentPlayer", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"currentPlayer", "+", "1"}], ",", "numPlayers", ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nextGameState", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<board\>\"", "\[Rule]", "board"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<round\>\"", "\[Rule]", "round"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "\"\<currentMarbleIndex\>\"", "\[Rule]", "currentMarbleIndex"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<numPlayers\>\"", "\[Rule]", "numPlayers"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<score\>\"", "\[Rule]", "score"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<currentPlayer\>\"", "\[Rule]", "currentPlayer"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<lastScore\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "|>"}]}], ";", 
      "\[IndentingNewLine]", "nextGameState"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Yon23UpdateRule", "[", "gameState_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nextGameState", ",", "marble7Index", ",", "marblePoints", ",", "board",
        ",", "round", ",", "currentMarbleIndex", ",", "numPlayers", ",", 
       "score", ",", "currentPlayer", ",", "lastScore"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"board", "=", 
       RowBox[{"gameState", "[", "\"\<board\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"round", "=", 
       RowBox[{"gameState", "[", "\"\<round\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currentMarbleIndex", "=", 
       RowBox[{"gameState", "[", "\"\<currentMarbleIndex\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numPlayers", "=", 
       RowBox[{"gameState", "[", "\"\<numPlayers\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"score", "=", 
       RowBox[{"gameState", "[", "\"\<score\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currentPlayer", "=", 
       RowBox[{"gameState", "[", "\"\<currentPlayer\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"marble7Index", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"currentMarbleIndex", "-", "7"}], ",", 
         RowBox[{"Length", "[", "board", "]"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"score", "[", 
        RowBox[{"[", "currentPlayer", "]"}], "]"}], "+=", 
       RowBox[{"round", "+", 
        RowBox[{"board", "[", 
         RowBox[{"[", "marble7Index", "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lastScore", "=", 
       RowBox[{"{", 
        RowBox[{"round", ",", 
         RowBox[{"board", "[", 
          RowBox[{"[", "marble7Index", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"marblePoints", "=", 
       RowBox[{"{", 
        RowBox[{"round", ",", 
         RowBox[{"board", "[", 
          RowBox[{"[", "marble7Index", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"board", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"board", ",", "marble7Index"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currentMarbleIndex", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{"marble7Index", ",", 
         RowBox[{"Length", "[", "board", "]"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"round", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"currentPlayer", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"currentPlayer", "+", "1"}], ",", "numPlayers", ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nextGameState", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<board\>\"", "\[Rule]", "board"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<round\>\"", "\[Rule]", "round"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "\"\<currentMarbleIndex\>\"", "\[Rule]", "currentMarbleIndex"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<numPlayers\>\"", "\[Rule]", "numPlayers"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<score\>\"", "\[Rule]", "score"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<currentPlayer\>\"", "\[Rule]", "currentPlayer"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<lastScore\>\"", "\[Rule]", "lastScore"}]}], "|>"}]}], 
      ";", "\[IndentingNewLine]", "nextGameState"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdateRule", "[", "gameState_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "nextGameState", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"gameState", "[", "\"\<round\>\"", "]"}], ",", "23"}], 
          "]"}], "==", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"nextGameState", "=", 
         RowBox[{"Yon23UpdateRule", "[", "gameState", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"nextGameState", "=", 
         RowBox[{"Non23UpdateRule", "[", "gameState", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "nextGameState"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nest", "[", 
    RowBox[{"UpdateRule", ",", "gameState", ",", "71082"}], "]"}], "[", 
   "\"\<score\>\"", "]"}], "//", "Max"}]}], "Input",
 CellChangeTimes->{{3.7543243424382877`*^9, 3.754324377091577*^9}, {
   3.754324465388248*^9, 3.754324490152335*^9}, {3.754325222339116*^9, 
   3.7543252267774754`*^9}, {3.754325260543716*^9, 3.754325262140697*^9}, {
   3.754325839168544*^9, 3.7543259082626963`*^9}, {3.754326407706936*^9, 
   3.754326416877862*^9}, {3.7543264591543427`*^9, 3.754326459493685*^9}, {
   3.754326633918563*^9, 3.754326713437131*^9}, {3.75432677005651*^9, 
   3.754326841420092*^9}, {3.754326925328746*^9, 3.754326925463132*^9}, {
   3.754327010317863*^9, 3.7543270320941143`*^9}, {3.754327162533038*^9, 
   3.754327196828311*^9}, {3.754327231365342*^9, 3.75432723178933*^9}, {
   3.7543273077243223`*^9, 3.754327442028181*^9}, 3.7543274856940813`*^9, {
   3.754327539250143*^9, 3.7543277249773703`*^9}, {3.754327755527005*^9, 
   3.754327919054851*^9}, {3.75432795043729*^9, 3.754328285438506*^9}, {
   3.754328322924198*^9, 3.754328522004835*^9}, {3.7543285549240923`*^9, 
   3.754328585354464*^9}, 3.754328618177795*^9, {3.754328652882551*^9, 
   3.754328739745819*^9}, 3.7543288663057957`*^9, {3.7543293135930653`*^9, 
   3.754329619697723*^9}, {3.754329735513858*^9, 3.754329742151458*^9}, {
   3.754330765676272*^9, 3.754330765923151*^9}, {3.7543308456478024`*^9, 
   3.754330846108058*^9}, 3.7543309246202383`*^9, 3.75435145745548*^9, {
   3.754351557365707*^9, 3.754351560811878*^9}, 3.75435261511637*^9, {
   3.7543527138398533`*^9, 3.754352741235571*^9}, {3.75435292309901*^9, 
   3.7543529453010187`*^9}, {3.754352983747458*^9, 3.754353141385556*^9}, {
   3.754355835929443*^9, 3.754355836304103*^9}, {3.754358426097736*^9, 
   3.7543584762125*^9}, {3.754358666230543*^9, 3.754358666814494*^9}, {
   3.754359417522769*^9, 3.754359418052833*^9}}],

Cell[BoxData["416424"], "Output",
 CellChangeTimes->{{3.754358426857594*^9, 3.754358453056313*^9}, 
   3.754358494980685*^9, {3.75435941547611*^9, 3.754359441768691*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toLinkedList", "[", "x_List", "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#2", ",", "#1"}], "}"}], "&"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Reverse", "[", "x", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7543601371331377`*^9, 3.754360169919424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gameState", "[", "\"\<board\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7543601761856318`*^9, 3.754360180226503*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.754360180541437*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ll", "=", 
   RowBox[{"toLinkedList", "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", "100"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754360185220549*^9, 3.7543601916034327`*^9}, {
  3.754360221640183*^9, 3.75436022312892*^9}, {3.754360268295019*^9, 
  3.754360295980081*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"popFromLinkedList", "[", "x_List", "]"}], ":="}], ";"}]], "Input",\

 CellChangeTimes->{{3.754360342928677*^9, 3.754360357508049*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"deleteFromLinkedList", "[", 
   RowBox[{"x_List", ",", "ix_"}], "]"}], ":="}]], "Input",
 CellChangeTimes->{{3.7543603584080553`*^9, 3.7543603704912863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"2", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.754360405035852*^9, 3.754360413339099*^9}}],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{3.7543604138762407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstantArray", "[", 
   RowBox[{"2", ",", "3"}], "]"}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.754360439260618*^9, 3.754360448557296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.754360439581666*^9, 3.754360448832747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ll", "[", 
  RowBox[{"[", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"2", ",", "4"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.754360393310564*^9, 3.754360428637344*^9}, {
  3.7543604594911633`*^9, 3.754360476435101*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.3215676953993756`", ",", 
     RowBox[{"{", 
      RowBox[{"0.15619617161865906`", ",", 
       RowBox[{"{", 
        RowBox[{"0.8881163115224493`", ",", 
         RowBox[{"{", 
          RowBox[{"0.5733096412095877`", ",", 
           RowBox[{"{", 
            RowBox[{"0.011184023157212453`", ",", 
             RowBox[{"{", 
              RowBox[{"0.22849742723782174`", ",", 
               RowBox[{"{", 
                RowBox[{"0.836492619792228`", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.3242017074841195`", ",", 
                   RowBox[{"{", 
                    RowBox[{"0.4463956522280086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09961503918428494`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.83162695007385`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8134565216898226`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7726507264104359`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23015550617468228`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9211101551701171`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.011575966096354584`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22974522767751449`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267766957981503`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2722292296354112`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2686214657971955`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.30407948979267063`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4456864803248721`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9558380787164269`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5976442276647655`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6838780828254565`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7438529705094634`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2138725817344156`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32687608510162103`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5761757648008081`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7254859302452921`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8473371220489367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8054944496959036`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6702342978929943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9294084536334488`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6944241745247992`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11778443764478252`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8529008010234811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.021866688888997343`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.958206491760643`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19914308062411656`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3481625762005751`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5229977963287367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.711081054560192`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8468126472197086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6008041048677346`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7640631426816724`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09247878293283285`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6131916484001119`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01318913136915767`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3622989429055028`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07010993416951772`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05247490973621782`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5642568400669781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2877384002564167`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7261966328611635`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2342043326186085`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4931193880608771`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9755853809502288`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8067797965587602`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33391842304540886`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15457377110665949`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3426060420223891`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.849423820521231`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267864233081147`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9610019511147734`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9415445229926578`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.779297625656969`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2668666042608776`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2206896044856781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18515799344481332`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1826496173080867`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9237588910646164`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11578022761903917`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48239593899463773`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3493346914888469`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13042749854153546`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4303762937427811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4324515752557154`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27787166629926596`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7962898036709412`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4722895674520067`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0428770837256065`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4796191496800857`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6199487372296943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.543139929424088`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9099563220900322`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6968407793599001`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6745176979631904`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18297936289301453`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9475212407750722`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9240533443405152`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16406140288266458`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.016353989738283614`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3311481357353383`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.719887904681008`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1613902344181959`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.008214809819380164`", ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}]}], "}"}]}], 
  "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
RowBox[{"{", 
 RowBox[{"0.3215676953993756`", ",", 
  RowBox[{"{", 
   RowBox[{"0.15619617161865906`", ",", 
    RowBox[{"{", 
     RowBox[{"0.8881163115224493`", ",", 
      RowBox[{"{", 
       RowBox[{"0.5733096412095877`", ",", 
        RowBox[{"{", 
         RowBox[{"0.011184023157212453`", ",", 
          RowBox[{"{", 
           RowBox[{"0.22849742723782174`", ",", 
            RowBox[{"{", 
             RowBox[{"0.836492619792228`", ",", 
              RowBox[{"{", 
               RowBox[{"0.3242017074841195`", ",", 
                RowBox[{"{", 
                 RowBox[{"0.4463956522280086`", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.09961503918428494`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.83162695007385`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8134565216898226`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7726507264104359`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23015550617468228`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9211101551701171`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.011575966096354584`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22974522767751449`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267766957981503`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2722292296354112`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2686214657971955`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.30407948979267063`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4456864803248721`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9558380787164269`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5976442276647655`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6838780828254565`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7438529705094634`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2138725817344156`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32687608510162103`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5761757648008081`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7254859302452921`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8473371220489367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8054944496959036`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6702342978929943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9294084536334488`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6944241745247992`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11778443764478252`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8529008010234811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.021866688888997343`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.958206491760643`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19914308062411656`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3481625762005751`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5229977963287367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.711081054560192`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8468126472197086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6008041048677346`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7640631426816724`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09247878293283285`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6131916484001119`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01318913136915767`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3622989429055028`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07010993416951772`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05247490973621782`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5642568400669781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2877384002564167`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7261966328611635`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2342043326186085`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4931193880608771`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9755853809502288`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8067797965587602`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33391842304540886`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15457377110665949`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3426060420223891`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.849423820521231`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267864233081147`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9610019511147734`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9415445229926578`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.779297625656969`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2668666042608776`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2206896044856781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18515799344481332`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1826496173080867`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9237588910646164`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11578022761903917`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48239593899463773`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3493346914888469`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13042749854153546`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4303762937427811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4324515752557154`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27787166629926596`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7962898036709412`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4722895674520067`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0428770837256065`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4796191496800857`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6199487372296943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.543139929424088`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9099563220900322`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6968407793599001`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6745176979631904`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18297936289301453`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9475212407750722`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9240533443405152`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16406140288266458`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.016353989738283614`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3311481357353383`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.719887904681008`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1613902344181959`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.008214809819380164`", ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}]}], "}"}]}], 
  "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
RowBox[{"{", 
 RowBox[{"0.3215676953993756`", ",", 
  RowBox[{"{", 
   RowBox[{"0.15619617161865906`", ",", 
    RowBox[{"{", 
     RowBox[{"0.8881163115224493`", ",", 
      RowBox[{"{", 
       RowBox[{"0.5733096412095877`", ",", 
        RowBox[{"{", 
         RowBox[{"0.011184023157212453`", ",", 
          RowBox[{"{", 
           RowBox[{"0.22849742723782174`", ",", 
            RowBox[{"{", 
             RowBox[{"0.836492619792228`", ",", 
              RowBox[{"{", 
               RowBox[{"0.3242017074841195`", ",", 
                RowBox[{"{", 
                 RowBox[{"0.4463956522280086`", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.09961503918428494`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.83162695007385`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8134565216898226`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7726507264104359`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23015550617468228`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9211101551701171`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.011575966096354584`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22974522767751449`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267766957981503`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2722292296354112`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2686214657971955`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.30407948979267063`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4456864803248721`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9558380787164269`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5976442276647655`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6838780828254565`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7438529705094634`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2138725817344156`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32687608510162103`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5761757648008081`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7254859302452921`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8473371220489367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8054944496959036`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6702342978929943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9294084536334488`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6944241745247992`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11778443764478252`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8529008010234811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.021866688888997343`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.958206491760643`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19914308062411656`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3481625762005751`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5229977963287367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.711081054560192`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8468126472197086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6008041048677346`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7640631426816724`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09247878293283285`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6131916484001119`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01318913136915767`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3622989429055028`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07010993416951772`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05247490973621782`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5642568400669781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2877384002564167`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7261966328611635`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2342043326186085`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4931193880608771`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9755853809502288`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8067797965587602`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33391842304540886`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15457377110665949`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3426060420223891`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.849423820521231`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267864233081147`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9610019511147734`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9415445229926578`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.779297625656969`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2668666042608776`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2206896044856781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18515799344481332`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1826496173080867`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9237588910646164`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11578022761903917`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48239593899463773`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3493346914888469`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13042749854153546`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4303762937427811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4324515752557154`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27787166629926596`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7962898036709412`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4722895674520067`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0428770837256065`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4796191496800857`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6199487372296943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.543139929424088`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9099563220900322`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6968407793599001`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6745176979631904`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18297936289301453`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9475212407750722`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9240533443405152`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16406140288266458`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.016353989738283614`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3311481357353383`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.719887904681008`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1613902344181959`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.008214809819380164`", ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}]}], "}"}]}], 
  "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
RowBox[{"{", 
 RowBox[{"0.3215676953993756`", ",", 
  RowBox[{"{", 
   RowBox[{"0.15619617161865906`", ",", 
    RowBox[{"{", 
     RowBox[{"0.8881163115224493`", ",", 
      RowBox[{"{", 
       RowBox[{"0.5733096412095877`", ",", 
        RowBox[{"{", 
         RowBox[{"0.011184023157212453`", ",", 
          RowBox[{"{", 
           RowBox[{"0.22849742723782174`", ",", 
            RowBox[{"{", 
             RowBox[{"0.836492619792228`", ",", 
              RowBox[{"{", 
               RowBox[{"0.3242017074841195`", ",", 
                RowBox[{"{", 
                 RowBox[{"0.4463956522280086`", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.09961503918428494`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.83162695007385`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8134565216898226`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7726507264104359`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23015550617468228`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9211101551701171`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.011575966096354584`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22974522767751449`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267766957981503`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2722292296354112`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2686214657971955`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.30407948979267063`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4456864803248721`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9558380787164269`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5976442276647655`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6838780828254565`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7438529705094634`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2138725817344156`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32687608510162103`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5761757648008081`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7254859302452921`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8473371220489367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8054944496959036`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6702342978929943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9294084536334488`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6944241745247992`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11778443764478252`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8529008010234811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.021866688888997343`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.958206491760643`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19914308062411656`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3481625762005751`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5229977963287367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.711081054560192`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8468126472197086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6008041048677346`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7640631426816724`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09247878293283285`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6131916484001119`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01318913136915767`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3622989429055028`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07010993416951772`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05247490973621782`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5642568400669781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2877384002564167`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7261966328611635`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2342043326186085`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4931193880608771`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9755853809502288`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8067797965587602`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33391842304540886`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15457377110665949`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3426060420223891`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.849423820521231`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267864233081147`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9610019511147734`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9415445229926578`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.779297625656969`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2668666042608776`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2206896044856781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18515799344481332`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1826496173080867`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9237588910646164`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11578022761903917`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48239593899463773`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3493346914888469`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13042749854153546`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4303762937427811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4324515752557154`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27787166629926596`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7962898036709412`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4722895674520067`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0428770837256065`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4796191496800857`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6199487372296943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.543139929424088`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9099563220900322`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6968407793599001`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6745176979631904`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18297936289301453`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9475212407750722`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9240533443405152`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16406140288266458`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.016353989738283614`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3311481357353383`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.719887904681008`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1613902344181959`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.008214809819380164`", ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}]}], "}"}]}], 
  "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.754360396072399*^9, 3.7543604289156647`*^9}, {
  3.754360461431563*^9, 3.754360476736886*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ll"], "Input",
 CellChangeTimes->{{3.754360312332128*^9, 3.754360312446238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.28286270473585473`", ",", 
   RowBox[{"{", 
    RowBox[{"0.3215676953993756`", ",", 
     RowBox[{"{", 
      RowBox[{"0.15619617161865906`", ",", 
       RowBox[{"{", 
        RowBox[{"0.8881163115224493`", ",", 
         RowBox[{"{", 
          RowBox[{"0.5733096412095877`", ",", 
           RowBox[{"{", 
            RowBox[{"0.011184023157212453`", ",", 
             RowBox[{"{", 
              RowBox[{"0.22849742723782174`", ",", 
               RowBox[{"{", 
                RowBox[{"0.836492619792228`", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.3242017074841195`", ",", 
                   RowBox[{"{", 
                    RowBox[{"0.4463956522280086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09961503918428494`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.83162695007385`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8134565216898226`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7726507264104359`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23015550617468228`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9211101551701171`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.011575966096354584`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22974522767751449`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267766957981503`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2722292296354112`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2686214657971955`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.30407948979267063`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4456864803248721`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9558380787164269`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5976442276647655`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6838780828254565`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7438529705094634`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2138725817344156`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32687608510162103`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5761757648008081`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7254859302452921`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8473371220489367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8054944496959036`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6702342978929943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9294084536334488`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6944241745247992`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11778443764478252`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8529008010234811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.021866688888997343`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.958206491760643`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19914308062411656`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3481625762005751`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5229977963287367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.711081054560192`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8468126472197086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6008041048677346`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7640631426816724`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09247878293283285`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6131916484001119`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01318913136915767`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3622989429055028`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07010993416951772`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05247490973621782`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5642568400669781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2877384002564167`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7261966328611635`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2342043326186085`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4931193880608771`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9755853809502288`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8067797965587602`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33391842304540886`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15457377110665949`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3426060420223891`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.849423820521231`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267864233081147`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9610019511147734`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9415445229926578`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.779297625656969`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2668666042608776`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2206896044856781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18515799344481332`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1826496173080867`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9237588910646164`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11578022761903917`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48239593899463773`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3493346914888469`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13042749854153546`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4303762937427811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4324515752557154`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27787166629926596`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7962898036709412`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4722895674520067`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0428770837256065`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4796191496800857`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6199487372296943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.543139929424088`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9099563220900322`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6968407793599001`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6745176979631904`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18297936289301453`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9475212407750722`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9240533443405152`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16406140288266458`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.016353989738283614`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3311481357353383`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.719887904681008`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1613902344181959`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.008214809819380164`", ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}]}], "}"}]}], 
  "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7543603127248087`*^9, 3.754360324944701*^9}, 
   3.754360391768372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ll", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", 
  RowBox[{"ll", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754360224368354*^9, 3.754360305610202*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.3215676953993756`", ",", 
   RowBox[{"{", 
    RowBox[{"0.15619617161865906`", ",", 
     RowBox[{"{", 
      RowBox[{"0.8881163115224493`", ",", 
       RowBox[{"{", 
        RowBox[{"0.5733096412095877`", ",", 
         RowBox[{"{", 
          RowBox[{"0.011184023157212453`", ",", 
           RowBox[{"{", 
            RowBox[{"0.22849742723782174`", ",", 
             RowBox[{"{", 
              RowBox[{"0.836492619792228`", ",", 
               RowBox[{"{", 
                RowBox[{"0.3242017074841195`", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.4463956522280086`", ",", 
                   RowBox[{"{", 
                    RowBox[{"0.09961503918428494`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.83162695007385`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8134565216898226`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7726507264104359`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.23015550617468228`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9211101551701171`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.011575966096354584`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22974522767751449`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267766957981503`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2722292296354112`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2686214657971955`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.30407948979267063`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4456864803248721`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9558380787164269`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5976442276647655`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6838780828254565`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7438529705094634`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2138725817344156`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.32687608510162103`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5761757648008081`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7254859302452921`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8473371220489367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8054944496959036`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6702342978929943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9294084536334488`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6944241745247992`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11778443764478252`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8529008010234811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.021866688888997343`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.958206491760643`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.19914308062411656`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3481625762005751`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5229977963287367`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.711081054560192`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8468126472197086`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6008041048677346`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7640631426816724`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.09247878293283285`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6131916484001119`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01318913136915767`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3622989429055028`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.07010993416951772`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.05247490973621782`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5642568400669781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2877384002564167`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7261966328611635`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2342043326186085`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4931193880608771`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9755853809502288`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8067797965587602`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33391842304540886`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15457377110665949`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3426060420223891`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.849423820521231`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9267864233081147`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9610019511147734`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9415445229926578`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.779297625656969`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2668666042608776`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2206896044856781`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18515799344481332`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1826496173080867`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9237588910646164`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11578022761903917`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.48239593899463773`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3493346914888469`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.13042749854153546`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4303762937427811`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4324515752557154`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.27787166629926596`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7962898036709412`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4722895674520067`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.0428770837256065`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4796191496800857`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6199487372296943`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.543139929424088`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9099563220900322`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6968407793599001`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6745176979631904`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.18297936289301453`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9475212407750722`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.9240533443405152`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16406140288266458`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.016353989738283614`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3311481357353383`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.719887904681008`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1613902344181959`", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.008214809819380164`", ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}]}], "}"}]}], 
  "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], \
"}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.754360224807213*^9, 3.7543603220717983`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 10 \[OpenCurlyDoubleQuote]The Stars Align\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.754412583757842*^9, 3.7544126079055977`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{"RegularExpression", "[", "\"\<-?[0-9]+\>\"", "]"}]}], "]"}],
        "&"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ReadList", "[", 
       RowBox[{
        RowBox[{
        "OpenRead", "[", 
         "\"\</Users/dmitron/Downloads/AdventOfCode/day10.txt\>\"", "]"}], 
        ",", "String"}], "]"}]}], "]"}], "//", "ToExpression"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"s", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "4"}], "]"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"s", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "4"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7544126257594547`*^9, 3.754412642368634*^9}, {
  3.754412736632906*^9, 3.754412801918212*^9}, {3.754531205433591*^9, 
  3.7545312080754147`*^9}, {3.7545319786493464`*^9, 3.754531995587785*^9}, {
  3.754532124279182*^9, 3.754532124573748*^9}, {3.7546669751095333`*^9, 
  3.7546669754441547`*^9}, {3.75466764896061*^9, 3.754667660345181*^9}, {
  3.754667740446913*^9, 3.7546677409698687`*^9}, {3.754667861471714*^9, 
  3.754667877507215*^9}, {3.7546679256391697`*^9, 3.754667929398662*^9}, {
  3.75466797625387*^9, 3.754667976712919*^9}, {3.754668310407888*^9, 
  3.754668315738805*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pos", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "+", 
    RowBox[{"t", "*", 
     RowBox[{"s", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"3", ";;", "4"}]}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ns", "=", 
   RowBox[{"N", "[", "s", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"npos", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ns", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "+", 
    RowBox[{"t", "*", 
     RowBox[{"s", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"3", ";;", "4"}]}], "]"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754668270606887*^9, 3.7546683176770153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"DistanceMatrix", "[", 
      RowBox[{"npos", "[", "t", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "10000", ",", "10200"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7546673652092943`*^9, 3.75466752290318*^9}, {
  3.754667897373213*^9, 3.754667957675131*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 201.}, {0, 1466.900132933391}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.754667376755704*^9, 3.754667406680539*^9}, {
   3.754667456577956*^9, 3.7546675249086313`*^9}, {3.754667899637905*^9, 
   3.7546679584500093`*^9}, 3.75466831967635*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"DistanceMatrix", "[", 
        RowBox[{"npos", "[", "t", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "10000", ",", "10200"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"10000", "+", 
  RowBox[{"First", "@", 
   RowBox[{"FirstPosition", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"DistanceMatrix", "[", 
         RowBox[{"npos", "[", "t", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "10000", ",", "10200"}], "}"}]}], "]"}], ",", "m"}],
     "]"}]}], "-", "1"}]}], "Input",
 CellChangeTimes->{{3.7546680292055387`*^9, 3.754668057183476*^9}, {
  3.754668143377922*^9, 3.754668179754952*^9}, {3.754668243820939*^9, 
  3.754668243969274*^9}}],

Cell[BoxData["10101"], "Output",
 CellChangeTimes->{{3.75466813379778*^9, 3.7546681807878513`*^9}, 
   3.754668253172233*^9, 3.754668322765627*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", "10101"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xmin", ",", "xmax"}], "}"}], "=", 
   RowBox[{"MinMax", "[", 
    RowBox[{
     RowBox[{"pos", "[", "0", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ymin", ",", "ymax"}], "}"}], "=", 
   RowBox[{"MinMax", "[", 
    RowBox[{
     RowBox[{"pos", "[", "0", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754667999606889*^9, 3.7546680076310587`*^9}, {
  3.7546681822020683`*^9, 3.754668182315783*^9}, {3.7546682463921833`*^9, 
  3.754668246494553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"SparseArray", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Rule]", "1"}], "&"}], ",", 
     RowBox[{"pos", "[", "t", "]"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7546671023114967`*^9, 3.7546671376259336`*^9}, {
  3.754667206817021*^9, 3.7546673148980837`*^9}, {3.754668195493393*^9, 
  3.7546682493471947`*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[
   Automatic, {232, 208}, 1, {
    1, {{0, 1, 10, 12, 13, 14, 16, 16, 16, 18, 21, 24, 27, 30, 40, 40, 40, 43,
       45, 47, 49, 51, 61, 61, 61, 64, 66, 68, 70, 72, 82, 82, 82, 85, 87, 89,
       91, 93, 103, 103, 103, 105, 108, 111, 114, 117, 127, 127, 127, 130, 
      132, 134, 136, 138, 148, 148, 148, 154, 157, 160, 162, 164, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 
      172}, {{10}, {3}, {5}, {2}, {9}, {10}, {7}, {4}, {6}, {8}, {1}, {10}, {
      1}, {1}, {2}, {3}, {10}, {1}, {6}, {10}, {1}, {1}, {6}, {10}, {1}, {
      6}, {10}, {1}, {10}, {6}, {5}, {2}, {10}, {9}, {7}, {4}, {1}, {8}, {
      3}, {6}, {9}, {8}, {7}, {10}, {6}, {10}, {6}, {10}, {6}, {6}, {10}, {
      4}, {1}, {3}, {8}, {6}, {7}, {2}, {10}, {5}, {9}, {9}, {7}, {8}, {10}, {
      6}, {6}, {10}, {6}, {10}, {10}, {6}, {3}, {5}, {7}, {6}, {2}, {4}, {
      1}, {9}, {10}, {8}, {7}, {9}, {8}, {6}, {10}, {6}, {10}, {10}, {6}, {
      10}, {6}, {4}, {8}, {6}, {1}, {2}, {7}, {10}, {9}, {5}, {3}, {1}, {
      10}, {6}, {10}, {1}, {10}, {1}, {6}, {10}, {1}, {6}, {1}, {6}, {10}, {
      5}, {1}, {7}, {8}, {9}, {2}, {10}, {3}, {6}, {4}, {7}, {8}, {9}, {10}, {
      6}, {10}, {6}, {6}, {10}, {6}, {10}, {8}, {1}, {10}, {4}, {5}, {6}, {
      7}, {2}, {3}, {9}, {5}, {9}, {3}, {4}, {2}, {1}, {2}, {5}, {10}, {5}, {
      10}, {1}, {10}, {1}, {10}, {1}, {2}, {7}, {9}, {3}, {6}, {5}, {8}, {
      4}}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0}}], {{0, 0}, {208, 232}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.7546671000853567`*^9, 3.754667133452373*^9}, {
   3.7546672102813187`*^9, 3.7546672210281677`*^9}, {3.75466725985222*^9, 
   3.75466731550565*^9}, {3.75466819632823*^9, 3.754668251160696*^9}, 
   3.754668326483149*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 11 \[OpenCurlyDoubleQuote]Chronal Charge\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.7544125885555964`*^9, 3.754412589238744*^9}, {
  3.754668486999157*^9, 3.7546684914985323`*^9}}],

Cell["Puzzle input 2866.", "Text",
 CellChangeTimes->{{3.754668747987405*^9, 3.754668751224942*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", "2866"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fuelCells", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "300"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetCellPowerLevel", "[", 
    RowBox[{"i_", ",", "j_", ",", "serialNumber_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Quotient", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "+", "10"}], ")"}], "*", "j"}], "+", 
           "serialNumber"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"i", "+", "10"}], ")"}]}], ",", "1000"}], "]"}], 
      "\[IndentingNewLine]", ",", "100"}], "]"}], "-", "5"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetCellPowerLevel", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"GetCellPowerLevel", "[", 
    RowBox[{"i", ",", "j", ",", "input"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fuelCellValues", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GetCellPowerLevel", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "300"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetRegionPowerLevel", "[", 
    RowBox[{"i_", ",", "j_", ",", "size_"}], "]"}], ":=", 
   RowBox[{"Total", "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"fuelCellValues", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"i", ";;", 
         RowBox[{"i", "+", "size", "-", "1"}]}], ",", 
        RowBox[{"j", ";;", 
         RowBox[{"j", "+", "size", "-", "1"}]}]}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetGridPowerLevel", "[", "size_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"GetRegionPowerLevel", "[", 
        RowBox[{"i", ",", "j", ",", "size"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"300", "-", "size"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"300", "-", "size"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.75466875209151*^9, 3.7546687550282516`*^9}, {
  3.754669359491152*^9, 3.7546693634858913`*^9}, {3.75466970103864*^9, 
  3.754669701244585*^9}, {3.754670569717696*^9, 3.754670589233573*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Max", "[", 
  RowBox[{"GetGridPowerLevel", "[", "3", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"GetGridPowerLevel", "[", "3", "]"}], ",", 
   RowBox[{"Max", "[", 
    RowBox[{"GetGridPowerLevel", "[", "3", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.754670470841419*^9, 3.754670471975533*^9}, {
  3.7546706225793667`*^9, 3.7546706228417587`*^9}}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{{3.754670467429113*^9, 3.754670472893506*^9}, 
   3.75467059296691*^9, 3.754670626487035*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"20", ",", "50"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.754670467429113*^9, 3.754670472893506*^9}, 
   3.75467059296691*^9, 3.75467062781424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"GetGridPowerLevel", "[", "size", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"size", ",", "5", ",", "12"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754669908558291*^9, 3.754669939755022*^9}, {
  3.754669981701784*^9, 3.754670037167966*^9}, {3.75467007169762*^9, 
  3.754670077283881*^9}, {3.75467021025675*^9, 3.754670246387031*^9}, {
  3.7546702885088*^9, 3.7546702905907393`*^9}, {3.754670609055992*^9, 
  3.754670615162513*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "54", ",", "57", ",", "77", ",", "73", ",", "88", ",", "79", ",", "78", ",",
    "64"}], "}"}]], "Output",
 CellChangeTimes->{{3.754669912972478*^9, 3.754669940612032*^9}, {
   3.754669982693385*^9, 3.7546700302779903`*^9}, 3.754670069496578*^9, {
   3.754670207696807*^9, 3.754670233188354*^9}, 3.7546702790480213`*^9, 
   3.754670351097142*^9, 3.754670637774169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Max", "[", 
  RowBox[{"GetGridPowerLevel", "[", "9", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"GetGridPowerLevel", "[", "9", "]"}], ",", 
   RowBox[{"Max", "[", 
    RowBox[{"GetGridPowerLevel", "[", "9", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7546696154787893`*^9, 3.7546696405893593`*^9}, {
  3.754670369694025*^9, 3.754670380722847*^9}, {3.7546706471514273`*^9, 
  3.7546706496670732`*^9}, {3.7546707017158747`*^9, 3.754670702390608*^9}}],

Cell[BoxData["88"], "Output",
 CellChangeTimes->{{3.754669616588768*^9, 3.754669640949152*^9}, 
   3.7546703847272453`*^9, 3.754670653208531*^9, 3.754670706656989*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"238", ",", "278"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.754669616588768*^9, 3.754669640949152*^9}, 
   3.7546703847272453`*^9, 3.754670653208531*^9, 3.754670709402904*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 12 \[OpenCurlyDoubleQuote]Subterranean Sustainability\
\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.7544125913409452`*^9, 3.754412592244236*^9}, {
  3.75466849399151*^9, 3.7546685044046183`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
     RowBox[{
     "OpenRead", "[", 
      "\"\</Users/dmitron/Downloads/AdventOfCode/day12.txt\>\"", "]"}], ",", 
     "String"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"StringSplit", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"input", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<#\>\"", "\[Rule]", "\"\<1\>\""}], ",", 
         RowBox[{"\"\<.\>\"", "\[Rule]", "\"\<0\>\""}]}], "}"}]}], "]"}], ",",
      " ", "\"\< \>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialState", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{
     RowBox[{"Characters", "[", 
      RowBox[{"input", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ToExpression", "@", 
        RowBox[{"Characters", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "->", 
       RowBox[{"ToExpression", "@", 
        RowBox[{
         RowBox[{"Characters", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "&"}], ",", 
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generations", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pad", "=", 
   RowBox[{"generations", "+", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ca", "=", 
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{"rules", ",", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{"initialState", ",", "pad"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "generations", "}"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ca", "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}], ".", 
  RowBox[{"Range", "[", 
   RowBox[{
    RowBox[{"0", "-", "pad"}], ",", 
    RowBox[{
     RowBox[{"Length", "[", "initialState", "]"}], "-", "1", "+", "pad"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.754670986726035*^9, 3.754671121103815*^9}, {
   3.754671185169437*^9, 3.754671204941762*^9}, {3.754671248766828*^9, 
   3.75467137118169*^9}, 3.7546714356571836`*^9, {3.754671568824608*^9, 
   3.754671602593354*^9}, {3.754672100146574*^9, 3.754672106660886*^9}, {
   3.754672288602075*^9, 3.75467231290375*^9}, {3.754672346463064*^9, 
   3.754672346842805*^9}, {3.7546725766459007`*^9, 3.754672580623019*^9}, {
   3.754672629133629*^9, 3.7546726293409357`*^9}, {3.75467270655847*^9, 
   3.7546727165533247`*^9}, {3.754674412345868*^9, 3.7546744715170193`*^9}, {
   3.75467455882479*^9, 3.7546745772868967`*^9}}],

Cell[BoxData["1184"], "Output",
 CellChangeTimes->{3.754674581428735*^9, 3.754674673027673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "@", 
  RowBox[{"(", 
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{"rules", ",", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{"initialState", ",", "145"}], "]"}], ",", 
     RowBox[{"{", "140", "}"}]}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7546746808431187`*^9, 3.754674742260051*^9}, {
   3.754675095444003*^9, 3.754675151999118*^9}, 3.754675230641139*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztnEty2zAQBcHcJFfKEXyBXCLb3DmOJPyIzzxUjTVedJdNlRVSCzRnHkEq
+Pnx+9fHj5TS38/fP1dKF0xIZXN+mLwXY78DBeGgIBwUhIOCcFAQDgrCQUE4
KAgHBeGgIBwUhIOCcFAQDgrCQUE4KAgHBeGgIBwUhIOCcFAQDgrCQUE4KAgH
BeGgIBwUhIOCcFAQDgrCQUE4KAgHBeGgIBwUhIOCcFAQDgrCQcE3ID04Peho
LxRYfAo4dYACV9L/HxQEkvLP4UEHe6FgzzOQD+MABZ6k1/bIAQo8SfkFBVHk
KkBBGHlydhQHKPCkzI9P4gAFnqRmg4IQmipAQQzNjTo9DlDgSXuvVI4DFHjS
3a5W4wAFnvRVgIIA+oc2YhygwJPbczMtDlDgyf3RpRQHKPBkqAIUvJvhAb4S
ByjwZPwOhRAHKPBkVCDEAQo8mVUBCt7KpArsOECBJzMFZhygwJOpAisOUODJ
ogpQ8D7mVWDEAQo8WSjYxwEKPFkp2MYBCjxZVwEK3sSyCnZxgAJP1go2cYAC
TzYK1nGAAk+2VYCCd7CrgmUcoMCTrYJVHKDAk72CRRygwBOrClDw5RhVMI8D
FHhiKZjGAQo8MRXM4gAFnghVgIKvxa6CSRygwBNBwRgHKPBEUTDEAQp8sZfD
GeIABd7Yy+HcJKHAmbR/Svnap3WAAl+S8ZQy74WCL+MZyEdxgAJf0mt7EAco
8CXlFz0OUOBLroKDOECBL3lydhAHKPClzI/1OECBL6nZiHGAAl+aKlDjAAW+
NIOqxgEKfGkH1YiDMos7WqkCBRbdeb2PgyzqbKUKFFj0VSAoUG7rNZ+JApM2
C4w4KFMIaVxRoNIreMTBatCa69eDlSpQYDEouPb/r0C8rYcCnZuCR5+3FQhx
gAKVUcG16kW32FA++EKBzUzBohf116/qShUosLgreHUiU4EZByhQGRQ8x99W
YMUBClRmChZt5l4FKPBhrmA6P7jfo9NWqkCBxVLBmMl3Bfs4QIHKQsEskwcF
2zhAgcpawTA/mFQBChzYKRh60fCwQFipAgUWKwWL+cH9YYG9UgUKLJYKpvOD
NPR/c6UKFFjsFAyNJg39fx0HKFDZK7g1mudbWhygQMVQ0Dea8pYQByhQMatg
VKDFAQpUrCqYfK1diwMUqJgK2kZTXoU4QIGKraBpNO1bVhygQEWpgslw2nGA
AhWhCiZfaxfiAAUqioLSaNrCsOIABSqSgtxouomzEQcoUBGrYFRgxQEKVKQs
KK2nyQQrDlCgkkezDvBUweMkT6mTtY8DFKik8psfBfRXQtXNY3url00coECl
tPWU2/n9Sugx8tlS6izt4gAFKvm0Lv3+6s7+oib/lZvW69h7HIzLJKDAoh3L
dKV6vtftVZpQ7kXlW0Z9/0/1H1CgUxM4n/S5+b/O+tQ1oTrwpXzam3ivQ8pn
XiiwKcNVTu5SAlf9ozahZs+S5G005B1RcEB7yVMl1Ne29bR7lp7VX0PVVG4v
p2BPPXHrEKYcro2dq154pjz05XK1flZ9I9VL3e/FP7Z70nk=
   "], {{0, 0}, {388, 
   141}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.754675108384307*^9, 3.754675152468556*^9}, 
   3.754675182697467*^9, 3.7546752318567247`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CellularAutomaton", "[", 
        RowBox[{"rules", ",", 
         RowBox[{"ArrayPad", "[", 
          RowBox[{"initialState", ",", "145"}], "]"}], ",", 
         RowBox[{"{", "140", "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "-", "141"}], 
   "]"}], "//", "Total"}]], "Input",
 CellChangeTimes->{{3.754675251780406*^9, 3.754675252680526*^9}, {
  3.754675345839826*^9, 3.7546753914821672`*^9}, {3.754675439755653*^9, 
  3.75467546634879*^9}}],

Cell[BoxData["944"], "Output",
 CellChangeTimes->{{3.7546752481339417`*^9, 3.75467525307509*^9}, {
  3.754675349670836*^9, 3.754675466720985*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"generations", "=", "145"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pad", "=", 
   RowBox[{"generations", "+", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ca", "=", 
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{"rules", ",", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{"initialState", ",", "pad"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "generations", "}"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ca", "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}], ".", 
  RowBox[{"Range", "[", 
   RowBox[{
    RowBox[{"0", "-", "pad"}], ",", 
    RowBox[{
     RowBox[{"Length", "[", "initialState", "]"}], "-", "1", "+", "pad"}]}], 
   "]"}]}]}], "Input"],

Cell[BoxData["944"], "Output",
 CellChangeTimes->{3.754675631192073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"944", "-", 
  RowBox[{"5", "*", "145"}]}]], "Input",
 CellChangeTimes->{{3.754675528477303*^9, 3.754675575098174*^9}}],

Cell[BoxData["219"], "Output",
 CellChangeTimes->{3.7546755754433603`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetValue", "[", "generation_", "]"}], ":=", 
   RowBox[{
    RowBox[{"5", "*", "generation"}], "+", "219"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754675577323565*^9, 3.754675613046912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetValue", "[", "50000000000", "]"}]], "Input",
 CellChangeTimes->{{3.754675636766882*^9, 3.754675647300873*^9}}],

Cell[BoxData["250000000219"], "Output",
 CellChangeTimes->{{3.754675641488743*^9, 3.75467564799185*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7546757103962297`*^9, 3.7546757123073997`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 13 \[OpenCurlyDoubleQuote]Mine Cart \
Madness\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.75467572826889*^9, 3.754675735566774*^9}}],

Cell["\<\
Got pretty close with this one. I don\[CloseCurlyQuote]t recall where I \
stopped, but I think I was just about ready to run it on the full input. \
\>", "Text",
 CellChangeTimes->{{3.7586639172934427`*^9, 3.758663949071732*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Characters", ",", 
     RowBox[{"ReadList", "[", 
      RowBox[{
       RowBox[{
       "OpenRead", "[", 
        "\"\</Users/dmitron/Downloads/AdventOfCode/day13.txt\>\"", "]"}], ",",
        "String"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"input", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"carts", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pos2Complex", "@", 
           RowBox[{"PosT", "[", "#", "]"}]}], ",", "1", ",", "0"}], "}"}], 
        "&"}], ",", 
       RowBox[{"Position", "[", 
        RowBox[{"input", ",", "\"\<>\>\""}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pos2Complex", "@", 
           RowBox[{"PosT", "[", "#", "]"}]}], ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "&"}], ",", 
       RowBox[{"Position", "[", 
        RowBox[{"input", ",", "\"\<<\>\""}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pos2Complex", "@", 
           RowBox[{"PosT", "[", "#", "]"}]}], ",", "I", ",", "0"}], "}"}], 
        "&"}], ",", 
       RowBox[{"Position", "[", 
        RowBox[{"input", ",", "\"\<^\>\""}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Pos2Complex", "@", 
           RowBox[{"PosT", "[", "#", "]"}]}], ",", 
          RowBox[{"-", "I"}], ",", "0"}], "}"}], "&"}], ",", 
       RowBox[{"Position", "[", 
        RowBox[{"input", ",", "\"\<v\>\""}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pos2Complex", "[", "pos_", "]"}], ":=", 
   RowBox[{
    RowBox[{"pos", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"pos", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "I"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Complex2Pos", "[", "comp_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", "comp", "]"}], ",", 
     RowBox[{"Im", "[", "comp", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosT", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pos", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"7", "-", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IPosT", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "+", "7"}], ",", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Complex2Pos", "@", 
  RowBox[{"Pos2Complex", "[", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"IPosT", "@", 
  RowBox[{"PosT", "[", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"input", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<>\>\"", "\[Rule]", "\"\<-\>\""}], ",", 
      RowBox[{"\"\<<\>\"", "\[Rule]", "\"\<-\>\""}], ",", 
      RowBox[{"\"\<v\>\"", "\[Rule]", "\"\<|\>\""}], ",", 
      RowBox[{"\"\<^\>\"", "\[Rule]", "\"\<|\>\""}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"input", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Turn", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"n", ",", "3"}], "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"out", "=", "I"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"n", ",", "3"}], "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"out", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"n", ",", "3"}], "]"}], "\[Equal]", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"out", "=", 
         RowBox[{"-", "I"}]}]}], "]"}], ";", "\[IndentingNewLine]", "out"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdateCart", "[", "cart_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newCart", "=", "cart"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "=", 
       RowBox[{"IPosT", "@", 
        RowBox[{"Complex2Pos", "[", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nextChar", "=", 
       RowBox[{"input", "[", 
        RowBox[{"[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\</\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{"I", "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\</\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"-", "I"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\</\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"-", "1"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{"I", "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\</\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "I"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\<\\\\\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\<\\\\\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"-", "I"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{"I", "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\<\\\\\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"-", "1"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nextChar", "\[Equal]", "\"\<\\\\\>\""}], "&&", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "I"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{"I", "*", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nextChar", "\[Equal]", "\"\<+\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"cart", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"Turn", "[", 
             RowBox[{"cart", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newCart", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "++"}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nextChar", "\[Equal]", "\"\<-\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newCart", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nextChar", "\[Equal]", "\"\<|\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newCart", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"cart", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"cart", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "newCart"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CrashLocation", "[", "carts_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"locations", "=", 
       RowBox[{"Tally", "[", 
        RowBox[{"carts", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Tally", "[", 
         RowBox[{"carts", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "2"}], "&"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PerformLoop", "[", "carts_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"newCarts", "=", "carts"}], ",", "crash"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"crash", "=", "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"newCarts", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"UpdateCart", "[", 
           RowBox[{"newCarts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"CrashLocation", "[", "newCarts", "]"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"crash", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Break", "[", "]"}]}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "carts", "]"}], "]"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"crash", ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"CrashLocation", "[", "newCarts", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "newCarts", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosT2", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pos", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
     RowBox[{"6", "-", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7548643650877333`*^9, 3.754864404644834*^9}, {
   3.754864453487267*^9, 3.754864483936246*^9}, {3.754864584229931*^9, 
   3.7548645844371862`*^9}, {3.754882469791453*^9, 3.754882475656818*^9}, {
   3.755291908137587*^9, 3.755291908661778*^9}, {3.755291952842918*^9, 
   3.7552919641265087`*^9}, 3.755292032888509*^9, {3.755292074669051*^9, 
   3.75529208811432*^9}, {3.7552921427595654`*^9, 3.755292155772388*^9}, 
   3.7552937020988007`*^9, {3.7552939810723886`*^9, 3.7552940306145687`*^9}, {
   3.755300090527457*^9, 3.7553001006667223`*^9}, {3.7553009754992867`*^9, 
   3.755301050636388*^9}, {3.755301098575336*^9, 3.7553010988984823`*^9}, {
   3.755301651580577*^9, 3.755301656885058*^9}, {3.755302615765584*^9, 
   3.755302621690483*^9}, {3.7553026535246067`*^9, 3.755302654216195*^9}, {
   3.7553493396874733`*^9, 3.755349358216323*^9}, {3.7553494768047523`*^9, 
   3.755349491475562*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], "\[NoBreak]", 
           ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 512, 
             25563900668292351988, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 512, 
             25563900668292351988, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 512, 
             25563900668292351988, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[512]]], "Output",
 CellChangeTimes->{{3.7552918998061037`*^9, 3.7552919093803253`*^9}, 
   3.75529196480869*^9, 3.7552920333659067`*^9, 3.755292088684537*^9, 
   3.7552921561293917`*^9, 3.755292385322937*^9, 3.755293575051783*^9, 
   3.755293708187483*^9, {3.755293968067401*^9, 3.755293990256287*^9}, 
   3.755294031245865*^9, 3.7552943616588783`*^9, 3.755295592824943*^9, {
   3.755300091652361*^9, 3.755300101306613*^9}, 3.755300850932288*^9, 
   3.75530100009212*^9, {3.755301032507182*^9, 3.755301051067321*^9}, {
   3.755301083507612*^9, 3.755301118351376*^9}, 3.755301657450549*^9, {
   3.755302631617144*^9, 3.755302654842616*^9}, 3.755346355741124*^9, {
   3.755349343725594*^9, 3.755349358819848*^9}, {3.755349479233707*^9, 
   3.7553494920054913`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.7552918998061037`*^9, 3.7552919093803253`*^9}, 
   3.75529196480869*^9, 3.7552920333659067`*^9, 3.755292088684537*^9, 
   3.7552921561293917`*^9, 3.755292385322937*^9, 3.755293575051783*^9, 
   3.755293708187483*^9, {3.755293968067401*^9, 3.755293990256287*^9}, 
   3.755294031245865*^9, 3.7552943616588783`*^9, 3.755295592824943*^9, {
   3.755300091652361*^9, 3.755300101306613*^9}, 3.755300850932288*^9, 
   3.75530100009212*^9, {3.755301032507182*^9, 3.755301051067321*^9}, {
   3.755301083507612*^9, 3.755301118351376*^9}, 3.755301657450549*^9, {
   3.755302631617144*^9, 3.755302654842616*^9}, 3.755346355741124*^9, {
   3.755349343725594*^9, 3.755349358819848*^9}, {3.755349479233707*^9, 
   3.755349492041726*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.7552918998061037`*^9, 3.7552919093803253`*^9}, 
   3.75529196480869*^9, 3.7552920333659067`*^9, 3.755292088684537*^9, 
   3.7552921561293917`*^9, 3.755292385322937*^9, 3.755293575051783*^9, 
   3.755293708187483*^9, {3.755293968067401*^9, 3.755293990256287*^9}, 
   3.755294031245865*^9, 3.7552943616588783`*^9, 3.755295592824943*^9, {
   3.755300091652361*^9, 3.755300101306613*^9}, 3.755300850932288*^9, 
   3.75530100009212*^9, {3.755301032507182*^9, 3.755301051067321*^9}, {
   3.755301083507612*^9, 3.755301118351376*^9}, 3.755301657450549*^9, {
   3.755302631617144*^9, 3.755302654842616*^9}, 3.755346355741124*^9, {
   3.755349343725594*^9, 3.755349358819848*^9}, {3.755349479233707*^9, 
   3.755349492057173*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], "\[NoBreak]", 
           ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 521, 
             25563900668292351988, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 521, 
             25563900668292351988, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 521, 
             25563900668292351988, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[521]]], "Output",
 CellChangeTimes->{{3.7552918998061037`*^9, 3.7552919093803253`*^9}, 
   3.75529196480869*^9, 3.7552920333659067`*^9, 3.755292088684537*^9, 
   3.7552921561293917`*^9, 3.755292385322937*^9, 3.755293575051783*^9, 
   3.755293708187483*^9, {3.755293968067401*^9, 3.755293990256287*^9}, 
   3.755294031245865*^9, 3.7552943616588783`*^9, 3.755295592824943*^9, {
   3.755300091652361*^9, 3.755300101306613*^9}, 3.755300850932288*^9, 
   3.75530100009212*^9, {3.755301032507182*^9, 3.755301051067321*^9}, {
   3.755301083507612*^9, 3.755301118351376*^9}, 3.755301657450549*^9, {
   3.755302631617144*^9, 3.755302654842616*^9}, 3.755346355741124*^9, {
   3.755349343725594*^9, 3.755349358819848*^9}, {3.755349479233707*^9, 
   3.755349492074583*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PosT2", "@", 
  RowBox[{"ReIm", "@", 
   RowBox[{"First", "@", 
    RowBox[{"First", "@", 
     RowBox[{"NestWhile", "[", 
      RowBox[{"PerformLoop", ",", "carts", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], "&"}]}], 
      "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.755347366610183*^9, 3.755347377257588*^9}, {
   3.75534765354014*^9, 3.7553476560529547`*^9}, {3.7553485750897923`*^9, 
   3.755348592045167*^9}, 3.755348703918128*^9, {3.755349248326301*^9, 
   3.755349295052395*^9}, {3.75534938183529*^9, 3.755349382887505*^9}, {
   3.755349463512415*^9, 3.755349465927088*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"65", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.75534870424232*^9, 3.755348801402041*^9, {3.755349247077931*^9, 
   3.755349257463979*^9}, {3.7553492880613194`*^9, 3.755349295447809*^9}, {
   3.755349362325749*^9, 3.755349383163891*^9}, {3.755349466246461*^9, 
   3.755349494402915*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReIm", "@", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{"PerformLoop", ",", "carts", ",", "14"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", ";;", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755347332108501*^9, 3.755347336271966*^9}, {
   3.755347693890398*^9, 3.755347707122937*^9}, {3.755347756732964*^9, 
   3.755347897398758*^9}, {3.755347932090765*^9, 3.7553479408883657`*^9}, {
   3.755348008954077*^9, 3.755348009786125*^9}, {3.755348535609974*^9, 
   3.755348535818472*^9}, 3.75534931835019*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Day 14 \[OpenCurlyDoubleQuote]Chocolate \
Charts\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.754675772452956*^9, 3.7546758056097*^9}}],

Cell["\<\
This one is done, but the second part never finished even after something \
like 6 hours of compute time. I think this is another one of those instances \
where even doing it via Python would speed it up. That\[CloseCurlyQuote]s not \
fun though.\
\>", "Text",
 CellChangeTimes->{{3.758663979491523*^9, 3.758664031741387*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", "360781"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DoRecipes", "[", 
    RowBox[{"input0_", ",", "input1_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"input", "=", 
       RowBox[{"IntegerDigits", "[", "input0", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"current1", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"current2", "=", "2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"SequencePosition", "[", 
          RowBox[{"input", ",", 
           RowBox[{"IntegerDigits", "[", "input1", "]"}]}], "]"}], "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"input", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"input", ",", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"input", "[", 
               RowBox[{"[", "current1", "]"}], "]"}], "+", 
              RowBox[{"input", "[", 
               RowBox[{"[", "current2", "]"}], "]"}]}], "]"}]}], "]"}]}], ";",
          "\n", 
         RowBox[{"current1", "=", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"current1", "+", "1", "+", 
             RowBox[{"input", "[", 
              RowBox[{"[", "current1", "]"}], "]"}]}], ",", 
            RowBox[{"Length", "[", "input", "]"}], ",", "1"}], "]"}]}], ";", 
         "\n", 
         RowBox[{"current2", "=", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"current2", "+", "1", "+", 
             RowBox[{"input", "[", 
              RowBox[{"[", "current2", "]"}], "]"}]}], ",", 
            RowBox[{"Length", "[", "input", "]"}], ",", "1"}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "input"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"recipes", "=", 
   RowBox[{"DoRecipes", "[", 
    RowBox[{"37", ",", "input"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"ToString", ",", 
    RowBox[{"recipes", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"input", "+", "1"}], ";;", 
       RowBox[{"input", "+", "10"}]}], "]"}], "]"}]}], "]"}], "//", 
  "StringJoin"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"First", "@", 
   RowBox[{"First", "@", 
    RowBox[{"SequencePosition", "[", 
     RowBox[{"recipes", ",", 
      RowBox[{"IntegerDigits", "[", "input", "]"}]}], "]"}]}]}], "-", 
  "1"}]}], "Input",
 CellChangeTimes->{{3.7548719429910383`*^9, 3.754871947707305*^9}, 
   3.754880815218624*^9, {3.754881282338395*^9, 3.754881323652947*^9}, {
   3.7548813852482433`*^9, 3.754881599557222*^9}, 3.754939509430677*^9, {
   3.7549395880960693`*^9, 3.754939626006102*^9}, {3.7549396860509653`*^9, 
   3.754939749855957*^9}, {3.754939794414733*^9, 3.7549398273721*^9}, {
   3.754939879249989*^9, 3.754939932898494*^9}, {3.755349937147135*^9, 
   3.75534995235562*^9}, 3.755350076737433*^9}],

Cell[BoxData["18"], "Output",
 CellChangeTimes->{
  3.754939750277603*^9, {3.75493979732752*^9, 3.754939827907192*^9}, 
   3.754939880117323*^9, 3.754939919233591*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 655},
WindowMargins->{{Automatic, 89}, {Automatic, 25}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 383, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[988, 31, 2935, 66, 369, "Input"],
Cell[CellGroupData[{
Cell[3948, 101, 507, 10, 24, "Print"],
Cell[4458, 113, 507, 10, 24, "Print"]
}, Open  ]],
Cell[4980, 126, 65295, 1084, 214, 55022, 914, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[70324, 1216, 458, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[70807, 1227, 3555, 103, 285, "Input"],
Cell[CellGroupData[{
Cell[74387, 1334, 286, 7, 24, "Print"],
Cell[74676, 1343, 343, 8, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75080, 1358, 293, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[75398, 1366, 4284, 117, 432, "Input"],
Cell[CellGroupData[{
Cell[79707, 1487, 413, 8, 24, "Print"],
Cell[80123, 1497, 409, 8, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[80593, 1512, 330, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[80948, 1521, 5269, 140, 537, "Input"],
Cell[CellGroupData[{
Cell[86242, 1665, 287, 6, 24, "Print"],
Cell[86532, 1673, 285, 6, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86878, 1686, 307, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[87210, 1694, 4114, 91, 264, "Input"],
Cell[CellGroupData[{
Cell[91349, 1789, 337, 7, 24, "Print"],
Cell[91689, 1798, 335, 7, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[92051, 1809, 122, 1, 30, "Text"],
Cell[92176, 1812, 2047, 46, 138, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[94260, 1863, 237, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[94522, 1870, 5976, 165, 537, "Input"],
Cell[CellGroupData[{
Cell[100523, 2039, 431, 9, 24, "Print"],
Cell[100957, 2050, 437, 9, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101443, 2065, 1492, 45, 180, "Input"],
Cell[102938, 2112, 25689, 436, 1418, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128664, 2553, 7211, 211, 831, "Input"],
Cell[135878, 2766, 547, 16, 32, "Output"],
Cell[CellGroupData[{
Cell[136450, 2786, 258, 6, 24, "Print"],
Cell[136711, 2794, 262, 6, 24, "Print"]
}, Open  ]],
Cell[136988, 2803, 2387, 56, 1467, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139412, 2864, 1933, 52, 159, "Input"],
Cell[141348, 2918, 314, 4, 32, "Output"],
Cell[141665, 2924, 315, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142017, 2933, 272, 8, 32, "Input"],
Cell[142292, 2943, 860, 30, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[143201, 2979, 323, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[143549, 2987, 5204, 124, 474, "Input"],
Cell[148756, 3113, 251, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149044, 3121, 13818, 334, 1461, "Input"],
Cell[162865, 3457, 2150, 46, 58, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[165064, 3509, 232, 3, 36, "Subsection"],
Cell[165299, 3514, 159, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[165483, 3521, 5239, 127, 663, "Input"],
Cell[170725, 3650, 147, 2, 32, "Output"],
Cell[170875, 3654, 143, 2, 32, "Output"]
}, Open  ]],
Cell[171033, 3659, 302, 6, 49, "Text"],
Cell[171338, 3667, 953, 21, 75, "Input"],
Cell[172294, 3690, 295, 5, 49, "Text"],
Cell[172592, 3697, 784, 21, 75, "Input"],
Cell[173379, 3720, 635, 10, 106, "Text"],
Cell[174017, 3732, 1963, 49, 222, "Input"],
Cell[175983, 3783, 1460, 38, 180, "Input"],
Cell[177446, 3823, 922, 28, 96, "Input"],
Cell[CellGroupData[{
Cell[178393, 3855, 934, 25, 96, "Input"],
Cell[CellGroupData[{
Cell[179352, 3884, 263, 6, 24, "Print"],
Cell[179618, 3892, 263, 6, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[179942, 3905, 231, 3, 36, "Subsection"],
Cell[180176, 3910, 1143, 17, 144, "Text"],
Cell[CellGroupData[{
Cell[181344, 3931, 10826, 244, 1545, "Input"],
Cell[192173, 4177, 170, 2, 32, "Output"]
}, Open  ]],
Cell[192358, 4182, 384, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[192767, 4197, 142, 2, 32, "Input"],
Cell[192912, 4201, 115, 3, 32, "Output"]
}, Open  ]],
Cell[193042, 4207, 340, 8, 32, "Input"],
Cell[193385, 4217, 181, 5, 32, "Input"],
Cell[193569, 4224, 193, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[193787, 4232, 155, 3, 32, "Input"],
Cell[193945, 4237, 94, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194076, 4244, 186, 4, 32, "Input"],
Cell[194265, 4250, 149, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194451, 4258, 261, 6, 32, "Input"],
Cell[194715, 4266, 39299, 844, 2196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234051, 5115, 94, 1, 32, "Input"],
Cell[234148, 5118, 10001, 214, 558, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244186, 5337, 246, 7, 32, "Input"],
Cell[244435, 5346, 9874, 211, 558, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[254358, 5563, 161, 2, 36, "Subsection"],
Cell[254522, 5567, 1667, 45, 117, "Input"],
Cell[256192, 5614, 932, 31, 75, "Input"],
Cell[CellGroupData[{
Cell[257149, 5649, 416, 11, 32, "Input"],
Cell[257568, 5662, 4315, 82, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261920, 5749, 938, 26, 75, "Input"],
Cell[262861, 5777, 147, 2, 32, "Output"]
}, Open  ]],
Cell[263023, 5782, 794, 24, 75, "Input"],
Cell[CellGroupData[{
Cell[263842, 5810, 415, 10, 32, "Input"],
Cell[264260, 5822, 3407, 52, 414, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[267716, 5880, 211, 3, 36, "Subsection"],
Cell[267930, 5885, 100, 1, 30, "Text"],
Cell[268033, 5888, 2937, 85, 264, "Input"],
Cell[CellGroupData[{
Cell[270995, 5977, 431, 10, 54, "Input"],
Cell[271429, 5989, 142, 2, 32, "Output"],
Cell[271574, 5993, 211, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271822, 6003, 558, 12, 32, "Input"],
Cell[272383, 6017, 410, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272830, 6030, 532, 11, 54, "Input"],
Cell[273365, 6043, 167, 2, 32, "Output"],
Cell[273535, 6047, 239, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[273823, 6058, 223, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[274071, 6065, 2974, 80, 243, "Input"],
Cell[277048, 6147, 95, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277180, 6153, 410, 9, 32, "Input"],
Cell[277593, 6164, 2037, 39, 156, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279667, 6208, 640, 17, 54, "Input"],
Cell[280310, 6227, 146, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280493, 6234, 776, 24, 96, "Input"],
Cell[281272, 6260, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281381, 6266, 142, 3, 32, "Input"],
Cell[281526, 6271, 74, 1, 32, "Output"]
}, Open  ]],
Cell[281615, 6275, 240, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[281880, 6285, 137, 2, 32, "Input"],
Cell[282020, 6289, 104, 1, 32, "Output"]
}, Open  ]],
Cell[282139, 6293, 96, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[282272, 6299, 160, 2, 36, "Subsection"],
Cell[282435, 6303, 239, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[282699, 6311, 18830, 521, 1692, "Input"],
Cell[301532, 6834, 8942, 220, 95, "Output"],
Cell[310477, 7056, 817, 13, 32, "Output"],
Cell[311297, 7071, 817, 13, 32, "Output"],
Cell[312117, 7086, 8988, 221, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321142, 7312, 668, 15, 32, "Input"],
Cell[321813, 7329, 338, 7, 32, "Output"]
}, Open  ]],
Cell[322166, 7339, 585, 12, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[322788, 7356, 158, 2, 36, "Subsection"],
Cell[322949, 7360, 336, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[323310, 7370, 3119, 77, 327, "Input"],
Cell[326432, 7449, 167, 3, 32, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

